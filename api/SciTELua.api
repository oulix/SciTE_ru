assert (v [, message])\n  error if v nil or false, otherwise returns v
collectgarbage ([limit])\n  set threshold to limit KBytes, default 0, may run GC

coroutine.create
coroutine.resume
coroutine.status
coroutine.wrap
coroutine.yield
create (f)\n  creates coroutine from function f, returns coroutine
resume (co, val1, ...)\n  continues execution of co, returns bool status plus any values
status (co)\n  returns co status: "running", "suspended" or "dead"
wrap (f)\n  creates coroutine with body f, returns function that resumes co
yield (val1, ...)\n  suspend execution of calling coroutine

debug.debug
debug.gethook
debug.getinfo
debug.getlocal
debug.getupvalue
debug.sethook
debug.setlocal
debug.setupvalue
debug.traceback
debug ()\n  enters interactive debug mode, line with only "cont" terminates
gethook ()\n  returns current hook function, hook mask, hook count
getinfo (function [, what])\n  returns table with information about a function
getlocal (level, local)\n  returns name and value of local variable with index local at stack level
getupvalue (func, up)\n  returns name and value of upvalue with index up of function func
sethook (hook, mask [, count])\n  sets given function as a hook, mask="[crl]"
setlocal (level, local, value)\n  sets local variable with index local at stack level with value
setupvalue (func, up, value)\n  sets upvalue with index up of function func with value
traceback ([message])\n  returns a string with a traceback of the call stack

dofile (filename)\n  executes as Lua chunk, default stdin, returns value
dostring (s)\n  in SciTE, executes s as a Lua string, like Lua's dostring
error (message [, level])\n  terminates protected func, never returns, level 1 (default), 2=parent
gcinfo ()\n  returns dynamic mem in use (KB), and current GC threshold (KB)
getfenv (f)\n  gets env, f can be a function or number (stack level, default=1), 0=global env
getmetatable (object)\n  returns metatable of given object, otherwise nil

io.close
io.flush
io.input
io.lines
io.open
io.output
io.popen
io.read
io.tmpfile
io.type
io.write
#$file=io%.tmpfile%s*%b()
#$file=io%.popen%s*%b()
#$file=io%.open%s*%b()
#$file=io%.output%s*%b()
#$file=io%.input%s*%b()
file:close
file:flush
file:input
file:lines
file:open
file:output
file:read
file:tmpfile
file:type
file:write
close ([file])\n  closes file, or the default output file
flush ()\n  flushes the default output file
input ([file])\n  opens file in text mode, sets as default input file, or returns current default input file
lines ([filename])\n  open file in read mode, returns iterator function to return lines, nil ends
open (filename [, mode])\n  opens file in specified mode "[rawb+]", returns handle or nil
popen (prog [, mode])\n  run program in specified mode "[rawb+]", returns handle or nil
output ([file])\n  opens file in text mode, sets as default output file, or returns current default output file
read (format1, ...)\n  reads file according to given formats, returns read values or nil
tmpfile ()\n  returns a handle for a temporary file, opened in update mode
type (obj)\n  returns "file" if obj is an open file handle, "close file" if closed, or nil if not a file handle
write (value1, ...)\n  writes strings or numbers to file

ipairs (t)\n  returns an iterator function, table t and 0
loadfile (filename)\n  loads chunk without execution, returns chunk as function, else nil plus error
loadlib (libname, funcname)\n  links to dynamic library libname, returns funcname as a C function
loadstring (string [, chunkname])\n  loads string as chunk, returns chunk as function, else nil plus error

math.abs
math.acos
math.asin
math.atan
math.atan2
math.ceil
math.cos
math.deg
math.exp
math.floor
math.frexp
math.ldexp
math.log
math.log10
math.max
math.min
math.mod
math.pow
math.rad
math.random
math.randomseed
math.sin
math.sqrt
math.tan
abs (v)\n  returns absolute value of v
acos (v)\n  returns arc cosine value of v in radians
asin (v)\n  returns arc sine value of v in radians
atan (v)\n  returns arc tangent value of v in radians
atan2 (v1, v2)\n  returns arc tangent value of v1/v2 in radians
ceil (v)\n  returns smallest integer >= v
cos (rad)\n  returns cosine value of angle rad
deg (rad)\n  returns angle in degrees of radians rad
exp (v)\n  returns e^v
floor (v)\n  returns largest integer <= v
frexp (v)\n  returns mantissa [0.5,1) and exponent values of v
ldexp (v1, v2)\n  returns v1*2^v2
log (v)\n  returns natural logarithm of v
log10 (v)\n  returns logarithm 10 of v
max (v1, ...)\n  returns maximum in a list of one or more values
min (v1, ...)\n  returns minimum in a list of one or more values
mod (v1, v2)\n  returns remainder of v1/v2 which is v1 - iV2 for some integer i
pow (v1, v2)\n  returns v1 raised to the power of v2
rad (deg)\n  returns angle in radians of degrees deg
random ([n [, u]])\n  returns random real [0,1), integer [1,n] or real [1,u] (with n=1)
randomseed (seed)\n  sets seed for pseudo-random number generator
sin (rad)\n  returns sine value of angle rad 
sqrt (v)\n  returns square root of v
tan (rad)\n  returns tangent value of angle rad  

next (table [, index])\n  returns next index,value pair, if index=nil (default), returns first index

os.clock
os.date
os.difftime
os.execute
os.utf8execute
os.exit
os.getenv
os.remove
os.utf8remove
os.rename
os.utf8rename
os.setlocale
os.time
os.tmpname
clock ()\n  returns CPU time used by program in seconds
date ([format [, time]])\n  returns a string or table containing date and time, "*t" returns a table
difftime (t2, t1)\n  returns number of seconds from time t1 to time t2
execute (command)\n  executes command using C function system, returns status code
utf8execute (utf8 command)\n  executes command using C function system, returns status code (only SciTE-Ru)
exit ([code])\n  terminates host program with optional code, default is success code
getenv (varname)\n  returns value of environment variable varname. nil if not defined
remove (filename)\n  deletes file with given name, nil if fails
utf8remove (utf8 filename)\n  deletes file with given name, nil if fails (only SciTE-Ru)
rename (oldname, newname)\n  renames file oldname to newname, nil if fails
utf8rename (utf8 oldname, utf8 newname)\n  renames file oldname to newname, nil if fails (only SciTE-Ru)
setlocale (locale [, category])\n  set current locale of program, returns name of new locate or nil
time ([table])\n  returns current time (usually seconds) or time as represented by table
tmpname ()\n  returns a string with a filename for a temporary file (dangerous! tmpfile is better)

shell.msgbox
shell.inputbox
shell.getfileattr
shell.setfileattr
shell.exec
shell.findfiles
shell.fileexists
shell.to_utf8
shell.from_utf8
shell.getclipboardtext
msgbox (<Text>, <Title>, <Options>)\n Message Box. Return select button  /extern lib "shell"/
inputbox (<Title>, <Prompt>, <Default>, <funcCheck>, <minWidth>)\n Input Box. Return input string  /extern lib "shell"/
getfileattr (<FileName>)\n return File Attribute as number  /extern lib "shell"/
setfileattr (<FileName>, <FileAttr>)\n Set File Attribute  /extern lib "shell"/
exec (strCommand, [strOperation], [boolNoShow], [bWaitOnReturn])\n /extern lib "shell"/
findfiles (<FileMask>)\n return list of files by mask  /extern lib "shell"/
fileexists (<FileName>)\n return true if file or folder exists /extern lib "shell"/
to_utf8 (text)\n convert text to UTF-8 /extern lib "shell"/
from_utf8 (text)\n convert text from UTF-8 /extern lib "shell"/
getclipboardtext()\n get text from clipboard /extern lib "shell"/

gui.window
gui.panel
gui.set_panel
gui.tabbar
gui.list
gui.memo
gui.pass_focus
gui.toolbar
gui.open_dlg
gui.save_dlg
gui.select_dir_dlg
gui.colour_dlg
gui.files
gui.chdir
gui.message
gui.prompt_value
gui.run
window ("title")\n create new top-level windows  /extern lib "gui"/
panel (width)\n create panel  /extern lib "gui"/
set_panel (panel_name, "right")\n panel attached to the left or the right side of the editor pane  /extern lib "gui"/
set_panel ()\n remove the panel and hide it  /extern lib "gui"/
tabbar (win_name)\n create tabbar control from window or panel  /extern lib "gui"/
list (caption, multiselect)\n create standard list view (set caption=>true, set multiselect=>false)  /extern lib "gui"/
memo ()\n creates a Windows Rich Text control  /extern lib "gui"/
pass_focus ()\n pass keyboard focus to editor  /extern lib "gui"/
toolbar ("title", {"icon1.bmp:item1 caption|func1", "FILEOPEN:Open|IDM_OPEN"}, icons_size, "c:\\Path to icons\\button")
open_dlg (caption,filter)\n standard Open File Dialog to the user, with the specified caption and filter  /extern lib "gui"/
save_dlg (caption,filter)\n standard Save File Dialog to the user, with the specified caption and filter  /extern lib "gui"/
select_dir_dlg (caption)\n standard Open Folder Dialog to the user, with the specified caption  /extern lib "gui"/
colour_dlg (default_colour)\n open the Windows Colour choser  /extern lib "gui"/
files (path_with_mask, true)\n list of files (nil/false) or folders (true)  /extern lib "gui"/
chdir (dir)\n change current dir  /extern lib "gui"/
message (msg,kind)\n message box with the desired message text  /extern lib "gui"/
prompt_value (prompt,default)\n ask the user to enter a single string value  /extern lib "gui"/
run (program_or_document, parameters)\n launch a program or open a document  /extern lib "gui"/

#$win=gui%.window%s*%b()
win:add(list1, "top", height)\n "top" or "bottom"
win:add(list1, "left", width)\n "left" or "right"
win:client(list1)\n list or memo
win:size(width, height)
win:position(x, y)
win:show()
win:hide()
win:context_menu {'item1|func1', 'item2|func2'}
win:bounds()\n return visible, x, y, width, height

#$pan=gui%.panel%s*%b()
pan:add(list1, "top", height)\n "top" or "bottom"
pan:add(list1, "left", width)\n "left" or "right"
pan:client(list1)\n list or memo
pan:size(width, height)
pan:context_menu {'item1|func1', 'item2|func2'}
pan:bounds()\n return visible, x, y, width, height

#$tab=gui%.tabbar%b()
tab:client(list1)\n list or memo
tab:add_tab("Tab1 heading", list1)
tab:on_select(function(index) print(index) end)

#$lst=gui%.list%s*%b()
lst:size(width, height)\n Note: Changes either height or width (one of parameters is ignored)
lst:set_list_colour("#FFFFFF", "#000000")\n foreground, background
lst:set_selected_item(index)
lst:add_column('Title1', width)\n Note: If gui.list(true)
lst:add_item ({'Caption1','Caption2'}, {data1, data2})
lst:delete_item(index)
lst:insert_item(index, {'Caption1','Caption2'}, {data1, data2})
lst:count()
lst:get_item_data(index)
lst:get_item_text(index)
lst:get_selected_item()
lst:bounds()\n return visible, x, y, width, height
lst:on_select(function(index) print(index) end)
lst:on_double_click(function(index) print(index) end)
lst:on_key(function(key) print(key) end)

#$mem=gui%.memo%s*%b()
mem:size(width, height)\n Note: Changes either height or width (one of parameters is ignored)
mem:set_text('{\\rtf{\\fonttbl{\\f0\\fcharset0 Helv;}}\\f0\\fs16'..'sample text'..'}')
mem:set_memo_colour("#FFFFFF", "#000000")\n foreground, background
mem:bounds()

pairs (t)\n  returns the next function and table t plus a nil, iterates over all key-value pairs
pcall (f, arg1, arg2, ...)\n  protected mode call, catches errors, returns status code first (true=success)
print (e1, e2, ...)\n  prints values to stdout using tostring
rawequal (v1, v2)\n  non-metamethod v1==v2, returns boolean
rawget (table, index)\n  non-metamethod get value of table[index], index != nil
rawset (table, index, value)\n  non-metamethod set value of table[index], index != nil
require (packagename)\n loads package, updates _LOADED, returns boolean
setfenv (f, table)\n  sets env, f can be a function or number (stack level, default=1), 0=global env
setmetatable (table, metatable)\n  sets metatable, nil to remove metatable

#$string_value='.-'
#$string_value=".-"
#$string_value=%[%[.-%]%]
#$string_value=tostring%s*%b()
#$string_value=[%w_]+:char%s*%b()
#$string_value=[%w_]+:format%s*%b()
#$string_value=[%w_]+:gsub%s*%b()
#$string_value=[%w_]+:lower%s*%b()
#$string_value=[%w_]+:match%s*%b()
#$string_value=[%w_]+:rep%s*%b()
#$string_value=[%w_]+:sub%s*%b()
#$string_value=[%w_]+:upper%s*%b()
#$string_value=[%w_]+:to_utf8%s*%b()
#$string_value=[%w_]+:from_utf8%s*%b()
#$string_value=[%w_]+:utf8upper%s*%b()
#$string_value=[%w_]+:utf8lower%s*%b()
#$string_value=string%.char%s*%b()
#$string_value=string%.format%s*%b()
#$string_value=string%.gsub%s*%b()
#$string_value=string%.lower%s*%b()
#$string_value=string%.match%s*%b()
#$string_value=string%.rep%s*%b()
#$string_value=string%.sub%s*%b()
#$string_value=string%.upper%s*%b()
#$string_value=string%.to_utf8%s*%b()
#$string_value=string%.from_utf8%s*%b()
#$string_value=string%.utf8upper%s*%b()
#$string_value=string%.utf8lower%s*%b()
#$string_value=table%.concat%s*%b()
#$string_value=editor:textrange%s*%b()
#$string_value=scite%.ConstantName%s*%b()
#$string_value=props%s*%b[]
#$string_value=editor:GetCurLine%s%b()
#$string_value=editor:GetLine%s%b()
#$string_value=editor:GetProperty%s%b()
#$string_value=editor:GetPropertyExpanded%s%b()
#$string_value=editor:GetSelText%s%b()
#$string_value=editor:GetText%s%b()
#$string_value=editor:TargetAsUTF%s%b()
#string_value=editor.AutoCFillUps
#$string_value=editor%.KeyWords%s*%b[]
#string_value=editor:GetLexerLanguage()
#$string_value=editor%.Property%s*%b[]
#$string_value=editor%.StyleFont%s*%b[]
#string_value=editor.WhitespaceChars
#string_value=editor.WordChars
#$string_value=shell%.inputbox%s*%b()
string_value:byte
string_value:char
string_value:dump
string_value:find
string_value:format
string_value:gfind
string_value:gsub
string_value:len
string_value:lower
string_value:match
string_value:gmatch
string_value:rep
string_value:sub
string_value:upper
string_value:to_utf8
string_value:from_utf8
string_value:utf8upper
string_value:utf8lower
string_value:utf8len
string.byte
string.char
string.dump
string.find
string.format
string.gfind
string.gsub
string.len
string.lower
string.match
string.gmatch
string.rep
string.sub
string.upper
string.to_utf8
string.from_utf8
string.utf8upper
string.utf8lower
string.utf8len
byte (s [, i])\n returns numerical code, nil if index out of range, default i=1
char (i1, i2, ...)\n returns a string built from 0 or more integers
dump (function)\n returns binary representation of function, used with loadstring
find (s, pattern [, init [, plain]])\n matches pattern in s, returns start,end indices, else nil
format (formatstring, e1, e2, ...)\n returns formatted string, printf-style
gfind (s, pat)\n returns iterator function that returns next captures from pattern pat on s \n /DEPRECATED - renamed to gmatch in Lua 5.1/
gsub (s, pat, repl [, n])\n returns copy of s with pat replaced by repl, and substitutions made
len (s)\n returns string length
lower (s)\n returns string with letters in lower case
rep (s, n)\n returns string with n copies of string s
match (s, pattern [, init])\n looks for the first match of pattern in the string s \n {rus} поиск первого вхождения шаблона pattern в строку s
gmatch (s, pattern)\n returns iterator function that returns next captures from pattern pat on s \n {rus} возвращает итератор, который, при каждом вызове, возвращает следующее захваченное значение
sub (s, i [, j])\n returns substring from index i to j of s, default j=-1 (string length)
upper (s)\n returns string with letters in upper case
to_utf8(string text, codePage in) = utf8text\n converts string from input codepage to UTF-8 (only SciTE-Ru)\n{rus} конвертирует переданную строку из указанной кодировки в UTF-8
from_utf8(string utf8text, codePage out) = text\n converts string from UTF-8 to output codepage (only SciTE-Ru)\n{rus} конвертирует переданную строку из UTF-8 в указанную кодировку
utf8upper(string) = string\n returns utf8 string with letters in upper case (only SciTE-Ru)\n{rus} возвращает переданную UTF-8 строку в верхнем регистре
utf8lower(string) = string\n returns utf8 string with letters in lower case (only SciTE-Ru)\n{rus} возвращает переданную UTF-8 строку в нижнем регистре
utf8len(string) = int chars\n returns utf8 string length (only SciTE-Ru)\n{rus} возвращает кол-во символов UTF-8 строки

table.concat
table.foreach
table.foreachi
table.getn
table.insert
table.remove
table.setn
table.sort
concat (table [, sep [, i [, j]]])\n returns concatenated table elements i to j separated by sep
foreach (table, f)\n executes f(index,value) over all elements of table, returns first non-nil of f
foreachi (table, f)\n executes f(index,value) in sequential order 1 to n, returns first non-nil of f
getn (table)\n returns size of table, or n field, or table.setn value, or 1 less first index with nil value
insert (table, [pos,] value)\n insert value at location pos in table, default pos=n+1
remove (table [, pos])\n removes element at pos from table, default pos=n
setn (table, n)\n sets size of table, n field of table if it exists
sort (table [, comp])\n sorts in-place elements 1 to n, comp(v1,v2) should return true if v1<v2

tonumber (e [, base])\n convert to number, returns number, nil if non-convertible, 2<=base<=36
tostring (e)\n convert to string, returns string
type (v)\n returns type of v as a string
unpack (list)\n returns all elements from list
xpcall (f, err)\n pcall function f with new error handler err

_ALERT (e1, e2, ...)\n prints values to stdout using tostring
_VERSION ()\n returns version of Lua

trace(s)\n in SciTE, writes s to the output pane (no prefix, no newlines)
dostring(s)\n executes s as a Lua string, like Lua 4's dostring

#editor=output

editor:append
editor:findtext
editor:insert
editor:match
editor:remove
editor:textrange
editor:codepage

append(string text)\n appends text to the end of the document
findtext(string searchText, [int searchFlags], [int searchStart, [int searchEnd]]) = int startMatch, int endMatch\n Find some text in the document. Returns the start and end of the first match, or nil if no match
insert(int pos, string text)\n inserts text at the specified position
match(string searchText, [flags], [int startPos])\n returns a generator that allows you to loop over the matches\ni.e. for m in output:match(text, flags) do ... end
remove(int startPos, int endPos)\n removes the text in the range
textrange(int startPos, int endPos)\n gets the text in the specified range
codepage() = int codePage\n return codepage of current pane (only SciTE-Ru)

scite.CheckMenus
scite.ConstantName
scite.GetTranslation
scite.InsertAbbreviation
scite.MenuCommand
scite.Open
scite.Perform
scite.ReloadStartupScript
scite.SendEditor
scite.SendOutput
scite.ShowParametersDialog
scite.UpdateStatusBar

CheckMenus()\n allows to update the state of the menu and toolbar (only SciTE-Ru)
ConstantName(number)\n returns the symbolic name of a Scintilla / SciTE constant
GetTranslation(text)\n returns translation of the text (only SciTE-Ru)
InsertAbbreviation(text)\n insert a text, on a format similar to abbreviation (only SciTE-Ru)
MenuCommand(IDM_constant)\n run specifed menu command
Open(filename)\n opens a file in a new buffer
Perform("action")\n execute commands of SciTE Director Interface (only SciTE-Ru)
ReloadStartupScript()\n reload startup script
SendEditor(SCI_constant, ...)\n sends a message to the editor pane
SendOutput(SCI_constant, ...)\n sends a message to the output pane
ShowParametersDialog(text)\n show parametrs dialog with message (txt) and return result action (only SciTE-Ru)
UpdateStatusBar([bUpdateSlowData])\n perform update status bar

editor:AddRefDocument
editor:AddSelection
editor:AddStyledText
editor:AddText
editor:AddUndoAction
editor:Allocate
editor:AnnotationClearAll
editor:AppendText
editor:AssignCmdKey
editor:AutoCActive
editor:AutoCCancel
editor:AutoCComplete
editor:AutoCPosStart
editor:AutoCSelect
editor:AutoCShow
editor:AutoCStops
editor:BackTab
editor:BeginUndoAction
editor:BraceBadLight
editor:BraceBadLightIndicator
editor:BraceHighlight
editor:BraceHighlightIndicator
editor:BraceMatch
editor:CallTipActive
editor:CallTipAddHlt
editor:CallTipCancel
editor:CallTipClearHlt
editor:CallTipPosStart
editor:CallTipSetHlt
editor:CallTipSetWordWrap
editor:CallTipShow
editor:CallTipUpdateHlt
editor:CanPaste
editor:CanRedo
editor:CanUndo
editor:Cancel
editor:ChangeLexerState
editor:CharLeft
editor:CharLeftExtend
editor:CharLeftRectExtend
editor:CharPositionFromPoint
editor:CharPositionFromPointClose
editor:CharRight
editor:CharRightExtend
editor:CharRightRectExtend
editor:ChooseCaretX
editor:Clear
editor:ClearAll
editor:ClearAllCmdKeys
editor:ClearCmdKey
editor:ClearDocumentStyle
editor:ClearRegisteredImages
editor:ClearSelections
editor:Colourise
editor:ContractedFoldNext
editor:ConvertEOLs
editor:Copy
editor:CopyAllowLine
editor:CopyRange
editor:CopyText
editor:CountCharacters
editor:CreateDocument
editor:CreateLoader
editor:Cut
editor:DelLineLeft
editor:DelLineRight
editor:DelWordLeft
editor:DelWordRight
editor:DelWordRightEnd
editor:DeleteBack
editor:DeleteBackNotLine
editor:DeleteRange
editor:DescribeKeyWordSets
editor:DescribeProperty
editor:DocLineFromVisible
editor:DocumentEnd
editor:DocumentEndExtend
editor:DocumentStart
editor:DocumentStartExtend
editor:EditToggleOvertype
editor:EmptyUndoBuffer
editor:EncodedFromUTF8
editor:EndUndoAction
editor:EnsureVisible
editor:EnsureVisibleEnforcePolicy
editor:FindColumn
editor:FindIndicatorFlash
editor:FindIndicatorHide
editor:FindIndicatorShow
editor:FindText
editor:FormFeed
editor:FormatRange
editor:GetCurLine
editor:GetHotspotActiveBack
editor:GetHotspotActiveFore
editor:GetLastChild
editor:GetLine
editor:GetLineSelEndPosition
editor:GetLineSelStartPosition
editor:GetRangePointer
editor:GetSelText
editor:GetStyledText
editor:GetText
editor:GetTextRange
editor:GotoLine
editor:GotoPos
editor:GrabFocus
editor:HideLines
editor:HideSelection
editor:Home
editor:HomeDisplay
editor:HomeDisplayExtend
editor:HomeExtend
editor:HomeRectExtend
editor:HomeWrap
editor:HomeWrapExtend
editor:IndicatorAllOnFor
editor:IndicatorClearRange
editor:IndicatorEnd
editor:IndicatorFillRange
editor:IndicatorStart
editor:IndicatorValueAt
editor:InsertText
editor:LineCopy
editor:LineCut
editor:LineDelete
editor:LineDown
editor:LineDownExtend
editor:LineDownRectExtend
editor:LineDuplicate
editor:LineEnd
editor:LineEndDisplay
editor:LineEndDisplayExtend
editor:LineEndExtend
editor:LineEndRectExtend
editor:LineEndWrap
editor:LineEndWrapExtend
editor:LineFromPosition
editor:LineLength
editor:LineScroll
editor:LineScrollDown
editor:LineScrollUp
editor:LineTranspose
editor:LineUp
editor:LineUpExtend
editor:LineUpRectExtend
editor:LinesJoin
editor:LinesSplit
editor:LoadLexerLibrary
editor:LowerCase
editor:MarginTextClearAll
editor:MarkerAdd
editor:MarkerAddSet
editor:MarkerDefine
editor:MarkerDefinePixmap
editor:MarkerDefineRGBAImage
editor:MarkerDelete
editor:MarkerDeleteAll
editor:MarkerDeleteHandle
editor:MarkerEnableHighlight
editor:MarkerGet
editor:MarkerLineFromHandle
editor:MarkerNext
editor:MarkerPrevious
editor:MarkerSymbolDefined
editor:MoveCaretInsideView
editor:MoveSelectedLinesDown
editor:MoveSelectedLinesUp
editor:NewLine
editor:Null
editor:PageDown
editor:PageDownExtend
editor:PageDownRectExtend
editor:PageUp
editor:PageUpExtend
editor:PageUpRectExtend
editor:ParaDown
editor:ParaDownExtend
editor:ParaUp
editor:ParaUpExtend
editor:Paste
editor:PointXFromPosition
editor:PointYFromPosition
editor:PositionAfter
editor:PositionBefore
editor:PositionFromLine
editor:PositionFromPoint
editor:PositionFromPointClose
editor:PrivateLexerCall
editor:PropertyNames
editor:PropertyType
editor:Redo
editor:RegisterImage
editor:RegisterRGBAImage
editor:ReleaseDocument
editor:ReplaceSel
editor:ReplaceTarget
editor:ReplaceTargetRE
editor:RotateSelection
editor:ScrollCaret
editor:ScrollToEnd
editor:ScrollToStart
editor:SearchAnchor
editor:SearchInTarget
editor:SearchNext
editor:SearchPrev
editor:SelectAll
editor:SelectionDuplicate
editor:SetCharsDefault
editor:SetEmptySelection
editor:SetFoldHighlightColour
editor:SetFoldMarginColour
editor:SetFoldMarginHiColour
editor:SetHotspotActiveBack
editor:SetHotspotActiveFore
editor:SetLengthForEncode
editor:SetSavePoint
editor:SetSel
editor:SetSelBack
editor:SetSelection
editor:SetSelFore
editor:SetStyling
editor:SetStylingEx
editor:SetText
editor:SetVisiblePolicy
editor:SetWhitespaceBack
editor:SetWhitespaceFore
editor:SetXCaretPolicy
editor:SetYCaretPolicy
editor:ShowLines
editor:StartRecord
editor:StartStyling
editor:StopRecord
editor:StutteredPageDown
editor:StutteredPageDownExtend
editor:StutteredPageUp
editor:StutteredPageUpExtend
editor:StyleClearAll
editor:StyleResetDefault
editor:SwapMainAnchorCaret
editor:Tab
editor:TargetAsUTF8
editor:TargetFromSelection
editor:TextHeight
editor:TextWidth
editor:ToggleCaretSticky
editor:ToggleFold
editor:Undo
editor:UpperCase
editor:UsePopUp
editor:UserListShow
editor:VCHome
editor:VCHomeDisplay
editor:VCHomeDisplayExtend
editor:VCHomeExtend
editor:VCHomeRectExtend
editor:VCHomeWrap
editor:VCHomeWrapExtend
editor:VerticalCentreCaret
editor:VisibleFromDocLine
editor:WordEndPosition
editor:WordLeft
editor:WordLeftEnd
editor:WordLeftEndExtend
editor:WordLeftExtend
editor:WordPartLeft
editor:WordPartLeftExtend
editor:WordPartRight
editor:WordPartRightExtend
editor:WordRight
editor:WordRightEnd
editor:WordRightEndExtend
editor:WordRightExtend
editor:WordStartPosition
editor:WrapCount
editor:ZoomIn
editor:ZoomOut

AddRefDocument(int pDocPointer)\n Create a new document object. Starts with reference count of 1 and not selected into editor. Extend life of document
AddSelection(int caret, int anchor) = int length\n Add a selection
AddStyledText(int length, cells c)\n Add array of cells to document
AddText(string text)\n Add text to the document at current position
AddUndoAction(int token, int flags)\n Add a container action to the undo stack
Allocate(int bytes)\n Enlarge the document to a particular size of text bytes
AnnotationClearAll()\n Clear the annotations from all lines
AppendText(string text)\n Append a string to the end of the document without changing the selection
AssignCmdKey(int keyCode, int keyModifier, int sciCommand)\n When key+modifier combination km is pressed perform msg
AutoCActive() = bool\n Is there an auto-completion list visible?
AutoCCancel()\n Remove the auto-completion list from the screen
AutoCComplete()\n User has selected an item so remove the list and insert the selection
AutoCPosStart() = int pos\n Retrieve the position of the caret when the auto-completion list was displayed
AutoCSelect(string select | int select)\n Select the item in the auto-completion list that starts with a string
AutoCShow(int lenEntered, string itemList)\n Display a auto-completion list. The lenEntered parameter indicates how many characters before the caret should be used to provide context
AutoCStops(string charSet)\n Define a set of character that when typed cancel the auto-completion list
BackTab()\n Dedent the selected lines
BeginUndoAction()\n Start a sequence of actions that is undone and redone as a unit. May be nested
BraceBadLight(int posStart)\n Highlight the character at a position indicating there is no matching brace
BraceBadLightIndicator(bool useBraceBadLightIndicator, int indicator)\n Use specified indicator to highlight non matching brace instead of changing its style
BraceHighlight(int posStart, int posEnd)\n Highlight the characters at two positions
BraceHighlightIndicator(bool useBraceHighlightIndicator, int indicator)\n Use specified indicator to highlight matching braces instead of changing their style
BraceMatch(int pos) = int pos\n Find the position of a matching brace or INVALID_POSITION if no match
CallTipActive() = bool\n Is there an active call tip?
CallTipAddHlt(int start, int end)\n Add a range of characters to be displayed in a highlight style.
CallTipCancel()\n Remove the call tip from the screen
CallTipClearHlt()\n Delete all highlighted ranges
CallTipPosStart() = int pos\n Retrieve the position where the caret was before displaying the call tip
CallTipSetHlt(int hlStart, int hlEnd)\n Highlight a segment of the definition
CallTipSetWordWrap(int wrapBnd)\n Set calltip line wrap bound in characters, 0 means no wrap
CallTipShow(int posStart, string definition)\n Show a call tip containing a definition near position pos
CallTipUpdateHlt()\n Update calltip window to reflect changes made by CallTipAddHlt and CallTipClearHlt
CanPaste() = bool\n Will a paste succeed?
CanRedo() = bool\n Are there any redoable actions in the undo history?
CanUndo() = bool\n Are there any undoable actions in the undo history?
Cancel()\n Cancel any modes such as call tip or auto-completion list display
ChangeLexerState(int posStart, int posEnd) = int\n Indicate that the internal state of a lexer has changed over a range and therefore there may be a need to redraw
CharLeft()\n Move caret left one character
CharLeftExtend()\n Move caret left one character extending selection to new caret position
CharLeftRectExtend()\n Move caret left one character, extending rectangular selection to new caret position
CharPositionFromPoint(int x, int y) = int pos\n Find the position of a character from a point within the window
CharPositionFromPointClose(int x, int y) = int pos\n Find the position of a character from a point within the window.Return INVALID_POSITION if not close to text
CharRight()\n Move caret right one character
CharRightExtend()\n Move caret right one character extending selection to new caret position
CharRightRectExtend()\n Move caret right one character, extending rectangular selection to new caret position
ChooseCaretX()\n Set the last x chosen value to be the caret x position
Clear()\n Clear the selection
ClearAll()\n Delete all text in the document
ClearAllCmdKeys()\n Drop all key mappings
ClearCmdKey(int keyCode, int keyModifier)\n When key+modifier combination km is pressed do nothing
ClearDocumentStyle()\n Set all style bytes to 0, remove all folding information
ClearRegisteredImages()\n Clear all the registered XPM images
ClearSelections()\n Clear selections to a single empty stream selection
Colourise(int posStart, int posEnd)\n Colourise a segment of the document using the current lexing language
ContractedFoldNext(int lineStart) = int\n Find the next line at or after lineStart that is a contracted fold header line.\nReturn -1 when no more lines.
ConvertEOLs(int eolMode)\n Convert all line endings in the document to one mode
Copy()\n Copy the selection to the clipboard
CopyAllowLine()\n Copy the selection, if selection empty copy the line with the caret
CopyRange(int posStart, int posEnd)\n Copy a range of text to the clipboard. Positions are clipped into the document
CopyText(string clipText | int clipText)\n Copy argument text to the clipboard
CountCharacters(int startPos, int endPos) = int\n Count characters between two positions
CreateDocument() = int\n Create a new document object. Starts with reference count of 1 and not selected into editor
CreateLoader(int bytes) = int\n Create an ILoader*
Cut()\n Cut the selection to the clipboard
DelLineLeft()\n Delete back from the current position to the start of the line
DelLineRight()\n Delete forwards from the current position to the end of the line
DelWordLeft()\n Delete the word to the left of the caret
DelWordRight()\n Delete the word to the right of the caret
DelWordRightEnd()\n Delete the word to the right of the caret, but not the trailing non-word characters
DeleteBack()\n Delete the selection or if no selection, the character before the caret
DeleteBackNotLine()\n Delete the selection or if no selection, the character before the caret. Will not delete the character before at the start of a line
DeleteRange(int pos, int deleteLength)\n Delete a range of text in the document
DescribeKeyWordSets() = string descriptions, int length\n Retrieve a '\n' separated list of descriptions of the keyword sets understood by the current lexer
DescribeProperty(string name) = string description, int length\n Describe a property
DocLineFromVisible(int lineDisplay) = int\n Find the document line of a display line taking hidden lines into account
DocumentEnd()\n Move caret to last position in document
DocumentEndExtend()\n Move caret to last position in document extending selection to new caret position
DocumentStart()\n Move caret to first position in document
DocumentStartExtend()\n Move caret to first position in document extending selection to new caret position
EditToggleOvertype()\n Switch from insert to overtype mode or the reverse
EmptyUndoBuffer()\n Delete the undo history
EncodedFromUTF8(string utf8, string encoded) = int length\n Translates a UTF8 string into the document encoding. Return the length of the result in bytes. On error return 0
EndUndoAction()\n End a sequence of actions that is undone and redone as a unit
EnsureVisible(int line)\n Ensure a particular line is visible by expanding any header line hiding it
EnsureVisibleEnforcePolicy(int line)\n Ensure a particular line is visible by expanding any header line hiding it. Use the currently set visibility policy to determine which range to display
FindColumn(int line, int column) = int pos\n Find the position of a column on a line taking into account tabs and multi-byte characters. If beyond end of line, return line end position
FindIndicatorFlash(position start, position end)\n On OS X, flash a find indicator, then fade out.
FindIndicatorHide()\n On OS X, hide the find indicator.
FindIndicatorShow(position start, position end)\n On OS X, show a find indicator.
FindText(int flags, findtext ft) = position\n Find some text in the document.
FormFeed()\n Insert a Form Feed character
FormatRange(bool draw, formatrange fr)\n On Windows, will draw the document into a display context such as a printer
GetCurLine() = string text, int caretPos\n Retrieve the text of the line containing the caret. Returns the index of the caret on the line
GetHotspotActiveBack() = int colour\n Get the back colour for active hotspots
GetHotspotActiveFore() = int colour\n Get the fore colour for active hotspots
GetLastChild(int line, int level) = int line\n Find the last child line of a header line
GetLine(int line) = string text, int length\n Retrieve the contents of a line. Returns the length of the line
GetLineSelEndPosition(int line) = int pos\n Retrieve the position of the end of the selection at the given line (INVALID_POSITION if no selection on this line)
GetLineSelStartPosition(int line) = int pos\n Retrieve the position of the start of the selection at the given line (INVALID_POSITION if no selection on this line)
GetRangePointer(int pos) = int rangeLength, int\n to rangeLength bytes
GetSelText() = string text, int length\n Retrieve the selected text. Return the length of the text
GetStyledText(textrange tr) = int bytes\n Retrieve a buffer of cells. Returns the number of bytes in the buffer not including terminating NULs
GetText(int length) = string text, int length\n Retrieve all the text in the document. Returns number of characters retrieved
GetTextRange(textrange tr) = int length\n Retrieve a range of text. Return the length of the text
GotoLine(int line)\n Set caret to start of a line and ensure it is visible
GotoPos(int pos)\n Set caret to a position and ensure it is visible
GrabFocus()\n Set the focus to this Scintilla widget. GTK+ Specific
HideLines(int lineStart, int lineEnd)\n Make a range of lines invisible
HideSelection(bool normal)\n Draw the selection in normal style or with selection highlighted
Home()\n Move caret to first position on line
HomeDisplay()\n Move caret to first position on display line
HomeDisplayExtend()\n Move caret to first position on display line extending selection to new caret position
HomeExtend()\n Move caret to first position on line extending selection to new caret position
HomeRectExtend()\n Move caret to first position on line, extending rectangular selection to new caret position
HomeWrap()\n Similarly Home when word-wrap is enabled
HomeWrapExtend()\n Similarly HomeExtend when word-wrap is enabled
IndicatorAllOnFor(int pos) = int indicator\n Are any indicators present at position?
IndicatorClearRange(int pos, int clearLength)\n Turn a indicator off over a range
IndicatorEnd(int indicator, int pos) = int indicatorStart\n Where does a particular indicator end?
IndicatorFillRange(int pos, int fillLength)\n Turn a indicator on over a range
IndicatorStart(int indicator, int pos) = int indicatorEnd\n Where does a particular indicator start?
IndicatorValueAt(int indicator, int pos) = 0|1\n What value does a particular indicator have at at a position?
InsertText(int pos, string text)\n Insert string at a position. (position=-1 -> current position)
LineCopy()\n Copy the line containing the caret
LineCut()\n Cut the line containing the caret
LineDelete()\n Delete the line containing the caret
LineDown()\n Move caret down one line
LineDownExtend()\n Move caret down one line extending selection to new caret position
LineDownRectExtend()\n Move caret down one line, extending rectangular selection to new caret position
LineDuplicate()\n Duplicate the current line
LineEnd()\n Move caret to last position on line
LineEndDisplay()\n Move caret to last position on display line
LineEndDisplayExtend()\n Move caret to last position on display line extending selection to new caret position
LineEndExtend()\n Move caret to last position on line extending selection to new caret position
LineEndRectExtend()\n Move caret to last position on line, extending rectangular selection to new caret position
LineEndWrap()\n Similarly LineEnd when word-wrap is enabled
LineEndWrapExtend()\n Similarly LineEndExtend when word-wrap is enabled
LineFromPosition(int pos) = int line\n Retrieve the line containing a position
LineLength(int line) = int length\n How many characters are on a line, not including end of line characters?
LineScroll(int columns, int lines)\n Scroll horizontally and vertically
LineScrollDown()\n Scroll the document down, keeping the caret visible
LineScrollUp()\n Scroll the document up, keeping the caret visible
LineTranspose()\n Switch the current line with the previous
LineUp()\n Move caret up one line
LineUpExtend()\n Move caret up one line extending selection to new caret position
LineUpRectExtend()\n Move caret up one line, extending rectangular selection to new caret position
LinesJoin()\n Join the lines in the target
LinesSplit(int pixelWidth)\n Split the lines in the target into lines that are less wide than pixelWidth where possible
LoadLexerLibrary(string path)\n Load a lexer library (dll / so)
LowerCase()\n Transform the selection to lower case
MarginTextClearAll()\n Clear the margin text on all lines
MarkerAdd(int line, int markerNumber) = int markerID\n Add a marker to a line, returning an ID which can be used to find or delete the marker
MarkerAddSet(int line, int markerNumber)\n Add a set of markers to a line
MarkerDefine(int markerNumber, int markerSymbols)\n Set the symbol used for a particular marker number
MarkerDefinePixmap(int markerNumber, string xpmData)\n Define a marker from a pixmap
MarkerDefineRGBAImage(int markerNumber, string pixels)\n It has the width and height from RGBAImageSetWidth/Height
MarkerDelete(int line, int markerNumber)\n Delete a marker from a line
MarkerDeleteAll(int markerNumber)\n Delete all markers with a particular number from all lines
MarkerDeleteHandle(int markerHandle)\n Delete a marker
MarkerEnableHighlight(bool enabled)\n Enable/disable highlight for current folding bloc (smallest one that contains the caret)
MarkerGet(int line) = int\n Get a bit mask of all the markers set on a line
MarkerLineFromHandle(int markerHandle) = int\n Retrieve the line number at which a particular marker is located
MarkerNext(int lineStart, int markerMask) = int\n Find the next line at or after lineStart that includes a marker in mask.\nReturn -1 when no more lines
MarkerPrevious(int lineStart, int markerMask) = int\n Find the previous line before lineStart that includes a marker in mask
MarkerSymbolDefined(int markerNumber) = int\n Which symbol was defined for markerNumber with MarkerDefine
MoveCaretInsideView()\n Move the caret inside current view if it's not there already
MoveSelectedLinesDown()\n Move the selected lines down one line, shifting the line below before the selection
MoveSelectedLinesUp()\n Move the selected lines up one line, shifting the line above after the selection
NewLine()\n Insert a new line, may use a CRLF, CR or LF depending on EOL mode
Null()\n Null operation
PageDown()\n Move caret one page down
PageDownExtend()\n Move caret one page down extending selection to new caret position
PageDownRectExtend()\n Move caret one page down, extending rectangular selection to new caret position
PageUp()\n Move caret one page up
PageUpExtend()\n Move caret one page up extending selection to new caret position
PageUpRectExtend()\n Move caret one page up, extending rectangular selection to new caret position
ParaDown()\n Move caret between paragraphs (delimited by empty lines)
ParaDownExtend()\n Move caret between paragraphs (delimited by empty lines)
ParaUp()\n Move caret between paragraphs (delimited by empty lines)
ParaUpExtend()\n Move caret between paragraphs (delimited by empty lines)
Paste()\n Paste the contents of the clipboard into the document replacing the selection
PointXFromPosition(int pos) = int\n Retrieve the x value of the point in the window where a position is displayed
PointYFromPosition(int pos) = int\n Retrieve the y value of the point in the window where a position is displayed
PositionAfter(int pos) = int pos\n Given a valid document position, return the next position taking code page into account. Maximum value returned is the last position in the document
PositionBefore(int pos) = int pos\n Given a valid document position, return the previous position taking code page into account. Returns 0 if passed 0
PositionFromLine(int line) = int pos\n Retrieve the position at the start of a line
PositionFromPoint(int x, int y) = int pos\n Find the position from a point within the window
PositionFromPointClose(int x, int y) = int pos\n Find the position from a point within the window but return INVALID_POSITION if not close to text
PrivateLexerCall(int operation, int pointer) = int\n For private communication between an application and a known lexer
PropertyNames() = string names, int length\n Retrieve a '\n' separated list of properties understood by the current lexer
PropertyType(string name) = int type\n Retrieve the type of a property
Redo()\n Redoes the next action on the undo history
RegisterImage(int type, string xpmData)\n Register an XPM image for use in autocompletion lists
RegisterRGBAImage(int type, string pixels)\n It has the width and height from RGBAImageSetWidth/Height
ReleaseDocument(int pDocPointer)\n Create a new document object. Starts with reference count of 1 and not selected into editor.\n Extend life of document. Release a reference to the document, deleting document if it fades to black
ReplaceSel(string text)\n Replace the selected text with the argument text
ReplaceTarget(string replaceText | int replaceText) = int length\n Replace the target text with the argument text. Text is counted so it can contain NULs. Returns the length of the replacement text
ReplaceTargetRE(string replaceText | int replaceText) = int length\n Replace the target text with the argument text after \d processing. Text is counted so it can contain NULs. Looks for \d where d is between 1 and 9 and replaces these with the strings matched in the last search operation which were surrounded by \( and \). Returns the length of the replacement text including any change caused by processing the \d patterns
RotateSelection()\n Set the main selection to the next selection
ScrollCaret()\n Ensure the caret is visible
ScrollToEnd()\n Scroll to end of document
ScrollToStart()\n Scroll to start of document
SearchAnchor()\n Sets the current caret position to be the search anchor
SearchInTarget(string searchText) = int pos\n Search for a counted string in the target and set the target to the found range. Text is counted so it can contain NULs.\n Returns length of range or -1 for failure in which case target is not moved
SearchNext(int flags, string text) = int pos\n Find some text starting at the search anchor. Does not ensure the selection is visible
SearchPrev(int flags, string text) = int pos\n Find some text starting at the search anchor and moving backwards. Does not ensure the selection is visible
SelectAll()\n Select all the text in the document
SelectionDuplicate()
SetCharsDefault()\n Reset the set of characters for whitespace and word characters to the defaults
SetEmptySelection(int pos)\n Set caret to a position, while removing any existing selection
SetFoldHighlightColour(bool useSetting, colour fore)\n Set folding highlight color
SetFoldMarginColour(bool useSetting, colour back)\n Set the colours used as a chequerboard pattern in the fold margin
SetFoldMarginHiColour(bool useSetting, colour fore)\n Set the colours used as a chequerboard pattern in the fold margin
SetHotspotActiveBack(bool useSetting, colour back)\n Set and get a back colour for active hotspots
SetHotspotActiveFore(bool useSetting, colour fore)\n Set and get a fore colour for active hotspots
SetLengthForEncode(int bytes)\n Set the length of the utf8 argument for calling EncodedFromUTF8. Set to -1 and the string will be measured to the first nul
SetSavePoint()\n Remember the current position in the undo history as the position at which the document was saved
SetSel(int posStart, int posEnd)\n Select a range of text
SetSelBack(bool useSelectionBackColour, colour back)\n Set the background colour of the selection and whether to use this setting
SetSelection(int caret, int anchor)\n Set a simple selection
SetSelFore(bool useSelectionForeColour, colour fore)\n Set the foreground colour of the selection and whether to use this setting
SetStyling(int length, int style)\n Change style from current styling position for length characters to a style and move the current styling position to after this newly styled segment.\n (style sample: INDIC1_MASK)
SetStylingEx(int length, string styles)\n Set the styles for a segment of the document
SetText(string text)\n Replace the contents of the document with the argument text
SetVisiblePolicy(int caretPolicy, int caretSlop)\n Constants for use with SetVisiblePolicy, similar to SetCaretPolicy.\n Set the way the display area is determined when a particular line is to be moved to by Find, FindNext, GotoLine, etc
SetWhitespaceBack(bool useWhitespaceBackColour, colour back)\n Set the background colour of all whitespace and whether to use this setting
SetWhitespaceFore(bool useWhitespaceForeColour, colour fore)\n Set the foreground colour of all whitespace and whether to use this setting
SetXCaretPolicy(int caretPolicy, int caretSlop)\n Set the way the caret is kept visible when going sideway. The exclusion zone is given in pixels
SetYCaretPolicy(int caretPolicy, int caretSlop)\n Set the way the line the caret is on is kept visible. The exclusion zone is given in lines
ShowLines(int lineStart, int lineEnd)\n Make a range of lines visible
StartRecord()\n Start notifying the container of all key presses and commands
StartStyling(int posStart, int mask)\n Set the current styling position to pos and the styling mask to mask. The styling mask can be used to protect some bits in each styling byte from modification. (mask sample: INDICS_MASK)\n
StopRecord()\n Stop notifying the container of all key presses and commands
StutteredPageDown()\n Move caret to bottom of page, or one page down if already at bottom of page
StutteredPageDownExtend()\n Move caret to bottom of page, or one page down if already at bottom of page, extending selection to new caret position
StutteredPageUp()\n Move caret to top of page, or one page up if already at top of page
StutteredPageUpExtend()\n Move caret to top of page, or one page up if already at top of page, extending selection to new caret position
StyleClearAll()\n Clear all the styles and make equivalent to the global default style
StyleResetDefault()\n Reset the default style to its state at startup
SwapMainAnchorCaret()\n Swap that caret and anchor of the main selection
Tab()\n If selection is empty or all on one line replace the selection with a tab character. If more than one line selected, indent the lines
TargetAsUTF8(string) = int length\n Returns the target converted to UTF8. Return the length in bytes
TargetFromSelection()\n Make the target range start and end be the same as the selection range start and end
TextHeight(int line) = int height\n Retrieve the height of a particular line of text in pixels
TextWidth(int styleNumber, string text) = int width\n Measure the pixel width of some text in a particular style. NUL terminated text argument. Does not handle tab or control characters
ToggleCaretSticky()\n Switch between sticky and non-sticky: meant to be bound to a key
ToggleFold(int line)\n Switch a header line between expanded and contracted
Undo()\n Undo one action in the undo history
UpperCase()\n Transform the selection to upper case
UsePopUp(bool allowPopUp)\n Set whether a pop up menu is displayed automatically when the user presses the wrong mouse button
UserListShow(int listType, string itemList)\n Display a list of strings and send notification when user chooses one
VCHome()\n Move caret to before first visible character on line. If already there move to first character on line
VCHomeDisplay()\n If already there move to first character on display line
VCHomeDisplayExtend()\n Like VCHomeDisplay but extending selection to new caret position
VCHomeExtend()\n Like VCHome but extending selection to new caret position
VCHomeRectExtend()\n Move caret to before first visible character on line. If already there move to first character on line.\n In either case, extend rectangular selection to new caret position
VCHomeWrap()
VCHomeWrapExtend()
VerticalCentreCaret()\n Centre current line in window
VisibleFromDocLine(int line) = int\n Find the display line of a document line taking hidden lines into account
WordEndPosition(int pos, bool onlyWordCharacters) = int\n Get position of end of word
WordLeft()\n Move caret left one word
WordLeftEnd()\n Move caret left one word, position cursor at end of word
WordLeftEndExtend()\n Move caret left one word, position cursor at end of word, extending selection to new caret position
WordLeftExtend()\n Move caret left one word extending selection to new caret position
WordPartLeft()\n Move to the previous change in capitalisation
WordPartLeftExtend()\n Move to the previous change in capitalisation. Move to the previous change in capitalisation extending selection to new caret position
WordPartRight()\n Move to the previous change in capitalisation.\n Move to the previous change in capitalisation extending selection to new caret position.\n Move to the change next in capitalisation
WordPartRightExtend()\n Move to the previous change in capitalisation.\n Move to the previous change in capitalisation extending selection to new caret position.\n Move to the change next in capitalisation.\n Move to the next change in capitalisation extending selection to new caret position
WordRight()\n Move caret right one word
WordRightEnd()\n Move caret right one word, position cursor at end of word
WordRightEndExtend()\n Move caret right one word, position cursor at end of word, extending selection to new caret position
WordRightExtend()\n Move caret right one word extending selection to new caret position
WordStartPosition(int pos, bool onlyWordCharacters) = int\n Get position of start of word
WrapCount(int line) = int\n The number of display lines needed to wrap a document line
ZoomIn()\n Magnify the displayed text by increasing the sizes by 1 point
ZoomOut()\n Make the displayed text smaller by decreasing the sizes by 1 point

editor.AdditionalCaretFore
editor.AdditionalCaretsBlink
editor.AdditionalCaretsVisible
editor.AdditionalSelAlpha
editor.AdditionalSelBack
editor.AdditionalSelFore
editor.AdditionalSelectionTyping
editor.AllLinesVisible
editor.Anchor
editor.AnnotationLines
editor.AnnotationStyle
editor.AnnotationStyleOffset
editor.AnnotationStyles
editor.AnnotationText
editor.AnnotationVisible
editor.AutoCAutoHide
editor.AutoCCancelAtStart
editor.AutoCCaseInsensitiveBehaviour
editor.AutoCChooseSingle
editor.AutoCCurrent
editor.AutoCCurrentText
editor.AutoCDropRestOfWord
editor.AutoCFillUps
editor.AutoCIgnoreCase
editor.AutoCMaxHeight
editor.AutoCMaxWidth
editor.AutoCSeparator
editor.AutoCTypeSeparator
editor.BackSpaceUnIndents
editor.BufferedDraw
editor.CallTipBack
editor.CallTipFore
editor.CallTipForeHlt
editor.CallTipPosition
editor.CallTipUseStyle
editor.CaretFore
editor.CaretLineBack
editor.CaretLineBackAlpha
editor.CaretLineVisible
editor.CaretPeriod
editor.CaretSticky
editor.CaretStyle
editor.CaretWidth
editor.CharAt
editor.CharacterPointer
editor.CodePage
editor.Column
editor.ControlCharSymbol
editor.CurrentPos
editor.Cursor
editor.DirectFunction
editor.DirectPointer
editor.DocPointer
editor.EOLMode
editor.EdgeColour
editor.EdgeColumn
editor.EdgeMode
editor.EndAtLastLine
editor.EndStyled
editor.ExtraAscent
editor.ExtraDescent
editor.FirstVisibleLine
editor.Focus
editor.FoldExpanded
editor.FoldFlags
editor.FoldLevel
editor.FoldParent
editor.FontQuality
editor.GapPosition
editor.HScrollBar
editor.HighlightGuide
editor.HotspotActiveUnderline
editor.HotspotSingleLine
editor.Identifier
editor.Indent
editor.IndentationGuides
editor.IndicAlpha
editor.IndicFore
editor.IndicOutlineAlpha
editor.IndicStyle
editor.IndicUnder
editor.IndicatorCurrent
editor.IndicatorValue
editor.KeyWords
editor.KeysUnicode
editor.LayoutCache
editor.Length
editor.Lexer
editor.LexerLanguage
editor.LineCount
editor.LineEndPosition
editor.LineIndentPosition
editor.LineIndentation
editor.LineState
editor.LineVisible
editor.LinesOnScreen
editor.MainSelection
editor.MarginCursorN
editor.MarginLeft
editor.MarginMaskN
editor.MarginOptions
editor.MarginRight
editor.MarginSensitiveN
editor.MarginStyle
editor.MarginStyleOffset
editor.MarginStyles
editor.MarginText
editor.MarginTypeN
editor.MarginWidthN
editor.MarkerAlpha
editor.MarkerBack
editor.MarkerBackSelected
editor.MarkerFore
editor.MaxLineState
editor.ModEventMask
editor.Modify
editor.MouseCapture
editor.MouseDownCaptures
editor.MouseDwellTime
editor.MultiPaste
editor.MultipleSelection
editor.Overtype
editor.PasteConvertEndings
editor.PositionCache
editor.PrintColourMode
editor.PrintMagnification
editor.PrintWrapMode
editor.Property
editor.PropertyExpanded
editor.PropertyInt
editor.PunctuationChars
editor.RGBAImageHeight
editor.RGBAImageScale
editor.RGBAImageWidth
editor.ReadOnly
editor.RectangularSelectionAnchor
editor.RectangularSelectionAnchorVirtualSpace
editor.RectangularSelectionCaret
editor.RectangularSelectionCaretVirtualSpace
editor.RectangularSelectionModifier
editor.ScrollWidth
editor.ScrollWidthTracking
editor.SearchFlags
editor.SelAlpha
editor.SelEOLFilled
editor.SelectionEmpty
editor.SelectionEnd
editor.SelectionIsRectangle
editor.SelectionMode
editor.SelectionNAnchor
editor.SelectionNAnchorVirtualSpace
editor.SelectionNCaret
editor.SelectionNCaretVirtualSpace
editor.SelectionNEnd
editor.SelectionNStart
editor.SelectionStart
editor.Selections
editor.Status
editor.StyleAt
editor.StyleBack
editor.StyleBits
editor.StyleBitsNeeded
editor.StyleBold
editor.StyleCase
editor.StyleChangeable
editor.StyleCharacterSet
editor.StyleEOLFilled
editor.StyleFont
editor.StyleFore
editor.StyleHotSpot 
editor.StyleItalic
editor.StyleSize
editor.StyleSizeFractional
editor.StyleUnderline
editor.StyleVisible
editor.StyleWeight
editor.TabIndents
editor.TabWidth
editor.Tag
editor.TargetEnd
editor.TargetStart
editor.Technology
editor.TextLength
editor.TwoPhaseDraw
editor.UndoCollection
editor.UseTabs
editor.VScrollBar
editor.ViewEOL
editor.ViewWS
editor.VirtualSpaceOptions
editor.WhitespaceChars
editor.WhitespaceSize
editor.WordChars
editor.WrapIndentMode
editor.WrapMode
editor.WrapStartIndent
editor.WrapVisualFlags
editor.WrapVisualFlagsLocation
editor.XOffset
editor.Zoom

props[string name] = string value\n [RW] Set and get value from properties
AdditionalCaretFore = colour\n [RW] Set the foreground colour of additional carets
AdditionalCaretsBlink = bool\n [RW] Set whether additional carets will blink
AdditionalCaretsVisible = bool\n [RW] Whether additional carets will blink\nSet whether additional carets are visible
AdditionalSelAlpha = int alpha\n [RW] Set and get the alpha of the selection
AdditionalSelBack = colour\n [WO] Set the background colour of additional selections
AdditionalSelFore = colour\n [WO] Set the foreground colour of additional selections
AdditionalSelectionTyping = bool\n [RW] Set whether typing can be performed into multiple selections\nWhether typing can be performed into multiple selections
AllLinesVisible[] = bool\n [RO] Are all lines visible?
Anchor = int pos\n [WO] Set the selection anchor to a position. The anchor is the opposite end of the selection from the caret
AnnotationLines = int line\n [RO] Get the number of annotation lines for a line
AnnotationStyle[int line] = int styles\n [RW] Set and get the annotation styles for a line
AnnotationStyleOffset = int style\n [RW] Get and get the start of the range of style numbers used for annotations
AnnotationStyles[int line] = string\n [RW] Set the annotation styles for a line
AnnotationText[int line] = string\n [RW] Set the annotation text for a line
AnnotationVisible = int\n [RW] Set and get the visibility for the annotations for a view
AutoCAutoHide = bool autoHide\n [RW] Set whether or not autocompletion is hidden automatically when nothing matches
AutoCCancelAtStart = bool cancel\n [RW] Should the auto-completion list be cancelled if the user backspaces to a position before where the box was created
AutoCCaseInsensitiveBehaviour = int\n [RW] Set auto-completion case insensitive behaviour to either prefer case-sensitive matches or have no preference
AutoCChooseSingle = bool chooseSingle\n [RW] Should a single item auto-completion list automatically choose the item
AutoCCurrent = int\n [RO]
AutoCCurrentText = string\n [RO]
AutoCDropRestOfWord = bool dropRestOfWord\n [RW] Set whether or not autocompletion deletes any word characters after the inserted text upon completion
AutoCFillUps = string charSet\n Define a set of characters that when typed will cause the autocompletion to choose the selected item
AutoCIgnoreCase = bool ignoreCase\n [RW] Set whether case is significant when performing auto-completion searches
AutoCMaxHeight = int rowCount\n [RW] Set the maximum height, in rows, of auto-completion and user lists. The default is 5 rows
AutoCMaxWidth = int characterCount\n [RW] Set the maximum width, in characters, of auto-completion and user lists. Set to 0 to autosize to fit longest item, which is the default
AutoCSeparator = int separator\n [RW] Change the separator character in the string setting up an auto-completion list. Default is space but can be changed if items contain space
AutoCTypeSeparator = int separatorChar\n [RW] Change the type-separator character in the string setting up an auto-completion list. Default is '?' but can be changed if items contain '?'
BackSpaceUnIndents = bool bsUnIndents\n [RW] Sets whether a backspace pressed when caret is within indentation unindents
BufferedDraw = bool isBuffered\n [RW] If drawing is buffered then each line of text is drawn into a bitmap buffer before drawing it to the screen to avoid flicker
CallTipBack = int colour\n [WO] Set the background colour for the call tip
CallTipFore = int colour\n [WO] Set the foreground colour for the call tip
CallTipForeHlt = int colour\n [WO] Set the foreground colour for the highlighted part of the call tip
CallTipPosition = bool\n [WO] Set position of calltip, above or below text
CallTipUseStyle = int tabsize\n [WO] Enable use of STYLE_CALLTIP and set call tip tab size in pixels
CaretFore = int colour\n [RW] Set the foreground colour of the caret
CaretLineBack = int colour\n [RW] Set the colour of the background of the line containing the caret
CaretLineBackAlpha = int alpha\n [RW] Set background alpha of the caret line
CaretLineVisible = bool show\n [RW] Display the background of the line containing the caret in a different colour
CaretPeriod = int milliseconds\n [RW] Get the time in milliseconds that the caret is on and off. 0 = steady on
CaretSticky = int useCaretStickyBehaviour\n [RW] Stop the caret preferred x position changing when the user types
CaretStyle = int style\n [RW] Set the style of the caret to be drawn\nReturns the current style of the caret
CaretWidth = int pixels\n [RW] Set the width of the insert mode caret
CharAt[int pos] = int charValue\n [RO] Returns the character byte at the position
CharacterPointer = int\n [RO] Compact the document buffer and return a read-only pointer to the characters in the document
CodePage = int codePage\n [RW] Set the code page used to interpret the bytes of the document as characters. The SC_CP_UTF8 value can be used to enter Unicode mode
Column[int pos] = int column\n [RO] Retrieve the column number of a position, taking tab width into account
ControlCharSymbol = int symbol\n [RW] Change the way control characters are displayed: If symbol is < 32, keep the drawn way, else, use the given character
CurrentPos = int pos\n [RW] Sets the position of the caret
Cursor = int curType\n [RW] Sets the cursor to one of the SC_CURSOR* values
DirectFunction = int\n [RO] Retrieve a pointer to a function that processes messages for this Scintilla
DirectPointer = int\n [RO] Retrieve a pointer value to use as the first argument when calling the function returned by DirectFunction
DocPointer = int pDocPointer?\n [RW] Retrieve a pointer to the document object. Change the document object used.
EOLMode = int eolMode W\n Retrieve the current end of line mode - one of CRLF, CR, or LF., Set the current end of line mode
EdgeColour = int colour\n [RW] Change the colour used in edge indication
EdgeColumn = int column\n [RW] Set the column number of the edge. If text goes past the edge then it is highlighted
EdgeMode = int edgeMode\n [RW] The edge may be displayed by a line (EDGE_LINE) or by highlighting text that goes beyond it (EDGE_BACKGROUND) or not displayed at all (EDGE_NONE)
EndAtLastLine = bool endAtLastLine\n [RW] Sets the scroll range so that maximum scroll position has the last line at the bottom of the view (default). Setting this to false allows scrolling one page below the last line
EndStyled = int pos\n [RO] Retrieve the position of the last correctly styled character
ExtraAscent = int\n [RW] Set and get extra ascent for each line
ExtraDescent = int\n [RW] Set and get extra descent for each line
FirstVisibleLine = int lineDisplay\n [RW] Retrieve the display line at the top of the display. Scroll so that a display line is at the top of the display
Focus = bool focus\n [RW] Change internal focus flag
FoldExpanded[int line] = bool expanded\n [RW] Show the children of a header line
FoldFlags = int flags\n [RW] Set some style options for folding
FoldLevel[int line] = int level\n [RW] Set the fold level of a line. This encodes an integer level along with flags indicating whether the line is a header and whether it is effectively white space
FoldParent[int startLine] = int line\n [RO] Find the parent line of a child line
FontQuality = int\n [RW] Choose the quality level for text from the FontQuality enumeration\nRetrieve the quality level for text
GapPosition[] = position\n [RO] the range of a call to GetRangePointer
HScrollBar = bool visible\n [RW] Show or hide the horizontal scroll bar
HighlightGuide = int column\n [RW] Set the highlighted indentation guide column. 0 = no highlighted guide
HotspotActiveUnderline = bool underline\n [WO] Enable / Disable underlining active hotspots
HotspotSingleLine = bool singleLine\n [WO] Limit hotspots to single line so hotspots on two lines don't merge
Identifier = int identifier [RW]\n Set the identifier reported as idFrom in notification messages., Get the identifier.
Indent = int widthInChars\n [RW] Set the number of spaces used for one level of indentation
IndentationGuides = bool view\n [RW] Show or hide indentation guides
IndicAlpha[int markNumber] = int transparency\n [RW] Indicator (marker) fill alpha (0-255)
IndicFore[int markNumber] = int colour\n [RW] Indicator (marker) fore colour
IndicOutlineAlpha[int indicator] = int\n [RW] Set the alpha outline colour of the given indicator
IndicStyle[int markNumber] = int style\n [RW] Indicator (marker) style constants (INDIC_)
IndicUnder[int markNumber] = bool\n [RW] Set an indicator to draw under text or over(default)\nRetrieve whether indicator drawn under or over text
IndicatorCurrent = int indicator\n [RW] Set and get the indicator used for IndicatorFillRange and IndicatorClearRange
IndicatorValue = int value\n [RW] Set and get the value used for IndicatorFillRange
KeyWords[int keyWordSet] = string keyWordList\n [WO] Set up the key words used by the lexer
KeysUnicode = bool \n [RW] Always interpret keyboard input as Unicode
LayoutCache = int cacheMode\n [RW] Sets the degree of caching of layout information
Length = int\n [RO] Returns the number of characters in the document
Lexer = int lexer\n [RW] Set the lexing language of the document
LexerLanguage[] = string language\n [RW] Set the lexing language of the document based on string name., Return the length of the text.
LineCount = int\n [RO] Returns the number of lines in the document. There is always at least one
LineEndPosition[int line] = int pos\n [RO] Get the position after the last visible characters on a line
LineIndentPosition[int line] = int pos\n [RO] Retrieve the position before the first non indentation character on a line
LineIndentation[int line] = int indent\n [RW] Change the indentation of a line to a number of columns
LineState[int line] = int value\n [RW] Used to hold extra styling information for each line
LineVisible[int line] = bool visible\n [RO] Is a line visible?
LinesOnScreen = int\n [RO] Retrieves the number of lines completely visible
MainSelection = int selection\n [RW] Set the main selection\nWhich selection is the main selection
MarginCursorN[int margin] = int cursor\n [RW] Set the cursor shown when the mouse is inside a margin., Retrieve the cursor shown in a margin.
MarginLeft = int pixels\n [RW] Sets the size in pixels of the left margin
MarginMaskN[int margin] = int mask\n [RW] Set a mask that determines which markers are displayed in a margin
MarginOptions = int marginOptions\n [RW] Set the margin options., Get the margin options.
MarginRight = int pixels\n [RW] Sets the size in pixels of the right margin
MarginSensitiveN[int margin] = bool sensitive\n [RW] Make a margin sensitive or insensitive to mouse clicks
MarginStyle[int line] = int style\n [RW] Set and get the style number for the text margin for a line
MarginStyleOffset = int style\n [RW] Set and get the start of the range of style numbers used for margin text
MarginStyles[int line] = string\n [RW] Set the style in the text margin for a line
MarginText[int line] = string\n [RW] Set the text in the text margin for a line
MarginTypeN[int margin] = int iType\n [RW] Set a margin to be either numeric or symbolic
MarginWidthN[int margin] = int pixelWidth\n [RW] Set the width of a margin to a width expressed in pixels
MarkerAlpha[int markerNumber] = int\n [WO] Set the alpha used for a marker that is drawn in the text area, not the margin
MarkerBack[int markerNumber] = colour\n [WO] Set the background colour used for a particular marker number
MarkerBackSelected[int markerNumber] = colour\n [WO] Set the background colour used for a particular marker number
MarkerFore[int markerNumber] = colour\n [WO] Set the foreground colour used for a particular marker number
MaxLineState = int\n [RO] Retrieve the last line number that has line state
ModEventMask = int eventMask\n [RW] Set which document modification events are sent to the container
Modify = bool\n [RO] Is the document different from when it was last saved?
MouseCapture = bool\n [W] Set mouse capture status
MouseDownCaptures = bool captures\n [RW] Set whether the mouse is captured when its button is pressed
MouseDwellTime = int\n [RO] Sets the time the mouse must sit still to generate a mouse dwell event
MultiPaste = int multiPaste\n [RW] Change and retrieve the effect of pasting when there are multiple selections
MultipleSelection = bool\n [RW] Set and get whether multiple selections can be made
Overtype = bool\n [RW] Set to overtype (true) or insert mode
PasteConvertEndings = bool\n [RW] Enable/Disable convert-on-paste for line endings
PositionCache = int size\n [RW] Set number of entries in position cache\nHow many entries are allocated to the position cache?
PrintColourMode = int mode\n [RW] Modify colours when printing for clearer printed text
PrintMagnification = int magnification\n [RW] Sets the print magnification added to the point size of each style for printing
PrintWrapMode = int wrapMode\n [RW] Set printing to line wrapped (SC_WRAP_WORD) or not line wrapped (SC_WRAP_NONE)
Property[string key | int key] = string value | int value [WO] Set up a value that may be used by a lexer for some optional feature
PropertyExpanded[string key] = stringresult buf, int\n [RO] variable replacement on returned buffer
PropertyInt[string key | int key] = int value\n [RO] Retrieve a "property" value previously set with SetProperty, interpreted as an int AFTER any "$()" variable replacement
PunctuationChars = string characters\n [RW] Set the set of characters making up punctuation characters Should be called after SetWordChars
RGBAImageHeight = int\n [WO] Set the height for future RGBA image data
RGBAImageScale = int\n [WO] Set the scale factor in percent for future RGBA image data
RGBAImageWidth = int\n [WO] Set the width for future RGBA image data
ReadOnly = bool readOnly\n [RW] In read-only mode? Set to read only or read write
RectangularSelectionAnchor = int posAnchor\n [RW]
RectangularSelectionAnchorVirtualSpace = int space\n [RW]
RectangularSelectionCaret = int pos\n [RO]
RectangularSelectionCaretVirtualSpace = int space\n [RW]
RectangularSelectionModifier = int modifier\n [RW] On GTK+, allow selecting the modifier key to use for mouse-based\nrectangular selection. Often the window manager requires Alt+Mouse Drag for moving windows.\nValid values are SCMOD_CTRL(default), SCMOD_ALT, or SCMOD_SUPER
ScrollWidth = int pixelWidth\n [RW] Sets the document width assumed for scrolling
ScrollWidthTracking = bool tracking\n [RW] Sets whether the maximum width line displayed is used to set scroll width\nRetrieve whether the scroll width tracks wide lines
SearchFlags = int searchFlags\n [RW] Set the search flags used by SearchInTarget
SelAlpha = int\n [RW] Get or set the alpha of the selection
SelEOLFilled = bool filled\n [RW] Set the selection to have its end of line filled or not\nIs the selection end of line filled?
SelectionEmpty = bool\n [RO] Is every selected range empty?
SelectionEnd = int pos\n [RW] Sets the position that ends the selection - this becomes the currentPosition
SelectionIsRectangle = bool\n [RO] Is the selection rectangular? The alternative is the more common stream selection
SelectionMode = int mode\n [RW] Set the selection mode to stream (SC_SEL_STREAM) or rectangular (SC_SEL_RECTANGLE) or by lines (SC_SEL_LINES)
SelectionNAnchor[int selection] = int pos\n [RW]
SelectionNAnchorVirtualSpace[int selection] = int space\n [RW]
SelectionNCaret[int selection] = int pos\n [RW]
SelectionNCaretVirtualSpace[int selection] = int space\n [RW]
SelectionNEnd[int selection] = int pos\n [RW] Sets the position that ends the selection - this becomes the currentPosition
SelectionNStart[int selection] = int pos\n [RW] Sets and get the position that starts the selection - this becomes the anchor
SelectionStart = int pos\n [RW] Sets the position that starts the selection - this becomes the anchor
Selections = int\n [RO] How many selections are there?
Status = int\n [RW] Change error status - 0 = OK
StyleAt[int pos] = int styleValue\n [RO] Returns the style byte at the position
StyleBack[int StyleNumber] = int colour\n [WO] Set the background colour of a style
StyleBits = int bits\n [RW] Divide each styling byte into lexical class bits (default: 5) and indicator bits (default: 3). If a lexer requires more than 32 lexical states, then this is used to expand the possible states
StyleBitsNeeded = int\n [RO] Retrieve the number of bits the current lexer needs for styling
StyleBold[int style] = bool\n [WO] Set a style to be bold or not
StyleCase[int style] = int caseMode\n [WO] Set a style to be mixed case, or to force upper or lower case
StyleChangeable[int style] = bool changeable\n [WO] Set a style to be changeable or not (read only). Experimental feature, currently buggy
StyleCharacterSet[int style] = int charSet\n [WO] Set the character set of the font in a style
StyleEOLFilled[int style] = bool\n [WO] Set a style to have its end of line filled or not
StyleFont[int style] = string fontName\n [WO] Set the font of a style
StyleFore[int style] = int colour\n [WO] Set the foreground colour of a style
StyleHotSpot [int style] = bool\n [WO] Set a style to be a hotspot or not
StyleItalic[int style] = bool\n [WO] Set a style to be italic or not
StyleSize[int style] = int sizeInPoints\n [WO] Set the size of characters of a style
StyleSizeFractional[int style] = int\n [RW] Set the size of characters of a style. Size is in points multiplied by 100
StyleUnderline[int style] = bool\n [WO] Set a style to be underlined or not
StyleVisible[int style] = bool\n [WO] Set a style to be visible or not
StyleWeight[int style] = int\n [RW] Set the weight of characters of a style
TabIndents = bool tabIndents\n [RW] Sets whether a tab pressed when caret is within indentation indents
TabWidth = int widthInChars\n [RW] Change the visible size of a tab to be a multiple of the width of a space character
Tag[int tagNumber] = stringresult tagValue\n [RO] Retrieve the value of a tag from a regular expression search.
TargetEnd = int pos\n [RW] Sets the position that ends the target which is used for updating the document without affecting the scroll position
TargetStart = int pos\n [RW] Sets the position that starts the target which is used for updating the document without affecting the scroll position
Technology = int technology\n [RW] Set the technology used., Get the tech.
TextLength = int\n [RO] Retrieve the number of characters in the document
TwoPhaseDraw = bool\n [RW] In twoPhaseDraw mode, drawing is performed in two phases, first the background and then the foreground. This avoids chopping off characters that overlap the next run
UndoCollection = bool\n [RW] Choose between collecting actions into the undo history and discarding them
UseTabs = bool useTabs\n [RW] Indentation will only use space characters if useTabs is false, otherwise it will use a combination of tabs and spaces
VScrollBar = bool visible\n [RW] Show or hide the vertical scroll bar
ViewEOL = bool visible\n [RW] Make the end of line characters visible or invisible
ViewWS = int wsMode\n [RW] Make white space characters invisible, always visible or visible outside indentation
VirtualSpaceOptions = int\n [RW] Returns the position at the end of the selection
WhitespaceChars = string chars\n [WO] Set the set of characters making up whitespace for when moving or selecting by word. Should be called after SetWordChars
WhitespaceSize = int size\n [RW] Set and get the size of the dots used to mark space characters
WordChars = string chars\n [WO] Set the set of characters making up words for when moving or selecting by word. First sets deaults like SetCharsDefault
WrapIndentMode = int mode\n [RW] Sets and retrieve how wrapped sublines are placed. Default is fixed
WrapMode = int wrapMode\n [RW] Sets whether text is word wrapped
WrapStartIndent = int indent\n [RW] Set the start indent for wrapped lines
WrapVisualFlags = int wrapVisualFlags\n [RW] Set the display mode of visual flags for wrapped lines
WrapVisualFlagsLocation = int wrapVisualFlagsLocation\n [RW] Set the location of visual flags for wrapped lines
XOffset = int xOffset\n [RW] Get and Set the xOffset (ie, horizonal scroll position)
Zoom = int zoomInPoints\n [RW] Set the zoom level. This number of points is added to the size of all fonts. It may be positive to magnify or negative to reduce

ANNOTATION_BOXED = 2
ANNOTATION_HIDDEN = 0
ANNOTATION_STANDARD = 1
CARETSTYLE_BLOCK = 2
CARETSTYLE_INVISIBLE = 0
CARETSTYLE_LINE = 1
CARET_EVEN = 0x08
CARET_JUMPS = 0x10
CARET_SLOP = 0x01
CARET_STRICT = 0x04
EDGE_BACKGROUND = 2
EDGE_LINE = 1
EDGE_NONE = 0
IDM_ABBREV = 242
IDM_ABOUT = 902
IDM_ACTIVATE = 320
IDM_ALLOWACCESS = 119
IDM_BLOCK_COMMENT = 243
IDM_BOOKMARK_CLEARALL = 224
IDM_BOOKMARK_NEXT = 221
IDM_BOOKMARK_NEXT_SELECT = 225
IDM_BOOKMARK_PREV = 223
IDM_BOOKMARK_PREV_SELECT = 226
IDM_BOOKMARK_TOGGLE = 222
IDM_BOX_COMMENT = 246
IDM_BUFFER = 1200
IDM_BUFFERSEP = 505
IDM_BUILD = 302
IDM_CLEAR = 206
IDM_CLEAROUTPUT = 420
IDM_CLOSE = 105
IDM_CLOSEALL = 503
IDM_COMPILE = 301
IDM_COMPLETE = 233
IDM_COMPLETEWORD = 234
IDM_COPY = 204
IDM_COPYASRTF = 245
IDM_COPYPATH = 118
IDM_CUT = 203
IDM_DIRECTIONDOWN = 806
IDM_DIRECTIONUP = 805
IDM_DUPLICATE = 250
IDM_ENCODING_DEFAULT = 150
IDM_ENCODING_UCOOKIE = 154
IDM_ENCODING_UCS2BE = 151
IDM_ENCODING_UCS2LE = 152
IDM_ENCODING_UTF8 = 153
IDM_ENTERSELECTION = 256
IDM_EOL_CONVERT = 433
IDM_EOL_CR = 431
IDM_EOL_CRLF = 430
IDM_EOL_LF = 432
IDM_EXPAND = 235
IDM_EXPAND_ENSURECHILDRENVISIBLE = 238
IDM_FILER = 114
IDM_FIND = 210
IDM_FINDINFILES = 215
IDM_FINDNEXT = 211
IDM_FINDNEXTBACK = 212
IDM_FINDNEXTBACKSEL = 214
IDM_FINDNEXTSEL = 213
IDM_FINISHEDEXECUTE = 305
IDM_FOLDMARGIN = 406
IDM_FULLSCREEN = 961
IDM_GO = 303
IDM_GOTO = 220
IDM_HELP = 901
IDM_HELP_SCITE = 903
IDM_IMPORT = 1300
IDM_INCSEARCH = 252
IDM_INS_ABBREV = 247
IDM_JOIN = 248
IDM_LANGUAGE = 1400
IDM_LINENUMBERMARGIN = 407
IDM_LOADSESSION = 132
IDM_LWRCASE = 241
IDM_MACROLIST = 314
IDM_MACROPLAY = 313
IDM_MACRORECORD = 311
IDM_MACROSTOPRECORD = 312
IDM_MACRO_SEP = 310
IDM_MATCHBRACE = 230
IDM_MATCHCASE = 801
IDM_MONOFONT = 450
IDM_MOVETABLEFT = 509
IDM_MOVETABRIGHT = 508
IDM_MRUFILE = 1000
IDM_MRU_SEP = 120
IDM_MRU_SUB = 121
IDM_NEW = 101
IDM_NEXTFILE = 502
IDM_NEXTFILESTACK = 507
IDM_NEXTMATCHPPC = 262
IDM_NEXTMSG = 306
IDM_ONTOP = 960
IDM_OPEN = 102
IDM_OPENABBREVPROPERTIES = 463
IDM_OPENDIRECTORYPROPERTIES = 465
IDM_OPENFILESHERE = 413
IDM_OPENGLOBALPROPERTIES = 462
IDM_OPENLOCALPROPERTIES = 460
IDM_OPENLUAEXTERNALFILE = 464
IDM_OPENSELECTED = 103
IDM_OPENUSERPROPERTIES = 461
IDM_PASTE = 205
IDM_PASTEANDDOWN = 208
IDM_PREVFILE = 501
IDM_PREVFILESTACK = 506
IDM_PREVMATCHPPC = 260
IDM_PREVMSG = 307
IDM_PRINT = 131
IDM_PRINTSETUP = 130
IDM_QUIT = 140
IDM_READONLY = 416
IDM_REDO = 202
IDM_REGEXP = 802
IDM_REPLACE = 216
IDM_REVERT = 104
IDM_RUNWIN = 351
IDM_SAVE = 106
IDM_SAVEACOPY = 116
IDM_SAVEALL = 504
IDM_SAVEAS = 110
IDM_SAVEASHTML = 111
IDM_SAVEASPDF = 113
IDM_SAVEASRTF = 112
IDM_SAVEASTEX = 115
IDM_SAVEASXML = 117
IDM_SAVESESSION = 133
IDM_SELECTALL = 207
IDM_SELECTION_FOR_FIND = 217
IDM_SELECTTOBRACE = 231
IDM_SELECTTONEXTMATCHPPC = 263
IDM_SELECTTOPREVMATCHPPC = 261
IDM_SELMARGIN = 405
IDM_SHOWCALLTIP = 232
IDM_SPLIT = 249
IDM_SPLITVERTICAL = 401
IDM_SRCWIN = 350
IDM_STATUSWIN = 353
IDM_STOPEXECUTE = 304
IDM_STREAM_COMMENT = 244
IDM_SWITCHPANE = 421
IDM_TABSIZE = 440
IDM_TABWIN = 354
IDM_TOGGLEOUTPUT = 409
IDM_TOGGLEPARAMETERS = 412
IDM_TOGGLE_FOLDALL = 236
IDM_TOGGLE_FOLDRECURSIVE = 237
IDM_TOOLS = 9000
IDM_TOOLWIN = 352
IDM_UNDO = 201
IDM_UNSLASH = 804
IDM_UPRCASE = 240
IDM_VIEWEOL = 403
IDM_VIEWGUIDES = 404
IDM_VIEWSPACE = 402
IDM_VIEWSTATUSBAR = 411
IDM_VIEWTABBAR = 410
IDM_VIEWTOOLBAR = 408
IDM_WHOLEWORD = 800
IDM_WRAP = 414
IDM_WRAPAROUND = 803
IDM_WRAPOUTPUT = 415
INDIC0_MASK = 0x20
INDIC1_MASK = 0x40
INDIC2_MASK = 0x80
INDICS_MASK = 0xE0
INDIC_BOX = 6
INDIC_CONTAINER = 8
INDIC_DASH = 9
INDIC_DIAGONAL = 3
INDIC_DOTBOX = 12
INDIC_DOTS = 10
INDIC_HIDDEN = 5
INDIC_MAX = 31
INDIC_PLAIN = 0
INDIC_ROUNDBOX = 7
INDIC_SQUIGGLE = 1
INDIC_SQUIGGLELOW = 11
INDIC_SQUIGGLEPIXMAP = 13
INDIC_STRAIGHTBOX = 8
INDIC_STRIKE = 4
INDIC_TT = 2
INVALID_POSITION = -1
KEYWORDSET_MAX = 20
MARKER_MAX = 31
SCEN_CHANGE = 768
SCEN_KILLFOCUS = 256
SCEN_SETFOCUS = 512
SCE_4GL_BLOCK = 8
SCE_4GL_BLOCK_ = 24
SCE_4GL_CHARACTER = 4
SCE_4GL_CHARACTER_ = 20
SCE_4GL_COMMENT1 = 10
SCE_4GL_COMMENT1_ = 26
SCE_4GL_COMMENT2 = 11
SCE_4GL_COMMENT2_ = 27
SCE_4GL_COMMENT3 = 12
SCE_4GL_COMMENT3_ = 28
SCE_4GL_COMMENT4 = 13
SCE_4GL_COMMENT4_ = 29
SCE_4GL_COMMENT5 = 14
SCE_4GL_COMMENT5_ = 30
SCE_4GL_COMMENT6 = 15
SCE_4GL_COMMENT6_ = 31
SCE_4GL_DEFAULT = 0
SCE_4GL_DEFAULT_ = 16
SCE_4GL_END = 9
SCE_4GL_END_ = 25
SCE_4GL_IDENTIFIER = 7
SCE_4GL_IDENTIFIER_ = 23
SCE_4GL_NUMBER = 1
SCE_4GL_NUMBER_ = 17
SCE_4GL_OPERATOR = 6
SCE_4GL_OPERATOR_ = 22
SCE_4GL_PREPROCESSOR = 5
SCE_4GL_PREPROCESSOR_ = 21
SCE_4GL_STRING = 3
SCE_4GL_STRING_ = 19
SCE_4GL_WORD = 2
SCE_4GL_WORD_ = 18
SCE_A68K_COMMENT = 1
SCE_A68K_COMMENT_DOXYGEN = 18
SCE_A68K_COMMENT_SPECIAL = 17
SCE_A68K_COMMENT_WORD = 16
SCE_A68K_CPUINSTRUCTION = 7
SCE_A68K_DEFAULT = 0
SCE_A68K_DIRECTIVE = 10
SCE_A68K_EXTINSTRUCTION = 8
SCE_A68K_IDENTIFIER = 14
SCE_A68K_LABEL = 12
SCE_A68K_MACRO_ARG = 11
SCE_A68K_MACRO_DECLARATION = 15
SCE_A68K_NUMBER_BIN = 3
SCE_A68K_NUMBER_DEC = 2
SCE_A68K_NUMBER_HEX = 4
SCE_A68K_OPERATOR = 6
SCE_A68K_REGISTER = 9
SCE_A68K_STRING1 = 5
SCE_A68K_STRING2 = 13
SCE_ABAP_COMMENT = 1
SCE_ABAP_COMMENTLINE = 2
SCE_ABAP_DEFAULT = 0
SCE_ABAP_IDENTIFIER = 6
SCE_ABAP_NUMBER = 3
SCE_ABAP_OPERATOR = 5
SCE_ABAP_STRING = 4
SCE_ABAP_TYPE = 8
SCE_ABAP_USER1 = 9
SCE_ABAP_USER2 = 10
SCE_ABAP_USER3 = 11
SCE_ABAP_USER4 = 12
SCE_ABAP_WORD = 7
SCE_ABAQUS_ARGUMENT = 11
SCE_ABAQUS_COMMAND = 8
SCE_ABAQUS_COMMENT = 1
SCE_ABAQUS_COMMENTBLOCK = 2
SCE_ABAQUS_DEFAULT = 0
SCE_ABAQUS_FUNCTION = 12
SCE_ABAQUS_NUMBER = 3
SCE_ABAQUS_OPERATOR = 5
SCE_ABAQUS_PROCESSOR = 7
SCE_ABAQUS_SLASHCOMMAND = 9
SCE_ABAQUS_STARCOMMAND = 10
SCE_ABAQUS_STRING = 4
SCE_ABAQUS_WORD = 6
SCE_ADA_CHARACTER = 5
SCE_ADA_CHARACTEREOL = 6
SCE_ADA_COMMENTLINE = 10
SCE_ADA_DEFAULT = 0
SCE_ADA_DELIMITER = 4
SCE_ADA_IDENTIFIER = 2
SCE_ADA_ILLEGAL = 11
SCE_ADA_LABEL = 9
SCE_ADA_NUMBER = 3
SCE_ADA_STRING = 7
SCE_ADA_STRINGEOL = 8
SCE_ADA_WORD = 1
SCE_AHK_COMMENTBLOCK = 2
SCE_AHK_COMMENTLINE = 1
SCE_AHK_DEFAULT = 0
SCE_AHK_ERROR = 20
SCE_AHK_ESCAPE = 3
SCE_AHK_EXPOPERATOR = 5
SCE_AHK_IDENTIFIER = 8
SCE_AHK_LABEL = 10
SCE_AHK_NUMBER = 7
SCE_AHK_STRING = 6
SCE_AHK_SYNOPERATOR = 4
SCE_AHK_VARREF = 9
SCE_AHK_VARREFKW = 19
SCE_AHK_WORD_CF = 11
SCE_AHK_WORD_CMD = 12
SCE_AHK_WORD_DIR = 14
SCE_AHK_WORD_FN = 13
SCE_AHK_WORD_KB = 15
SCE_AHK_WORD_SP = 17
SCE_AHK_WORD_UD = 18
SCE_AHK_WORD_VAR = 16
SCE_APDL_ARGUMENT = 11
SCE_APDL_COMMAND = 8
SCE_APDL_COMMENT = 1
SCE_APDL_COMMENTBLOCK = 2
SCE_APDL_DEFAULT = 0
SCE_APDL_FUNCTION = 12
SCE_APDL_NUMBER = 3
SCE_APDL_OPERATOR = 5
SCE_APDL_PROCESSOR = 7
SCE_APDL_SLASHCOMMAND = 9
SCE_APDL_STARCOMMAND = 10
SCE_APDL_STRING = 4
SCE_APDL_WORD = 6
SCE_ASM_CHARACTER = 12
SCE_ASM_COMMENT = 1
SCE_ASM_COMMENTBLOCK = 11
SCE_ASM_COMMENTDIRECTIVE = 15
SCE_ASM_CPUINSTRUCTION = 6
SCE_ASM_DEFAULT = 0
SCE_ASM_DIRECTIVE = 9
SCE_ASM_DIRECTIVEOPERAND = 10
SCE_ASM_EXTINSTRUCTION = 14
SCE_ASM_IDENTIFIER = 5
SCE_ASM_MATHINSTRUCTION = 7
SCE_ASM_NUMBER = 2
SCE_ASM_OPERATOR = 4
SCE_ASM_REGISTER = 8
SCE_ASM_STRING = 3
SCE_ASM_STRINGEOL = 13
SCE_ASN1_ATTRIBUTE = 7
SCE_ASN1_COMMENT = 1
SCE_ASN1_DEFAULT = 0
SCE_ASN1_DESCRIPTOR = 8
SCE_ASN1_IDENTIFIER = 2
SCE_ASN1_KEYWORD = 6
SCE_ASN1_OID = 4
SCE_ASN1_OPERATOR = 10
SCE_ASN1_SCALAR = 5
SCE_ASN1_STRING = 3
SCE_ASN1_TYPE = 9
SCE_ASY_CHARACTER = 6
SCE_ASY_COMMENT = 1
SCE_ASY_COMMENTLINE = 2
SCE_ASY_COMMENTLINEDOC = 10
SCE_ASY_DEFAULT = 0
SCE_ASY_IDENTIFIER = 8
SCE_ASY_NUMBER = 3
SCE_ASY_OPERATOR = 7
SCE_ASY_STRING = 5
SCE_ASY_STRINGEOL = 9
SCE_ASY_WORD = 4
SCE_ASY_WORD2 = 11
SCE_AU3_COMMENT = 1
SCE_AU3_COMMENTBLOCK = 2
SCE_AU3_COMOBJ = 14
SCE_AU3_DEFAULT = 0
SCE_AU3_EXPAND = 13
SCE_AU3_FUNCTION = 4
SCE_AU3_KEYWORD = 5
SCE_AU3_MACRO = 6
SCE_AU3_NUMBER = 3
SCE_AU3_OPERATOR = 8
SCE_AU3_PREPROCESSOR = 11
SCE_AU3_SENT = 10
SCE_AU3_SPECIAL = 12
SCE_AU3_STRING = 7
SCE_AU3_UDF = 15
SCE_AU3_VARIABLE = 9
SCE_AVE_COMMENT = 1
SCE_AVE_DEFAULT = 0
SCE_AVE_ENUM = 7
SCE_AVE_IDENTIFIER = 9
SCE_AVE_NUMBER = 2
SCE_AVE_OPERATOR = 10
SCE_AVE_STRING = 6
SCE_AVE_STRINGEOL = 8
SCE_AVE_WORD = 3
SCE_AVE_WORD1 = 11
SCE_AVE_WORD2 = 12
SCE_AVE_WORD3 = 13
SCE_AVE_WORD4 = 14
SCE_AVE_WORD5 = 15
SCE_AVE_WORD6 = 16
SCE_AVS_CLIPPROP = 13
SCE_AVS_COMMENTBLOCK = 1
SCE_AVS_COMMENTBLOCKN = 2
SCE_AVS_COMMENTLINE = 3
SCE_AVS_DEFAULT = 0
SCE_AVS_FILTER = 10
SCE_AVS_FUNCTION = 12
SCE_AVS_IDENTIFIER = 6
SCE_AVS_KEYWORD = 9
SCE_AVS_NUMBER = 4
SCE_AVS_OPERATOR = 5
SCE_AVS_PLUGIN = 11
SCE_AVS_STRING = 7
SCE_AVS_TRIPLESTRING = 8
SCE_AVS_USERDFN = 14
SCE_BAAN_COMMENT = 1
SCE_BAAN_COMMENTDOC = 2
SCE_BAAN_DEFAULT = 0
SCE_BAAN_IDENTIFIER = 8
SCE_BAAN_NUMBER = 3
SCE_BAAN_OPERATOR = 7
SCE_BAAN_PREPROCESSOR = 6
SCE_BAAN_STRING = 5
SCE_BAAN_STRINGEOL = 9
SCE_BAAN_WORD = 4
SCE_BAAN_WORD2 = 10
SCE_BAT_CLABEL = 10
SCE_BAT_COMMAND = 5
SCE_BAT_COMMENT = 1
SCE_BAT_DEFAULT = 0
SCE_BAT_ENVIRONMENT = 8
SCE_BAT_EXPANSION = 9
SCE_BAT_HIDE = 4
SCE_BAT_IDENTIFIER = 6
SCE_BAT_LABEL = 3
SCE_BAT_OPERATOR = 7
SCE_BAT_WORD = 2
SCE_B_ASM = 14
SCE_B_BINNUMBER = 18
SCE_B_COMMENT = 1
SCE_B_CONSTANT = 13
SCE_B_DATE = 8
SCE_B_DEFAULT = 0
SCE_B_ERROR = 16
SCE_B_HEXNUMBER = 17
SCE_B_IDENTIFIER = 7
SCE_B_KEYWORD = 3
SCE_B_KEYWORD2 = 10
SCE_B_KEYWORD3 = 11
SCE_B_KEYWORD4 = 12
SCE_B_LABEL = 15
SCE_B_NUMBER = 2
SCE_B_OPERATOR = 6
SCE_B_PREPROCESSOR = 5
SCE_B_STRING = 4
SCE_B_STRINGEOL = 9
SCE_CAML_CHAR = 9
SCE_CAML_COMMENT = 12
SCE_CAML_COMMENT1 = 13
SCE_CAML_COMMENT2 = 14
SCE_CAML_COMMENT3 = 15
SCE_CAML_DEFAULT = 0
SCE_CAML_IDENTIFIER = 1
SCE_CAML_KEYWORD = 3
SCE_CAML_KEYWORD2 = 4
SCE_CAML_KEYWORD3 = 5
SCE_CAML_LINENUM = 6
SCE_CAML_NUMBER = 8
SCE_CAML_OPERATOR = 7
SCE_CAML_STRING = 11
SCE_CAML_TAGNAME = 2
SCE_CAML_WHITE = 10
SCE_CLW_ATTRIBUTE = 13
SCE_CLW_BUILTIN_PROCEDURES_FUNCTION = 11
SCE_CLW_COMMENT = 2
SCE_CLW_COMPILER_DIRECTIVE = 9
SCE_CLW_DEFAULT = 0
SCE_CLW_DEPRECATED = 16
SCE_CLW_ERROR = 15
SCE_CLW_INTEGER_CONSTANT = 5
SCE_CLW_KEYWORD = 8
SCE_CLW_LABEL = 1
SCE_CLW_PICTURE_STRING = 7
SCE_CLW_REAL_CONSTANT = 6
SCE_CLW_RUNTIME_EXPRESSIONS = 10
SCE_CLW_STANDARD_EQUATE = 14
SCE_CLW_STRING = 3
SCE_CLW_STRUCTURE_DATA_TYPE = 12
SCE_CLW_USER_IDENTIFIER = 4
SCE_CMAKE_COMMANDS = 5
SCE_CMAKE_COMMENT = 1
SCE_CMAKE_DEFAULT = 0
SCE_CMAKE_FOREACHDEF = 10
SCE_CMAKE_IFDEFINEDEF = 11
SCE_CMAKE_MACRODEF = 12
SCE_CMAKE_NUMBER = 14
SCE_CMAKE_PARAMETERS = 6
SCE_CMAKE_STRINGDQ = 2
SCE_CMAKE_STRINGLQ = 3
SCE_CMAKE_STRINGRQ = 4
SCE_CMAKE_STRINGVAR = 13
SCE_CMAKE_USERDEFINED = 8
SCE_CMAKE_VARIABLE = 7
SCE_CMAKE_WHILEDEF = 9
SCE_COFFEESCRIPT_CHARACTER = 7
SCE_COFFEESCRIPT_COMMENT = 1
SCE_COFFEESCRIPT_COMMENTBLOCK = 22
SCE_COFFEESCRIPT_COMMENTDOC = 3
SCE_COFFEESCRIPT_COMMENTDOCKEYWORD = 17
SCE_COFFEESCRIPT_COMMENTDOCKEYWORDERROR = 18
SCE_COFFEESCRIPT_COMMENTLINE = 2
SCE_COFFEESCRIPT_COMMENTLINEDOC = 15
SCE_COFFEESCRIPT_DEFAULT = 0
SCE_COFFEESCRIPT_GLOBALCLASS = 19
SCE_COFFEESCRIPT_HASHQUOTEDSTRING = 22
SCE_COFFEESCRIPT_IDENTIFIER = 11
SCE_COFFEESCRIPT_NUMBER = 4
SCE_COFFEESCRIPT_OPERATOR = 10
SCE_COFFEESCRIPT_PREPROCESSOR = 9
SCE_COFFEESCRIPT_REGEX = 14
SCE_COFFEESCRIPT_STRING = 6
SCE_COFFEESCRIPT_STRINGEOL = 12
SCE_COFFEESCRIPT_STRINGRAW = 20
SCE_COFFEESCRIPT_TRIPLEVERBATIM = 21
SCE_COFFEESCRIPT_UUID = 8
SCE_COFFEESCRIPT_VERBATIM = 13
SCE_COFFEESCRIPT_VERBOSE_REGEX = 23
SCE_COFFEESCRIPT_VERBOSE_REGEX_COMMENT = 24
SCE_COFFEESCRIPT_WORD = 5
SCE_COFFEESCRIPT_WORD2 = 16
SCE_CONF_COMMENT = 1
SCE_CONF_DEFAULT = 0
SCE_CONF_DIRECTIVE = 9
SCE_CONF_EXTENSION = 4
SCE_CONF_IDENTIFIER = 3
SCE_CONF_IP = 8
SCE_CONF_NUMBER = 2
SCE_CONF_OPERATOR = 7
SCE_CONF_PARAMETER = 5
SCE_CONF_STRING = 6
SCE_CSOUND_ARATE_VAR = 11
SCE_CSOUND_COMMENT = 1
SCE_CSOUND_COMMENTBLOCK = 9
SCE_CSOUND_DEFAULT = 0
SCE_CSOUND_GLOBAL_VAR = 14
SCE_CSOUND_HEADERSTMT = 7
SCE_CSOUND_IDENTIFIER = 5
SCE_CSOUND_INSTR = 4
SCE_CSOUND_IRATE_VAR = 13
SCE_CSOUND_KRATE_VAR = 12
SCE_CSOUND_NUMBER = 2
SCE_CSOUND_OPCODE = 6
SCE_CSOUND_OPERATOR = 3
SCE_CSOUND_PARAM = 10
SCE_CSOUND_STRINGEOL = 15
SCE_CSOUND_USERKEYWORD = 8
SCE_CSS_ATTRIBUTE = 16
SCE_CSS_CLASS = 2
SCE_CSS_COMMENT = 9
SCE_CSS_DEFAULT = 0
SCE_CSS_DIRECTIVE = 12
SCE_CSS_DOUBLESTRING = 13
SCE_CSS_EXTENDED_IDENTIFIER = 19
SCE_CSS_EXTENDED_PSEUDOCLASS = 20
SCE_CSS_EXTENDED_PSEUDOELEMENT = 21
SCE_CSS_ID = 10
SCE_CSS_IDENTIFIER = 6
SCE_CSS_IDENTIFIER2 = 15
SCE_CSS_IDENTIFIER3 = 17
SCE_CSS_IMPORTANT = 11
SCE_CSS_MEDIA = 22
SCE_CSS_OPERATOR = 5
SCE_CSS_PSEUDOCLASS = 3
SCE_CSS_PSEUDOELEMENT = 18
SCE_CSS_SINGLESTRING = 14
SCE_CSS_TAG = 1
SCE_CSS_UNKNOWN_IDENTIFIER = 7
SCE_CSS_UNKNOWN_PSEUDOCLASS = 4
SCE_CSS_VALUE = 8
SCE_CSS_VARIABLE = 23
SCE_C_CHARACTER = 7
SCE_C_COMMENT = 1
SCE_C_COMMENTDOC = 3
SCE_C_COMMENTDOCKEYWORD = 17
SCE_C_COMMENTDOCKEYWORDERROR = 18
SCE_C_COMMENTLINE = 2
SCE_C_COMMENTLINEDOC = 15
SCE_C_DEFAULT = 0
SCE_C_GLOBALCLASS = 19
SCE_C_HASHQUOTEDSTRING = 22
SCE_C_IDENTIFIER = 11
SCE_C_NUMBER = 4
SCE_C_OPERATOR = 10
SCE_C_PREPROCESSOR = 9
SCE_C_PREPROCESSORCOMMENT = 23
SCE_C_REGEX = 14
SCE_C_STRING = 6
SCE_C_STRINGEOL = 12
SCE_C_STRINGRAW = 20
SCE_C_TRIPLEVERBATIM = 21
SCE_C_UUID = 8
SCE_C_VERBATIM = 13
SCE_C_WORD = 5
SCE_C_WORD2 = 16
SCE_DIFF_ADDED = 6
SCE_DIFF_CHANGED = 7
SCE_DIFF_COMMAND = 2
SCE_DIFF_COMMENT = 1
SCE_DIFF_DEFAULT = 0
SCE_DIFF_DELETED = 5
SCE_DIFF_HEADER = 3
SCE_DIFF_POSITION = 4
SCE_D_CHARACTER = 12
SCE_D_COMMENT = 1
SCE_D_COMMENTDOC = 3
SCE_D_COMMENTDOCKEYWORD = 16
SCE_D_COMMENTDOCKEYWORDERROR = 17
SCE_D_COMMENTLINE = 2
SCE_D_COMMENTLINEDOC = 15
SCE_D_COMMENTNESTED = 4
SCE_D_DEFAULT = 0
SCE_D_IDENTIFIER = 14
SCE_D_NUMBER = 5
SCE_D_OPERATOR = 13
SCE_D_STRING = 10
SCE_D_STRINGB = 18
SCE_D_STRINGEOL = 11
SCE_D_STRINGR = 19
SCE_D_TYPEDEF = 9
SCE_D_WORD = 6
SCE_D_WORD2 = 7
SCE_D_WORD3 = 8
SCE_D_WORD5 = 20
SCE_D_WORD6 = 21
SCE_D_WORD7 = 22
SCE_ECL_ADDED = 24
SCE_ECL_CHANGED = 26
SCE_ECL_CHARACTER = 7
SCE_ECL_COMMENT = 1
SCE_ECL_COMMENTDOC = 23
SCE_ECL_COMMENTDOCKEYWORD = 17
SCE_ECL_COMMENTDOCKEYWORDERROR = 18
SCE_ECL_COMMENTLINE = 2
SCE_ECL_COMMENTLINEDOC = 15
SCE_ECL_DEFAULT = 0
SCE_ECL_DELETED = 25
SCE_ECL_IDENTIFIER = 11
SCE_ECL_MOVED = 27
SCE_ECL_NUMBER = 3
SCE_ECL_OPERATOR = 6
SCE_ECL_PREPROCESSOR = 9
SCE_ECL_REGEX = 14
SCE_ECL_STRING = 4
SCE_ECL_STRINGEOL = 12
SCE_ECL_UNKNOWN = 10
SCE_ECL_UUID = 8
SCE_ECL_VERBATIM = 13
SCE_ECL_WORD0 = 5
SCE_ECL_WORD1 = 16
SCE_ECL_WORD2 = 19
SCE_ECL_WORD3 = 20
SCE_ECL_WORD4 = 21
SCE_ECL_WORD5 = 22
SCE_EIFFEL_CHARACTER = 5
SCE_EIFFEL_COMMENTLINE = 1
SCE_EIFFEL_DEFAULT = 0
SCE_EIFFEL_IDENTIFIER = 7
SCE_EIFFEL_NUMBER = 2
SCE_EIFFEL_OPERATOR = 6
SCE_EIFFEL_STRING = 4
SCE_EIFFEL_STRINGEOL = 8
SCE_EIFFEL_WORD = 3
SCE_ERLANG_ATOM = 7
SCE_ERLANG_ATOM_QUOTED = 18
SCE_ERLANG_BIFS = 22
SCE_ERLANG_CHARACTER = 9
SCE_ERLANG_COMMENT = 1
SCE_ERLANG_COMMENT_DOC = 16
SCE_ERLANG_COMMENT_DOC_MACRO = 17
SCE_ERLANG_COMMENT_FUNCTION = 14
SCE_ERLANG_COMMENT_MODULE = 15
SCE_ERLANG_DEFAULT = 0
SCE_ERLANG_FUNCTION_NAME = 8
SCE_ERLANG_KEYWORD = 4
SCE_ERLANG_MACRO = 10
SCE_ERLANG_MACRO_QUOTED = 19
SCE_ERLANG_MODULES = 23
SCE_ERLANG_MODULES_ATT = 24
SCE_ERLANG_NODE_NAME = 13
SCE_ERLANG_NODE_NAME_QUOTED = 21
SCE_ERLANG_NUMBER = 3
SCE_ERLANG_OPERATOR = 6
SCE_ERLANG_PREPROC = 12
SCE_ERLANG_RECORD = 11
SCE_ERLANG_RECORD_QUOTED = 20
SCE_ERLANG_STRING = 5
SCE_ERLANG_UNKNOWN = 31
SCE_ERLANG_VARIABLE = 2
SCE_ERR_ABSF = 18
SCE_ERR_BORLAND = 5
SCE_ERR_CMD = 4
SCE_ERR_CTAG = 9
SCE_ERR_DEFAULT = 0
SCE_ERR_DIFF_ADDITION = 11
SCE_ERR_DIFF_CHANGED = 10
SCE_ERR_DIFF_DELETION = 12
SCE_ERR_DIFF_MESSAGE = 13
SCE_ERR_ELF = 15
SCE_ERR_FIND_VALUE = 30
SCE_ERR_GCC = 2
SCE_ERR_IFC = 16
SCE_ERR_IFORT = 17
SCE_ERR_JAVA_STACK = 20
SCE_ERR_LUA = 8
SCE_ERR_MS = 3
SCE_ERR_NET = 7
SCE_ERR_PERL = 6
SCE_ERR_PHP = 14
SCE_ERR_PYTHON = 1
SCE_ERR_TIDY = 19
SCE_ERR_VALUE = 21
SCE_ESCRIPT_BRACE = 9
SCE_ESCRIPT_COMMENT = 1
SCE_ESCRIPT_COMMENTDOC = 3
SCE_ESCRIPT_COMMENTLINE = 2
SCE_ESCRIPT_DEFAULT = 0
SCE_ESCRIPT_IDENTIFIER = 8
SCE_ESCRIPT_NUMBER = 4
SCE_ESCRIPT_OPERATOR = 7
SCE_ESCRIPT_STRING = 6
SCE_ESCRIPT_WORD = 5
SCE_ESCRIPT_WORD2 = 10
SCE_ESCRIPT_WORD3 = 11
SCE_EUPHORIA_CHARACTER = 5
SCE_EUPHORIA_COMMENT = 18
SCE_EUPHORIA_COMMENTLINE = 1
SCE_EUPHORIA_DEFAULT = 0
SCE_EUPHORIA_HEXNUMBER = 3
SCE_EUPHORIA_IDENTIFIER = 7
SCE_EUPHORIA_NUMBER = 2
SCE_EUPHORIA_OPERATOR = 8
SCE_EUPHORIA_STRING = 4
SCE_EUPHORIA_STRINGEOL = 6
SCE_EUPHORIA_WORD = 10
SCE_EUPHORIA_WORD2 = 11
SCE_EUPHORIA_WORD3 = 12
SCE_EUPHORIA_WORD4 = 13
SCE_EUPHORIA_WORD5 = 14
SCE_EUPHORIA_WORD6 = 15
SCE_EUPHORIA_WORD7 = 16
SCE_EUPHORIA_WORD8 = 17
SCE_FORTH_COMMENT = 1
SCE_FORTH_COMMENT_ML = 2
SCE_FORTH_CONTROL = 4
SCE_FORTH_DEFAULT = 0
SCE_FORTH_DEFWORD = 6
SCE_FORTH_GUI = 12
SCE_FORTH_IDENTIFIER = 3
SCE_FORTH_KEYWORD = 5
SCE_FORTH_LOCALE = 11
SCE_FORTH_NUMBER = 9
SCE_FORTH_OOP = 13
SCE_FORTH_PREWORD1 = 7
SCE_FORTH_PREWORD2 = 8
SCE_FORTH_STRING = 10
SCE_FORTH_WORD1 = 14
SCE_FORTH_WORD2 = 15
SCE_FORTH_WORD3 = 16
SCE_FORTH_WORD4 = 17
SCE_FS_COMMENT = 1
SCE_FS_COMMENTDOC = 3
SCE_FS_COMMENTDOCKEYWORD = 5
SCE_FS_COMMENTDOCKEYWORDERROR = 6
SCE_FS_COMMENTDOC_C = 22
SCE_FS_COMMENTLINE = 2
SCE_FS_COMMENTLINEDOC = 4
SCE_FS_COMMENTLINEDOC_C = 23
SCE_FS_CONSTANT = 18
SCE_FS_DATE = 16
SCE_FS_DEFAULT = 0
SCE_FS_DEFAULT_C = 21
SCE_FS_DISABLEDCODE = 20
SCE_FS_IDENTIFIER = 15
SCE_FS_IDENTIFIER_C = 30
SCE_FS_KEYWORD = 7
SCE_FS_KEYWORD2 = 8
SCE_FS_KEYWORD2_C = 25
SCE_FS_KEYWORD3 = 9
SCE_FS_KEYWORD4 = 10
SCE_FS_KEYWORD_C = 24
SCE_FS_NUMBER = 11
SCE_FS_NUMBER_C = 26
SCE_FS_OPERATOR = 14
SCE_FS_OPERATOR_C = 29
SCE_FS_PREPROCESSOR = 13
SCE_FS_PREPROCESSOR_C = 28
SCE_FS_STRING = 12
SCE_FS_STRINGEOL = 17
SCE_FS_STRINGEOL_C = 31
SCE_FS_STRING_C = 27
SCE_FS_WORDOPERATOR = 19
SCE_F_COMMENT = 1
SCE_F_CONTINUATION = 14
SCE_F_DEFAULT = 0
SCE_F_IDENTIFIER = 7
SCE_F_LABEL = 13
SCE_F_NUMBER = 2
SCE_F_OPERATOR = 6
SCE_F_OPERATOR2 = 12
SCE_F_PREPROCESSOR = 11
SCE_F_STRING1 = 3
SCE_F_STRING2 = 4
SCE_F_STRINGEOL = 5
SCE_F_WORD = 8
SCE_F_WORD2 = 9
SCE_F_WORD3 = 10
SCE_GAP_CHAR = 7
SCE_GAP_COMMENT = 9
SCE_GAP_DEFAULT = 0
SCE_GAP_IDENTIFIER = 1
SCE_GAP_KEYWORD = 2
SCE_GAP_KEYWORD2 = 3
SCE_GAP_KEYWORD3 = 4
SCE_GAP_KEYWORD4 = 5
SCE_GAP_NUMBER = 10
SCE_GAP_OPERATOR = 8
SCE_GAP_STRING = 6
SCE_GAP_STRINGEOL = 11
SCE_GC_ATTRIBUTE = 5
SCE_GC_COMMAND = 7
SCE_GC_COMMENTBLOCK = 2
SCE_GC_COMMENTLINE = 1
SCE_GC_CONTROL = 6
SCE_GC_DEFAULT = 0
SCE_GC_EVENT = 4
SCE_GC_GLOBAL = 3
SCE_GC_OPERATOR = 9
SCE_GC_STRING = 8
SCE_HA_CAPITAL = 8
SCE_HA_CHARACTER = 5
SCE_HA_CLASS = 6
SCE_HA_COMMENTBLOCK = 14
SCE_HA_COMMENTBLOCK2 = 15
SCE_HA_COMMENTBLOCK3 = 16
SCE_HA_COMMENTLINE = 13
SCE_HA_DATA = 9
SCE_HA_DEFAULT = 0
SCE_HA_IDENTIFIER = 1
SCE_HA_IMPORT = 10
SCE_HA_INSTANCE = 12
SCE_HA_KEYWORD = 2
SCE_HA_MODULE = 7
SCE_HA_NUMBER = 3
SCE_HA_OPERATOR = 11
SCE_HA_STRING = 4
SCE_HBA_COMMENTLINE = 82
SCE_HBA_DEFAULT = 81
SCE_HBA_IDENTIFIER = 86
SCE_HBA_NUMBER = 83
SCE_HBA_START = 80
SCE_HBA_STRING = 85
SCE_HBA_STRINGEOL = 87
SCE_HBA_WORD = 84
SCE_HB_COMMENTLINE = 72
SCE_HB_DEFAULT = 71
SCE_HB_IDENTIFIER = 76
SCE_HB_NUMBER = 73
SCE_HB_START = 70
SCE_HB_STRING = 75
SCE_HB_STRINGEOL = 77
SCE_HB_WORD = 74
SCE_HJA_COMMENT = 57
SCE_HJA_COMMENTDOC = 59
SCE_HJA_COMMENTLINE = 58
SCE_HJA_DEFAULT = 56
SCE_HJA_DOUBLESTRING = 63
SCE_HJA_KEYWORD = 62
SCE_HJA_NUMBER = 60
SCE_HJA_REGEX = 67
SCE_HJA_SINGLESTRING = 64
SCE_HJA_START = 55
SCE_HJA_STRINGEOL = 66
SCE_HJA_SYMBOLS = 65
SCE_HJA_WORD = 61
SCE_HJ_COMMENT = 42
SCE_HJ_COMMENTDOC = 44
SCE_HJ_COMMENTLINE = 43
SCE_HJ_DEFAULT = 41
SCE_HJ_DOUBLESTRING = 48
SCE_HJ_KEYWORD = 47
SCE_HJ_NUMBER = 45
SCE_HJ_REGEX = 52
SCE_HJ_SINGLESTRING = 49
SCE_HJ_START = 40
SCE_HJ_STRINGEOL = 51
SCE_HJ_SYMBOLS = 50
SCE_HJ_WORD = 46
SCE_HPA_CHARACTER = 110
SCE_HPA_CLASSNAME = 114
SCE_HPA_COMMENTLINE = 107
SCE_HPA_DEFAULT = 106
SCE_HPA_DEFNAME = 115
SCE_HPA_IDENTIFIER = 117
SCE_HPA_NUMBER = 108
SCE_HPA_OPERATOR = 116
SCE_HPA_START = 105
SCE_HPA_STRING = 109
SCE_HPA_TRIPLE = 112
SCE_HPA_TRIPLEDOUBLE = 113
SCE_HPA_WORD = 111
SCE_HPHP_COMMENT = 124
SCE_HPHP_COMMENTLINE = 125
SCE_HPHP_COMPLEX_VARIABLE = 104
SCE_HPHP_DEFAULT = 118
SCE_HPHP_HSTRING = 119
SCE_HPHP_HSTRING_VARIABLE = 126
SCE_HPHP_NUMBER = 122
SCE_HPHP_OPERATOR = 127
SCE_HPHP_SIMPLESTRING = 120
SCE_HPHP_VARIABLE = 123
SCE_HPHP_WORD = 121
SCE_HP_CHARACTER = 95
SCE_HP_CLASSNAME = 99
SCE_HP_COMMENTLINE = 92
SCE_HP_DEFAULT = 91
SCE_HP_DEFNAME = 100
SCE_HP_IDENTIFIER = 102
SCE_HP_NUMBER = 93
SCE_HP_OPERATOR = 101
SCE_HP_START = 90
SCE_HP_STRING = 94
SCE_HP_TRIPLE = 97
SCE_HP_TRIPLEDOUBLE = 98
SCE_HP_WORD = 96
SCE_H_ASP = 15
SCE_H_ASPAT = 16
SCE_H_ATTRIBUTE = 3
SCE_H_ATTRIBUTEUNKNOWN = 4
SCE_H_CDATA = 17
SCE_H_COMMENT = 9
SCE_H_DEFAULT = 0
SCE_H_DOUBLESTRING = 6
SCE_H_ENTITY = 10
SCE_H_NUMBER = 5
SCE_H_OTHER = 8
SCE_H_QUESTION = 18
SCE_H_SCRIPT = 14
SCE_H_SGML_1ST_PARAM = 23
SCE_H_SGML_1ST_PARAM_COMMENT = 30
SCE_H_SGML_BLOCK_DEFAULT = 31
SCE_H_SGML_COMMAND = 22
SCE_H_SGML_COMMENT = 29
SCE_H_SGML_DEFAULT = 21
SCE_H_SGML_DOUBLESTRING = 24
SCE_H_SGML_ENTITY = 28
SCE_H_SGML_ERROR = 26
SCE_H_SGML_SIMPLESTRING = 25
SCE_H_SGML_SPECIAL = 27
SCE_H_SINGLESTRING = 7
SCE_H_TAG = 1
SCE_H_TAGEND = 11
SCE_H_TAGUNKNOWN = 2
SCE_H_VALUE = 19
SCE_H_XCCOMMENT = 20
SCE_H_XMLEND = 13
SCE_H_XMLSTART = 12
SCE_INNO_COMMENT = 1
SCE_INNO_COMMENT_PASCAL = 7
SCE_INNO_DEFAULT = 0
SCE_INNO_IDENTIFIER = 12
SCE_INNO_INLINE_EXPANSION = 6
SCE_INNO_KEYWORD = 2
SCE_INNO_KEYWORD_PASCAL = 8
SCE_INNO_KEYWORD_USER = 9
SCE_INNO_PARAMETER = 3
SCE_INNO_PREPROC = 5
SCE_INNO_SECTION = 4
SCE_INNO_STRING_DOUBLE = 10
SCE_INNO_STRING_SINGLE = 11
SCE_KIX_COMMENT = 1
SCE_KIX_DEFAULT = 0
SCE_KIX_FUNCTIONS = 8
SCE_KIX_IDENTIFIER = 31
SCE_KIX_KEYWORD = 7
SCE_KIX_MACRO = 6
SCE_KIX_NUMBER = 4
SCE_KIX_OPERATOR = 9
SCE_KIX_STRING1 = 2
SCE_KIX_STRING2 = 3
SCE_KIX_VAR = 5
SCE_LISP_COMMENT = 1
SCE_LISP_DEFAULT = 0
SCE_LISP_IDENTIFIER = 9
SCE_LISP_KEYWORD = 3
SCE_LISP_KEYWORD_KW = 4
SCE_LISP_MULTI_COMMENT = 12
SCE_LISP_NUMBER = 2
SCE_LISP_OPERATOR = 10
SCE_LISP_SPECIAL = 11
SCE_LISP_STRING = 6
SCE_LISP_STRINGEOL = 8
SCE_LISP_SYMBOL = 5
SCE_LOT_ABORT = 6
SCE_LOT_BREAK = 2
SCE_LOT_DEFAULT = 0
SCE_LOT_FAIL = 5
SCE_LOT_HEADER = 1
SCE_LOT_PASS = 4
SCE_LOT_SET = 3
SCE_LOUT_COMMENT = 1
SCE_LOUT_DEFAULT = 0
SCE_LOUT_IDENTIFIER = 9
SCE_LOUT_NUMBER = 2
SCE_LOUT_OPERATOR = 8
SCE_LOUT_STRING = 7
SCE_LOUT_STRINGEOL = 10
SCE_LOUT_WORD = 3
SCE_LOUT_WORD2 = 4
SCE_LOUT_WORD3 = 5
SCE_LOUT_WORD4 = 6
SCE_LUA_CHARACTER = 7
SCE_LUA_COMMENT = 1
SCE_LUA_COMMENTDOC = 3
SCE_LUA_COMMENTLINE = 2
SCE_LUA_DEFAULT = 0
SCE_LUA_IDENTIFIER = 11
SCE_LUA_LABEL = 20
SCE_LUA_LITERALSTRING = 8
SCE_LUA_NUMBER = 4
SCE_LUA_OPERATOR = 10
SCE_LUA_PREPROCESSOR = 9
SCE_LUA_STRING = 6
SCE_LUA_STRINGEOL = 12
SCE_LUA_WORD = 5
SCE_LUA_WORD2 = 13
SCE_LUA_WORD3 = 14
SCE_LUA_WORD4 = 15
SCE_LUA_WORD5 = 16
SCE_LUA_WORD6 = 17
SCE_LUA_WORD7 = 18
SCE_LUA_WORD8 = 19
SCE_L_CMDOPT = 11
SCE_L_COMMAND = 1
SCE_L_COMMENT = 4
SCE_L_COMMENT2 = 7
SCE_L_DEFAULT = 0
SCE_L_ERROR = 12
SCE_L_MATH = 3
SCE_L_MATH2 = 6
SCE_L_SHORTCMD = 9
SCE_L_SPECIAL = 10
SCE_L_TAG = 2
SCE_L_TAG2 = 5
SCE_L_VERBATIM = 8
SCE_MAGIK_BRACE_BLOCK = 10
SCE_MAGIK_BRACKET_BLOCK = 9
SCE_MAGIK_CHARACTER = 3
SCE_MAGIK_COMMENT = 1
SCE_MAGIK_CONTAINER = 8
SCE_MAGIK_DEFAULT = 0
SCE_MAGIK_FLOW = 7
SCE_MAGIK_HYPER_COMMENT = 16
SCE_MAGIK_IDENTIFIER = 5
SCE_MAGIK_KEYWORD = 13
SCE_MAGIK_NUMBER = 4
SCE_MAGIK_OPERATOR = 6
SCE_MAGIK_PRAGMA = 14
SCE_MAGIK_SQBRACKET_BLOCK = 11
SCE_MAGIK_STRING = 2
SCE_MAGIK_SYMBOL = 15
SCE_MAGIK_UNKNOWN_KEYWORD = 12
SCE_MAKE_COMMENT = 1
SCE_MAKE_DEFAULT = 0
SCE_MAKE_IDENTIFIER = 3
SCE_MAKE_IDEOL = 9
SCE_MAKE_OPERATOR = 4
SCE_MAKE_PREPROCESSOR = 2
SCE_MAKE_TARGET = 5
SCE_MARKDOWN_BLOCKQUOTE = 15
SCE_MARKDOWN_CODE = 19
SCE_MARKDOWN_CODE2 = 20
SCE_MARKDOWN_CODEBK = 21
SCE_MARKDOWN_DEFAULT = 0
SCE_MARKDOWN_EM1 = 4
SCE_MARKDOWN_EM2 = 5
SCE_MARKDOWN_HEADER1 = 6
SCE_MARKDOWN_HEADER2 = 7
SCE_MARKDOWN_HEADER3 = 8
SCE_MARKDOWN_HEADER4 = 9
SCE_MARKDOWN_HEADER5 = 10
SCE_MARKDOWN_HEADER6 = 11
SCE_MARKDOWN_HRULE = 17
SCE_MARKDOWN_LINE_BEGIN = 1
SCE_MARKDOWN_LINK = 18
SCE_MARKDOWN_OLIST_ITEM = 14
SCE_MARKDOWN_PRECHAR = 12
SCE_MARKDOWN_STRIKEOUT = 16
SCE_MARKDOWN_STRONG1 = 2
SCE_MARKDOWN_STRONG2 = 3
SCE_MARKDOWN_ULIST_ITEM = 13
SCE_MATLAB_COMMAND = 2
SCE_MATLAB_COMMENT = 1
SCE_MATLAB_DEFAULT = 0
SCE_MATLAB_DOUBLEQUOTESTRING = 8
SCE_MATLAB_IDENTIFIER = 7
SCE_MATLAB_KEYWORD = 4
SCE_MATLAB_NUMBER = 3
SCE_MATLAB_OPERATOR = 6
SCE_MATLAB_STRING = 5
SCE_METAPOST_COMMAND = 4
SCE_METAPOST_DEFAULT = 0
SCE_METAPOST_EXTRA = 6
SCE_METAPOST_GROUP = 2
SCE_METAPOST_SPECIAL = 1
SCE_METAPOST_SYMBOL = 3
SCE_METAPOST_TEXT = 5
SCE_MMIXAL_CHAR = 11
SCE_MMIXAL_COMMENT = 1
SCE_MMIXAL_HEX = 14
SCE_MMIXAL_INCLUDE = 17
SCE_MMIXAL_LABEL = 2
SCE_MMIXAL_LEADWS = 0
SCE_MMIXAL_NUMBER = 9
SCE_MMIXAL_OPCODE = 3
SCE_MMIXAL_OPCODE_POST = 7
SCE_MMIXAL_OPCODE_PRE = 4
SCE_MMIXAL_OPCODE_UNKNOWN = 6
SCE_MMIXAL_OPCODE_VALID = 5
SCE_MMIXAL_OPERANDS = 8
SCE_MMIXAL_OPERATOR = 15
SCE_MMIXAL_REF = 10
SCE_MMIXAL_REGISTER = 13
SCE_MMIXAL_STRING = 12
SCE_MMIXAL_SYMBOL = 16
SCE_MODULA_BADSTR = 17
SCE_MODULA_BASENUM = 7
SCE_MODULA_CHAR = 11
SCE_MODULA_CHARSPEC = 12
SCE_MODULA_COMMENT = 1
SCE_MODULA_DEFAULT = 0
SCE_MODULA_DOXYCOMM = 2
SCE_MODULA_DOXYKEY = 3
SCE_MODULA_FLOAT = 8
SCE_MODULA_KEYWORD = 4
SCE_MODULA_NUMBER = 6
SCE_MODULA_OPERATOR = 16
SCE_MODULA_PRAGMA = 14
SCE_MODULA_PRGKEY = 15
SCE_MODULA_PROC = 13
SCE_MODULA_RESERVED = 5
SCE_MODULA_STRING = 9
SCE_MODULA_STRSPEC = 10
SCE_MSSQL_COLUMN_NAME = 8
SCE_MSSQL_COLUMN_NAME_2 = 16
SCE_MSSQL_COMMENT = 1
SCE_MSSQL_DATATYPE = 10
SCE_MSSQL_DEFAULT = 0
SCE_MSSQL_DEFAULT_PREF_DATATYPE = 15
SCE_MSSQL_FUNCTION = 13
SCE_MSSQL_GLOBAL_VARIABLE = 12
SCE_MSSQL_IDENTIFIER = 6
SCE_MSSQL_LINE_COMMENT = 2
SCE_MSSQL_NUMBER = 3
SCE_MSSQL_OPERATOR = 5
SCE_MSSQL_STATEMENT = 9
SCE_MSSQL_STORED_PROCEDURE = 14
SCE_MSSQL_STRING = 4
SCE_MSSQL_SYSTABLE = 11
SCE_MSSQL_VARIABLE = 7
SCE_MYSQL_COMMENT = 1
SCE_MYSQL_COMMENTLINE = 2
SCE_MYSQL_DATABASEOBJECT = 9
SCE_MYSQL_DEFAULT = 0
SCE_MYSQL_DQSTRING = 13
SCE_MYSQL_FUNCTION = 15
SCE_MYSQL_HIDDENCOMMAND = 21
SCE_MYSQL_IDENTIFIER = 16
SCE_MYSQL_KEYWORD = 8
SCE_MYSQL_KNOWNSYSTEMVARIABLE = 5
SCE_MYSQL_MAJORKEYWORD = 7
SCE_MYSQL_NUMBER = 6
SCE_MYSQL_OPERATOR = 14
SCE_MYSQL_PROCEDUREKEYWORD = 10
SCE_MYSQL_QUOTEDIDENTIFIER = 17
SCE_MYSQL_SQSTRING = 12
SCE_MYSQL_STRING = 11
SCE_MYSQL_SYSTEMVARIABLE = 4
SCE_MYSQL_USER1 = 18
SCE_MYSQL_USER2 = 19
SCE_MYSQL_USER3 = 20
SCE_MYSQL_VARIABLE = 3
SCE_NNCRONTAB_ASTERISK = 6
SCE_NNCRONTAB_COMMENT = 1
SCE_NNCRONTAB_DEFAULT = 0
SCE_NNCRONTAB_ENVIRONMENT = 9
SCE_NNCRONTAB_IDENTIFIER = 10
SCE_NNCRONTAB_KEYWORD = 4
SCE_NNCRONTAB_MODIFIER = 5
SCE_NNCRONTAB_NUMBER = 7
SCE_NNCRONTAB_SECTION = 3
SCE_NNCRONTAB_STRING = 8
SCE_NNCRONTAB_TASK = 2
SCE_NNCRONTAB_WORD1 = 11
SCE_NNCRONTAB_WORD2 = 12
SCE_NNCRONTAB_WORD3 = 13
SCE_NNCRONTAB_WORD4 = 14
SCE_NNCRONTAB_WORD5 = 15
SCE_NNCRONTAB_WORD6 = 16
SCE_NSIS_COMMENT = 1
SCE_NSIS_COMMENTBOX = 18
SCE_NSIS_DEFAULT = 0
SCE_NSIS_FUNCTION = 5
SCE_NSIS_FUNCTIONDEF = 17
SCE_NSIS_IFDEFINEDEF = 11
SCE_NSIS_LABEL = 7
SCE_NSIS_MACRODEF = 12
SCE_NSIS_NUMBER = 14
SCE_NSIS_PAGEEX = 16
SCE_NSIS_SECTIONDEF = 9
SCE_NSIS_SECTIONGROUP = 15
SCE_NSIS_STRINGDQ = 2
SCE_NSIS_STRINGLQ = 3
SCE_NSIS_STRINGRQ = 4
SCE_NSIS_STRINGVAR = 13
SCE_NSIS_SUBSECTIONDEF = 10
SCE_NSIS_USERDEFINED = 8
SCE_NSIS_VARIABLE = 6
SCE_OPAL_BOOL_CONST = 8
SCE_OPAL_COMMENT_BLOCK = 1
SCE_OPAL_COMMENT_LINE = 2
SCE_OPAL_DEFAULT = 32
SCE_OPAL_INTEGER = 3
SCE_OPAL_KEYWORD = 4
SCE_OPAL_PAR = 7
SCE_OPAL_SORT = 5
SCE_OPAL_SPACE = 0
SCE_OPAL_STRING = 6
SCE_OSCRIPT_BLOCK_COMMENT = 2
SCE_OSCRIPT_CONSTANT = 8
SCE_OSCRIPT_DEFAULT = 0
SCE_OSCRIPT_DOC_COMMENT = 3
SCE_OSCRIPT_DOUBLEQUOTE_STRING = 7
SCE_OSCRIPT_FUNCTION = 15
SCE_OSCRIPT_GLOBAL = 10
SCE_OSCRIPT_IDENTIFIER = 9
SCE_OSCRIPT_KEYWORD = 11
SCE_OSCRIPT_LABEL = 13
SCE_OSCRIPT_LINE_COMMENT = 1
SCE_OSCRIPT_METHOD = 18
SCE_OSCRIPT_NUMBER = 5
SCE_OSCRIPT_OBJECT = 16
SCE_OSCRIPT_OPERATOR = 12
SCE_OSCRIPT_PREPROCESSOR = 4
SCE_OSCRIPT_PROPERTY = 17
SCE_OSCRIPT_SINGLEQUOTE_STRING = 6
SCE_OSCRIPT_TYPE = 14
SCE_PAS_ASM = 14
SCE_PAS_CHARACTER = 12
SCE_PAS_COMMENT = 2
SCE_PAS_COMMENT2 = 3
SCE_PAS_COMMENTLINE = 4
SCE_PAS_DEFAULT = 0
SCE_PAS_HEXNUMBER = 8
SCE_PAS_IDENTIFIER = 1
SCE_PAS_NUMBER = 7
SCE_PAS_OPERATOR = 13
SCE_PAS_PREPROCESSOR = 5
SCE_PAS_PREPROCESSOR2 = 6
SCE_PAS_STRING = 10
SCE_PAS_STRINGEOL = 11
SCE_PAS_WORD = 9
SCE_PLM_COMMENT = 1
SCE_PLM_CONTROL = 6
SCE_PLM_DEFAULT = 0
SCE_PLM_IDENTIFIER = 4
SCE_PLM_KEYWORD = 7
SCE_PLM_NUMBER = 3
SCE_PLM_OPERATOR = 5
SCE_PLM_STRING = 2
SCE_PL_ARRAY = 13
SCE_PL_BACKTICKS = 20
SCE_PL_BACKTICKS_VAR = 57
SCE_PL_CHARACTER = 7
SCE_PL_COMMENTLINE = 2
SCE_PL_DATASECTION = 21
SCE_PL_DEFAULT = 0
SCE_PL_ERROR = 1
SCE_PL_FORMAT = 42
SCE_PL_FORMAT_IDENT = 41
SCE_PL_HASH = 14
SCE_PL_HERE_DELIM = 22
SCE_PL_HERE_Q = 23
SCE_PL_HERE_QQ = 24
SCE_PL_HERE_QQ_VAR = 61
SCE_PL_HERE_QX = 25
SCE_PL_HERE_QX_VAR = 62
SCE_PL_IDENTIFIER = 11
SCE_PL_LONGQUOTE = 19
SCE_PL_NUMBER = 4
SCE_PL_OPERATOR = 10
SCE_PL_POD = 3
SCE_PL_POD_VERB = 31
SCE_PL_PREPROCESSOR = 9
SCE_PL_PUNCTUATION = 8
SCE_PL_REGEX = 17
SCE_PL_REGEX_VAR = 54
SCE_PL_REGSUBST = 18
SCE_PL_REGSUBST_VAR = 55
SCE_PL_SCALAR = 12
SCE_PL_STRING = 6
SCE_PL_STRING_Q = 26
SCE_PL_STRING_QQ = 27
SCE_PL_STRING_QQ_VAR = 64
SCE_PL_STRING_QR = 29
SCE_PL_STRING_QR_VAR = 66
SCE_PL_STRING_QW = 30
SCE_PL_STRING_QX = 28
SCE_PL_STRING_QX_VAR = 65
SCE_PL_STRING_VAR = 43
SCE_PL_SUB_PROTOTYPE = 40
SCE_PL_SYMBOLTABLE = 15
SCE_PL_VARIABLE_INDEXER = 16
SCE_PL_WORD = 5
SCE_PL_XLAT = 44
SCE_POV_BADDIRECTIVE = 9
SCE_POV_COMMENT = 1
SCE_POV_COMMENTLINE = 2
SCE_POV_DEFAULT = 0
SCE_POV_DIRECTIVE = 8
SCE_POV_IDENTIFIER = 5
SCE_POV_NUMBER = 3
SCE_POV_OPERATOR = 4
SCE_POV_STRING = 6
SCE_POV_STRINGEOL = 7
SCE_POV_WORD2 = 10
SCE_POV_WORD3 = 11
SCE_POV_WORD4 = 12
SCE_POV_WORD5 = 13
SCE_POV_WORD6 = 14
SCE_POV_WORD7 = 15
SCE_POV_WORD8 = 16
SCE_POWERPRO_ALTQUOTE = 15
SCE_POWERPRO_COMMENTBLOCK = 1
SCE_POWERPRO_COMMENTLINE = 2
SCE_POWERPRO_DEFAULT = 0
SCE_POWERPRO_DOUBLEQUOTEDSTRING = 8
SCE_POWERPRO_FUNCTION = 16
SCE_POWERPRO_IDENTIFIER = 12
SCE_POWERPRO_LINECONTINUE = 10
SCE_POWERPRO_NUMBER = 3
SCE_POWERPRO_OPERATOR = 11
SCE_POWERPRO_SINGLEQUOTEDSTRING = 9
SCE_POWERPRO_STRINGEOL = 13
SCE_POWERPRO_VERBATIM = 14
SCE_POWERPRO_WORD = 4
SCE_POWERPRO_WORD2 = 5
SCE_POWERPRO_WORD3 = 6
SCE_POWERPRO_WORD4 = 7
SCE_POWERSHELL_ALIAS = 10
SCE_POWERSHELL_CHARACTER = 3
SCE_POWERSHELL_CMDLET = 9
SCE_POWERSHELL_COMMENT = 1
SCE_POWERSHELL_COMMENTSTREAM = 13
SCE_POWERSHELL_DEFAULT = 0
SCE_POWERSHELL_FUNCTION = 11
SCE_POWERSHELL_IDENTIFIER = 7
SCE_POWERSHELL_KEYWORD = 8
SCE_POWERSHELL_NUMBER = 4
SCE_POWERSHELL_OPERATOR = 6
SCE_POWERSHELL_STRING = 2
SCE_POWERSHELL_USER1 = 12
SCE_POWERSHELL_VARIABLE = 5
SCE_PO_COMMENT = 1
SCE_PO_DEFAULT = 0
SCE_PO_ERROR = 15
SCE_PO_FLAGS = 11
SCE_PO_FUZZY = 8
SCE_PO_MSGCTXT = 6
SCE_PO_MSGCTXT_TEXT = 7
SCE_PO_MSGCTXT_TEXT_EOL = 14
SCE_PO_MSGID = 2
SCE_PO_MSGID_TEXT = 3
SCE_PO_MSGID_TEXT_EOL = 12
SCE_PO_MSGSTR = 4
SCE_PO_MSGSTR_TEXT = 5
SCE_PO_MSGSTR_TEXT_EOL = 13
SCE_PO_PROGRAMMER_COMMENT = 9
SCE_PO_REFERENCE = 10
SCE_PROPS_ASSIGNMENT = 3
SCE_PROPS_COMMENT = 1
SCE_PROPS_DEFAULT = 0
SCE_PROPS_DEFVAL = 4
SCE_PROPS_KEY = 5
SCE_PROPS_KEYSSET0 = 6
SCE_PROPS_KEYSSET1 = 7
SCE_PROPS_KEYSSET2 = 8
SCE_PROPS_KEYSSET3 = 9
SCE_PROPS_KEYWORD = 10
SCE_PROPS_SECTION = 2
SCE_PS_BADSTRINGCHAR = 15
SCE_PS_BASE85STRING = 14
SCE_PS_COMMENT = 1
SCE_PS_DEFAULT = 0
SCE_PS_DSC_COMMENT = 2
SCE_PS_DSC_VALUE = 3
SCE_PS_HEXSTRING = 13
SCE_PS_IMMEVAL = 8
SCE_PS_KEYWORD = 6
SCE_PS_LITERAL = 7
SCE_PS_NAME = 5
SCE_PS_NUMBER = 4
SCE_PS_PAREN_ARRAY = 9
SCE_PS_PAREN_DICT = 10
SCE_PS_PAREN_PROC = 11
SCE_PS_TEXT = 12
SCE_P_CHARACTER = 4
SCE_P_CLASSNAME = 8
SCE_P_COMMENTBLOCK = 12
SCE_P_COMMENTLINE = 1
SCE_P_DECORATOR = 15
SCE_P_DEFAULT = 0
SCE_P_DEFNAME = 9
SCE_P_IDENTIFIER = 11
SCE_P_NUMBER = 2
SCE_P_OPERATOR = 10
SCE_P_STRING = 3
SCE_P_STRINGEOL = 13
SCE_P_TRIPLE = 6
SCE_P_TRIPLEDOUBLE = 7
SCE_P_WORD = 5
SCE_P_WORD2 = 14
SCE_RB_BACKTICKS = 18
SCE_RB_CHARACTER = 7
SCE_RB_CLASSNAME = 8
SCE_RB_CLASS_VAR = 17
SCE_RB_COMMENTLINE = 2
SCE_RB_DATASECTION = 19
SCE_RB_DEFAULT = 0
SCE_RB_DEFNAME = 9
SCE_RB_ERROR = 1
SCE_RB_GLOBAL = 13
SCE_RB_HERE_DELIM = 20
SCE_RB_HERE_Q = 21
SCE_RB_HERE_QQ = 22
SCE_RB_HERE_QX = 23
SCE_RB_IDENTIFIER = 11
SCE_RB_INSTANCE_VAR = 16
SCE_RB_MODULE_NAME = 15
SCE_RB_NUMBER = 4
SCE_RB_OPERATOR = 10
SCE_RB_POD = 3
SCE_RB_REGEX = 12
SCE_RB_STDERR = 40
SCE_RB_STDIN = 30
SCE_RB_STDOUT = 31
SCE_RB_STRING = 6
SCE_RB_STRING_Q = 24
SCE_RB_STRING_QQ = 25
SCE_RB_STRING_QR = 27
SCE_RB_STRING_QW = 28
SCE_RB_STRING_QX = 26
SCE_RB_SYMBOL = 14
SCE_RB_UPPER_BOUND = 41
SCE_RB_WORD = 5
SCE_RB_WORD_DEMOTED = 29
SCE_REBOL_BINARY = 11
SCE_REBOL_BRACEDSTRING = 7
SCE_REBOL_CHARACTER = 5
SCE_REBOL_COMMENTBLOCK = 2
SCE_REBOL_COMMENTLINE = 1
SCE_REBOL_DATE = 18
SCE_REBOL_DEFAULT = 0
SCE_REBOL_EMAIL = 16
SCE_REBOL_FILE = 15
SCE_REBOL_IDENTIFIER = 20
SCE_REBOL_ISSUE = 13
SCE_REBOL_MONEY = 12
SCE_REBOL_NUMBER = 8
SCE_REBOL_OPERATOR = 4
SCE_REBOL_PAIR = 9
SCE_REBOL_PREFACE = 3
SCE_REBOL_QUOTEDSTRING = 6
SCE_REBOL_TAG = 14
SCE_REBOL_TIME = 19
SCE_REBOL_TUPLE = 10
SCE_REBOL_URL = 17
SCE_REBOL_WORD = 21
SCE_REBOL_WORD2 = 22
SCE_REBOL_WORD3 = 23
SCE_REBOL_WORD4 = 24
SCE_REBOL_WORD5 = 25
SCE_REBOL_WORD6 = 26
SCE_REBOL_WORD7 = 27
SCE_REBOL_WORD8 = 28
SCE_R_BASEKWORD = 3
SCE_R_COMMENT = 1
SCE_R_DEFAULT = 0
SCE_R_IDENTIFIER = 9
SCE_R_INFIX = 10
SCE_R_INFIXEOL = 11
SCE_R_KWORD = 2
SCE_R_NUMBER = 5
SCE_R_OPERATOR = 8
SCE_R_OTHERKWORD = 4
SCE_R_STRING = 6
SCE_R_STRING2 = 7
SCE_SCRIPTOL_CHARACTER = 8
SCE_SCRIPTOL_CLASSNAME = 14
SCE_SCRIPTOL_COMMENTBLOCK = 5
SCE_SCRIPTOL_COMMENTLINE = 2
SCE_SCRIPTOL_CSTYLE = 4
SCE_SCRIPTOL_DEFAULT = 0
SCE_SCRIPTOL_IDENTIFIER = 12
SCE_SCRIPTOL_KEYWORD = 10
SCE_SCRIPTOL_NUMBER = 6
SCE_SCRIPTOL_OPERATOR = 11
SCE_SCRIPTOL_PERSISTENT = 3
SCE_SCRIPTOL_PREPROCESSOR = 15
SCE_SCRIPTOL_STRING = 7
SCE_SCRIPTOL_STRINGEOL = 9
SCE_SCRIPTOL_TRIPLE = 13
SCE_SCRIPTOL_WHITE = 1
SCE_SH_BACKTICKS = 11
SCE_SH_CHARACTER = 6
SCE_SH_COMMENTLINE = 2
SCE_SH_DEFAULT = 0
SCE_SH_ERROR = 1
SCE_SH_HERE_DELIM = 12
SCE_SH_HERE_Q = 13
SCE_SH_IDENTIFIER = 8
SCE_SH_NUMBER = 3
SCE_SH_OPERATOR = 7
SCE_SH_PARAM = 10
SCE_SH_SCALAR = 9
SCE_SH_STRING = 5
SCE_SH_WORD = 4
SCE_SML_CHAR = 9
SCE_SML_COMMENT = 12
SCE_SML_COMMENT1 = 13
SCE_SML_COMMENT2 = 14
SCE_SML_COMMENT3 = 15
SCE_SML_DEFAULT = 0
SCE_SML_IDENTIFIER = 1
SCE_SML_KEYWORD = 3
SCE_SML_KEYWORD2 = 4
SCE_SML_KEYWORD3 = 5
SCE_SML_LINENUM = 6
SCE_SML_NUMBER = 8
SCE_SML_OPERATOR = 7
SCE_SML_STRING = 11
SCE_SML_TAGNAME = 2
SCE_SN_CODE = 1
SCE_SN_COMMENTLINE = 2
SCE_SN_COMMENTLINEBANG = 3
SCE_SN_DEFAULT = 0
SCE_SN_IDENTIFIER = 11
SCE_SN_NUMBER = 4
SCE_SN_OPERATOR = 10
SCE_SN_PREPROCESSOR = 9
SCE_SN_REGEXTAG = 13
SCE_SN_SIGNAL = 14
SCE_SN_STRING = 6
SCE_SN_STRINGEOL = 12
SCE_SN_USER = 19
SCE_SN_WORD = 5
SCE_SN_WORD2 = 7
SCE_SN_WORD3 = 8
SCE_SORCUS_COMMAND = 1
SCE_SORCUS_COMMENTLINE = 3
SCE_SORCUS_CONSTANT = 9
SCE_SORCUS_DEFAULT = 0
SCE_SORCUS_IDENTIFIER = 6
SCE_SORCUS_NUMBER = 8
SCE_SORCUS_OPERATOR = 7
SCE_SORCUS_PARAMETER = 2
SCE_SORCUS_STRING = 4
SCE_SORCUS_STRINGEOL = 5
SCE_SPICE_COMMENTLINE = 8
SCE_SPICE_DEFAULT = 0
SCE_SPICE_DELIMITER = 6
SCE_SPICE_IDENTIFIER = 1
SCE_SPICE_KEYWORD = 2
SCE_SPICE_KEYWORD2 = 3
SCE_SPICE_KEYWORD3 = 4
SCE_SPICE_NUMBER = 5
SCE_SPICE_VALUE = 7
SCE_SQL_CHARACTER = 7
SCE_SQL_COMMENT = 1
SCE_SQL_COMMENTDOC = 3
SCE_SQL_COMMENTDOCKEYWORD = 17
SCE_SQL_COMMENTDOCKEYWORDERROR = 18
SCE_SQL_COMMENTLINE = 2
SCE_SQL_COMMENTLINEDOC = 15
SCE_SQL_DEFAULT = 0
SCE_SQL_IDENTIFIER = 11
SCE_SQL_NUMBER = 4
SCE_SQL_OPERATOR = 10
SCE_SQL_QUOTEDIDENTIFIER = 23
SCE_SQL_SQLPLUS = 8
SCE_SQL_SQLPLUS_COMMENT = 13
SCE_SQL_SQLPLUS_PROMPT = 9
SCE_SQL_STRING = 6
SCE_SQL_USER1 = 19
SCE_SQL_USER2 = 20
SCE_SQL_USER3 = 21
SCE_SQL_USER4 = 22
SCE_SQL_WORD = 5
SCE_SQL_WORD2 = 16
SCE_ST_ASSIGN = 14
SCE_ST_BINARY = 5
SCE_ST_BOOL = 6
SCE_ST_CHARACTER = 15
SCE_ST_COMMENT = 3
SCE_ST_DEFAULT = 0
SCE_ST_GLOBAL = 10
SCE_ST_KWSEND = 13
SCE_ST_NIL = 9
SCE_ST_NUMBER = 2
SCE_ST_RETURN = 11
SCE_ST_SELF = 7
SCE_ST_SPECIAL = 12
SCE_ST_SPEC_SEL = 16
SCE_ST_STRING = 1
SCE_ST_SUPER = 8
SCE_ST_SYMBOL = 4
SCE_T3_BLOCK_COMMENT = 3
SCE_T3_BRACE = 20
SCE_T3_DEFAULT = 0
SCE_T3_D_STRING = 10
SCE_T3_HTML_DEFAULT = 15
SCE_T3_HTML_STRING = 16
SCE_T3_HTML_TAG = 14
SCE_T3_IDENTIFIER = 8
SCE_T3_KEYWORD = 6
SCE_T3_LIB_DIRECTIVE = 12
SCE_T3_LINE_COMMENT = 4
SCE_T3_MSG_PARAM = 13
SCE_T3_NUMBER = 7
SCE_T3_OPERATOR = 5
SCE_T3_PREPROCESSOR = 2
SCE_T3_S_STRING = 9
SCE_T3_USER1 = 17
SCE_T3_USER2 = 18
SCE_T3_USER3 = 19
SCE_T3_X_DEFAULT = 1
SCE_T3_X_STRING = 11
SCE_TCL_BLOCK_COMMENT = 21
SCE_TCL_COMMENT = 1
SCE_TCL_COMMENTLINE = 2
SCE_TCL_COMMENT_BOX = 20
SCE_TCL_DEFAULT = 0
SCE_TCL_EXPAND = 11
SCE_TCL_IDENTIFIER = 7
SCE_TCL_IN_QUOTE = 5
SCE_TCL_MODIFIER = 10
SCE_TCL_NUMBER = 3
SCE_TCL_OPERATOR = 6
SCE_TCL_SUBSTITUTION = 8
SCE_TCL_SUB_BRACE = 9
SCE_TCL_WORD = 12
SCE_TCL_WORD2 = 13
SCE_TCL_WORD3 = 14
SCE_TCL_WORD4 = 15
SCE_TCL_WORD5 = 16
SCE_TCL_WORD6 = 17
SCE_TCL_WORD7 = 18
SCE_TCL_WORD8 = 19
SCE_TCL_WORD_IN_QUOTE = 4
SCE_TCMD_CLABEL = 10
SCE_TCMD_COMMAND = 5
SCE_TCMD_COMMENT = 1
SCE_TCMD_DEFAULT = 0
SCE_TCMD_ENVIRONMENT = 8
SCE_TCMD_EXPANSION = 9
SCE_TCMD_HIDE = 4
SCE_TCMD_IDENTIFIER = 6
SCE_TCMD_LABEL = 3
SCE_TCMD_OPERATOR = 7
SCE_TCMD_WORD = 2
SCE_TEX_COMMAND = 4
SCE_TEX_DEFAULT = 0
SCE_TEX_GROUP = 2
SCE_TEX_SPECIAL = 1
SCE_TEX_SYMBOL = 3
SCE_TEX_TEXT = 5
SCE_TXT2TAGS_BLOCKQUOTE = 15
SCE_TXT2TAGS_CODE = 19
SCE_TXT2TAGS_CODE2 = 20
SCE_TXT2TAGS_CODEBK = 21
SCE_TXT2TAGS_COMMENT = 22
SCE_TXT2TAGS_DEFAULT = 0
SCE_TXT2TAGS_EM1 = 4
SCE_TXT2TAGS_EM2 = 5
SCE_TXT2TAGS_HEADER1 = 6
SCE_TXT2TAGS_HEADER2 = 7
SCE_TXT2TAGS_HEADER3 = 8
SCE_TXT2TAGS_HEADER4 = 9
SCE_TXT2TAGS_HEADER5 = 10
SCE_TXT2TAGS_HEADER6 = 11
SCE_TXT2TAGS_HRULE = 17
SCE_TXT2TAGS_LINE_BEGIN = 1
SCE_TXT2TAGS_LINK = 18
SCE_TXT2TAGS_OLIST_ITEM = 14
SCE_TXT2TAGS_OPTION = 23
SCE_TXT2TAGS_POSTPROC = 25
SCE_TXT2TAGS_PRECHAR = 12
SCE_TXT2TAGS_PREPROC = 24
SCE_TXT2TAGS_STRIKEOUT = 16
SCE_TXT2TAGS_STRONG1 = 2
SCE_TXT2TAGS_STRONG2 = 3
SCE_TXT2TAGS_ULIST_ITEM = 13
SCE_VHDL_ATTRIBUTE = 10
SCE_VHDL_COMMENT = 1
SCE_VHDL_COMMENTLINEBANG = 2
SCE_VHDL_DEFAULT = 0
SCE_VHDL_IDENTIFIER = 6
SCE_VHDL_KEYWORD = 8
SCE_VHDL_NUMBER = 3
SCE_VHDL_OPERATOR = 5
SCE_VHDL_STDFUNCTION = 11
SCE_VHDL_STDOPERATOR = 9
SCE_VHDL_STDPACKAGE = 12
SCE_VHDL_STDTYPE = 13
SCE_VHDL_STRING = 4
SCE_VHDL_STRINGEOL = 7
SCE_VHDL_USERWORD = 14
SCE_VISUALPROLOG_ANONYMOUS = 10
SCE_VISUALPROLOG_CHARACTER = 13
SCE_VISUALPROLOG_CHARACTER_ESCAPE_ERROR = 15
SCE_VISUALPROLOG_CHARACTER_TOO_MANY = 14
SCE_VISUALPROLOG_COMMENT_BLOCK = 4
SCE_VISUALPROLOG_COMMENT_KEY = 6
SCE_VISUALPROLOG_COMMENT_KEY_ERROR = 7
SCE_VISUALPROLOG_COMMENT_LINE = 5
SCE_VISUALPROLOG_DEFAULT = 0
SCE_VISUALPROLOG_IDENTIFIER = 8
SCE_VISUALPROLOG_KEY_DIRECTIVE = 3
SCE_VISUALPROLOG_KEY_MAJOR = 1
SCE_VISUALPROLOG_KEY_MINOR = 2
SCE_VISUALPROLOG_NUMBER = 11
SCE_VISUALPROLOG_OPERATOR = 12
SCE_VISUALPROLOG_STRING = 16
SCE_VISUALPROLOG_STRING_EOL_OPEN = 19
SCE_VISUALPROLOG_STRING_ESCAPE = 17
SCE_VISUALPROLOG_STRING_ESCAPE_ERROR = 18
SCE_VISUALPROLOG_STRING_VERBATIM = 20
SCE_VISUALPROLOG_STRING_VERBATIM_EOL = 22
SCE_VISUALPROLOG_STRING_VERBATIM_SPECIAL = 21
SCE_VISUALPROLOG_VARIABLE = 9
SCE_V_COMMENT = 1
SCE_V_COMMENTLINE = 2
SCE_V_COMMENTLINEBANG = 3
SCE_V_DEFAULT = 0
SCE_V_IDENTIFIER = 11
SCE_V_NUMBER = 4
SCE_V_OPERATOR = 10
SCE_V_PREPROCESSOR = 9
SCE_V_STRING = 6
SCE_V_STRINGEOL = 12
SCE_V_USER = 19
SCE_V_WORD = 5
SCE_V_WORD2 = 7
SCE_V_WORD3 = 8
SCE_YAML_COMMENT = 1
SCE_YAML_DEFAULT = 0
SCE_YAML_DOCUMENT = 6
SCE_YAML_ERROR = 8
SCE_YAML_IDENTIFIER = 2
SCE_YAML_KEYWORD = 3
SCE_YAML_NUMBER = 4
SCE_YAML_OPERATOR = 9
SCE_YAML_REFERENCE = 5
SCE_YAML_TEXT = 7
SCFIND_MATCHCASE = 4
SCFIND_POSIX = 0x00400000
SCFIND_REGEXP = 0x00200000
SCFIND_WHOLEWORD = 2
SCFIND_WORDSTART = 0x00100000
SCI_ADDREFDOCUMENT = 2376
SCI_ADDSELECTION = 2573
SCI_ADDSTYLEDTEXT = 2002
SCI_ADDTEXT = 2001
SCI_ADDUNDOACTION = 2560
SCI_ALLOCATE = 2446
SCI_ANNOTATIONCLEARALL = 2547
SCI_ANNOTATIONGETLINES = 2546
SCI_ANNOTATIONGETSTYLE = 2543
SCI_ANNOTATIONGETSTYLEOFFSET = 2551
SCI_ANNOTATIONGETSTYLES = 2545
SCI_ANNOTATIONGETTEXT = 2541
SCI_ANNOTATIONGETVISIBLE = 2549
SCI_ANNOTATIONSETSTYLE = 2542
SCI_ANNOTATIONSETSTYLEOFFSET = 2550
SCI_ANNOTATIONSETSTYLES = 2544
SCI_ANNOTATIONSETTEXT = 2540
SCI_ANNOTATIONSETVISIBLE = 2548
SCI_APPENDTEXT = 2282
SCI_ASSIGNCMDKEY = 2070
SCI_AUTOCACTIVE = 2102
SCI_AUTOCCANCEL = 2101
SCI_AUTOCCOMPLETE = 2104
SCI_AUTOCGETAUTOHIDE = 2119
SCI_AUTOCGETCANCELATSTART = 2111
SCI_AUTOCGETCASEINSENSITIVEBEHAVIOUR = 2635
SCI_AUTOCGETCHOOSESINGLE = 2114
SCI_AUTOCGETCURRENT = 2445
SCI_AUTOCGETCURRENTTEXT = 2610
SCI_AUTOCGETDROPRESTOFWORD = 2271
SCI_AUTOCGETIGNORECASE = 2116
SCI_AUTOCGETMAXHEIGHT = 2211
SCI_AUTOCGETMAXWIDTH = 2209
SCI_AUTOCGETSEPARATOR = 2107
SCI_AUTOCGETTYPESEPARATOR = 2285
SCI_AUTOCPOSSTART = 2103
SCI_AUTOCSELECT = 2108
SCI_AUTOCSETAUTOHIDE = 2118
SCI_AUTOCSETCANCELATSTART = 2110
SCI_AUTOCSETCASEINSENSITIVEBEHAVIOUR = 2634
SCI_AUTOCSETCHOOSESINGLE = 2113
SCI_AUTOCSETDROPRESTOFWORD = 2270
SCI_AUTOCSETFILLUPS = 2112
SCI_AUTOCSETIGNORECASE = 2115
SCI_AUTOCSETMAXHEIGHT = 2210
SCI_AUTOCSETMAXWIDTH = 2208
SCI_AUTOCSETSEPARATOR = 2106
SCI_AUTOCSETTYPESEPARATOR = 2286
SCI_AUTOCSHOW = 2100
SCI_AUTOCSTOPS = 2105
SCI_BACKTAB = 2328
SCI_BEGINUNDOACTION = 2078
SCI_BRACEBADLIGHT = 2352
SCI_BRACEBADLIGHTINDICATOR = 2499
SCI_BRACEHIGHLIGHT = 2351
SCI_BRACEHIGHLIGHTINDICATOR = 2498
SCI_BRACEMATCH = 2353
SCI_CALLTIPACTIVE = 2202
SCI_CALLTIPADDHLT = 4019
SCI_CALLTIPCANCEL = 2201
SCI_CALLTIPCLEARHLT = 4020
SCI_CALLTIPPOSSTART = 2203
SCI_CALLTIPSETBACK = 2205
SCI_CALLTIPSETFORE = 2206
SCI_CALLTIPSETFOREHLT = 2207
SCI_CALLTIPSETHLT = 2204
SCI_CALLTIPSETPOSITION = 2213
SCI_CALLTIPSETWORDWRAP = 4022
SCI_CALLTIPSHOW = 2200
SCI_CALLTIPUPDATEHLT = 4021
SCI_CALLTIPUSESTYLE = 2212
SCI_CANCEL = 2325
SCI_CANPASTE = 2173
SCI_CANREDO = 2016
SCI_CANUNDO = 2174
SCI_CHANGELEXERSTATE = 2617
SCI_CHARLEFT = 2304
SCI_CHARLEFTEXTEND = 2305
SCI_CHARLEFTRECTEXTEND = 2428
SCI_CHARPOSITIONFROMPOINT = 2561
SCI_CHARPOSITIONFROMPOINTCLOSE = 2562
SCI_CHARRIGHT = 2306
SCI_CHARRIGHTEXTEND = 2307
SCI_CHARRIGHTRECTEXTEND = 2429
SCI_CHOOSECARETX = 2399
SCI_CLEAR = 2180
SCI_CLEARALL = 2004
SCI_CLEARALLCMDKEYS = 2072
SCI_CLEARCMDKEY = 2071
SCI_CLEARDOCUMENTSTYLE = 2005
SCI_CLEARREGISTEREDIMAGES = 2408
SCI_CLEARSELECTIONS = 2571
SCI_COLOURISE = 4003
SCI_CONTRACTEDFOLDNEXT = 2618
SCI_CONVERTEOLS = 2029
SCI_COPY = 2178
SCI_COPYALLOWLINE = 2519
SCI_COPYRANGE = 2419
SCI_COPYTEXT = 2420
SCI_COUNTCHARACTERS = 2633
SCI_CREATEDOCUMENT = 2375
SCI_CREATELOADER = 2632
SCI_CUT = 2177
SCI_DELETEBACK = 2326
SCI_DELETEBACKNOTLINE = 2344
SCI_DELETERANGE = 2645
SCI_DELLINELEFT = 2395
SCI_DELLINERIGHT = 2396
SCI_DELWORDLEFT = 2335
SCI_DELWORDRIGHT = 2336
SCI_DELWORDRIGHTEND = 2518
SCI_DESCRIBEKEYWORDSETS = 4017
SCI_DESCRIBEPROPERTY = 4016
SCI_DOCLINEFROMVISIBLE = 2221
SCI_DOCUMENTEND = 2318
SCI_DOCUMENTENDEXTEND = 2319
SCI_DOCUMENTSTART = 2316
SCI_DOCUMENTSTARTEXTEND = 2317
SCI_EDITTOGGLEOVERTYPE = 2324
SCI_EMPTYUNDOBUFFER = 2175
SCI_ENCODEDFROMUTF8 = 2449
SCI_ENDUNDOACTION = 2079
SCI_ENSUREVISIBLE = 2232
SCI_ENSUREVISIBLEENFORCEPOLICY = 2234
SCI_FINDCOLUMN = 2456
SCI_FINDINDICATORFLASH = 2641
SCI_FINDINDICATORHIDE = 2642
SCI_FINDINDICATORSHOW = 2640
SCI_FINDTEXT = 2150
SCI_FORMATRANGE = 2151
SCI_FORMFEED = 2330
SCI_GETADDITIONALCARETFORE = 2605
SCI_GETADDITIONALCARETSBLINK = 2568
SCI_GETADDITIONALCARETSVISIBLE = 2609
SCI_GETADDITIONALSELALPHA = 2603
SCI_GETADDITIONALSELECTIONTYPING = 2566
SCI_GETALLLINESVISIBLE = 2236
SCI_GETANCHOR = 2009
SCI_GETBACKSPACEUNINDENTS = 2263
SCI_GETBUFFEREDDRAW = 2034
SCI_GETCARETFORE = 2138
SCI_GETCARETLINEBACK = 2097
SCI_GETCARETLINEBACKALPHA = 2471
SCI_GETCARETLINEVISIBLE = 2095
SCI_GETCARETPERIOD = 2075
SCI_GETCARETSTICKY = 2457
SCI_GETCARETSTYLE = 2513
SCI_GETCARETWIDTH = 2189
SCI_GETCHARACTERPOINTER = 2520
SCI_GETCHARAT = 2007
SCI_GETCODEPAGE = 2137
SCI_GETCOLUMN = 2129
SCI_GETCONTROLCHARSYMBOL = 2389
SCI_GETCURLINE = 2027
SCI_GETCURRENTPOS = 2008
SCI_GETCURSOR = 2387
SCI_GETDIRECTFUNCTION = 2184
SCI_GETDIRECTPOINTER = 2185
SCI_GETDOCPOINTER = 2357
SCI_GETEDGECOLOUR = 2364
SCI_GETEDGECOLUMN = 2360
SCI_GETEDGEMODE = 2362
SCI_GETENDATLASTLINE = 2278
SCI_GETENDSTYLED = 2028
SCI_GETEOLMODE = 2030
SCI_GETEXTRAASCENT = 2526
SCI_GETEXTRADESCENT = 2528
SCI_GETFIRSTVISIBLELINE = 2152
SCI_GETFOCUS = 2381
SCI_GETFOLDEXPANDED = 2230
SCI_GETFOLDLEVEL = 2223
SCI_GETFOLDPARENT = 2225
SCI_GETFONTQUALITY = 2612
SCI_GETGAPPOSITION = 2644
SCI_GETHIGHLIGHTGUIDE = 2135
SCI_GETHOTSPOTACTIVEBACK = 2495
SCI_GETHOTSPOTACTIVEFORE = 2494
SCI_GETHOTSPOTACTIVEUNDERLINE = 2496
SCI_GETHOTSPOTSINGLELINE = 2497
SCI_GETHSCROLLBAR = 2131
SCI_GETIDENTIFIER = 2623
SCI_GETINDENT = 2123
SCI_GETINDENTATIONGUIDES = 2133
SCI_GETINDICATORCURRENT = 2501
SCI_GETINDICATORVALUE = 2503
SCI_GETKEYSUNICODE = 2522
SCI_GETLASTCHILD = 2224
SCI_GETLAYOUTCACHE = 2273
SCI_GETLENGTH = 2006
SCI_GETLEXER = 4002
SCI_GETLEXERLANGUAGE = 4012
SCI_GETLINE = 2153
SCI_GETLINECOUNT = 2154
SCI_GETLINEENDPOSITION = 2136
SCI_GETLINEINDENTATION = 2127
SCI_GETLINEINDENTPOSITION = 2128
SCI_GETLINESELENDPOSITION = 2425
SCI_GETLINESELSTARTPOSITION = 2424
SCI_GETLINESTATE = 2093
SCI_GETLINEVISIBLE = 2228
SCI_GETMAINSELECTION = 2575
SCI_GETMARGINCURSORN = 2249
SCI_GETMARGINLEFT = 2156
SCI_GETMARGINMASKN = 2245
SCI_GETMARGINOPTIONS = 2557
SCI_GETMARGINRIGHT = 2158
SCI_GETMARGINSENSITIVEN = 2247
SCI_GETMARGINTYPEN = 2241
SCI_GETMARGINWIDTHN = 2243
SCI_GETMAXLINESTATE = 2094
SCI_GETMODEVENTMASK = 2378
SCI_GETMODIFY = 2159
SCI_GETMOUSEDOWNCAPTURES = 2385
SCI_GETMOUSEDWELLTIME = 2265
SCI_GETMULTIPASTE = 2615
SCI_GETMULTIPLESELECTION = 2564
SCI_GETOVERTYPE = 2187
SCI_GETPASTECONVERTENDINGS = 2468
SCI_GETPOSITIONCACHE = 2515
SCI_GETPRINTCOLOURMODE = 2149
SCI_GETPRINTMAGNIFICATION = 2147
SCI_GETPRINTWRAPMODE = 2407
SCI_GETPROPERTY = 4008
SCI_GETPROPERTYEXPANDED = 4009
SCI_GETPROPERTYINT = 4010
SCI_GETPUNCTUATIONCHARS = 2649
SCI_GETRANGEPOINTER = 2643
SCI_GETREADONLY = 2140
SCI_GETRECTANGULARSELECTIONANCHOR = 2591
SCI_GETRECTANGULARSELECTIONANCHORVIRTUALSPACE = 2595
SCI_GETRECTANGULARSELECTIONCARET = 2589
SCI_GETRECTANGULARSELECTIONCARETVIRTUALSPACE = 2593
SCI_GETRECTANGULARSELECTIONMODIFIER = 2599
SCI_GETSCROLLWIDTH = 2275
SCI_GETSCROLLWIDTHTRACKING = 2517
SCI_GETSEARCHFLAGS = 2199
SCI_GETSELALPHA = 2477
SCI_GETSELECTIONEMPTY = 2650
SCI_GETSELECTIONEND = 2145
SCI_GETSELECTIONMODE = 2423
SCI_GETSELECTIONNANCHOR = 2579
SCI_GETSELECTIONNANCHORVIRTUALSPACE = 2583
SCI_GETSELECTIONNCARET = 2577
SCI_GETSELECTIONNCARETVIRTUALSPACE = 2581
SCI_GETSELECTIONNEND = 2587
SCI_GETSELECTIONNSTART = 2585
SCI_GETSELECTIONS = 2570
SCI_GETSELECTIONSTART = 2143
SCI_GETSELEOLFILLED = 2479
SCI_GETSELTEXT = 2161
SCI_GETSTATUS = 2383
SCI_GETSTYLEAT = 2010
SCI_GETSTYLEBITS = 2091
SCI_GETSTYLEBITSNEEDED = 4011
SCI_GETSTYLEDTEXT = 2015
SCI_GETTABINDENTS = 2261
SCI_GETTABWIDTH = 2121
SCI_GETTAG = 2616
SCI_GETTARGETEND = 2193
SCI_GETTARGETSTART = 2191
SCI_GETTECHNOLOGY = 2631
SCI_GETTEXT = 2182
SCI_GETTEXTLENGTH = 2183
SCI_GETTEXTRANGE = 2162
SCI_GETTWOPHASEDRAW = 2283
SCI_GETUNDOCOLLECTION = 2019
SCI_GETUSETABS = 2125
SCI_GETVIEWEOL = 2355
SCI_GETVIEWWS = 2020
SCI_GETVIRTUALSPACEOPTIONS = 2597
SCI_GETVSCROLLBAR = 2281
SCI_GETWHITESPACECHARS = 2647
SCI_GETWHITESPACESIZE = 2087
SCI_GETWORDCHARS = 2646
SCI_GETWRAPINDENTMODE = 2473
SCI_GETWRAPMODE = 2269
SCI_GETWRAPSTARTINDENT = 2465
SCI_GETWRAPVISUALFLAGS = 2461
SCI_GETWRAPVISUALFLAGSLOCATION = 2463
SCI_GETXOFFSET = 2398
SCI_GETZOOM = 2374
SCI_GOTOLINE = 2024
SCI_GOTOPOS = 2025
SCI_GRABFOCUS = 2400
SCI_HIDELINES = 2227
SCI_HIDESELECTION = 2163
SCI_HOME = 2312
SCI_HOMEDISPLAY = 2345
SCI_HOMEDISPLAYEXTEND = 2346
SCI_HOMEEXTEND = 2313
SCI_HOMERECTEXTEND = 2430
SCI_HOMEWRAP = 2349
SCI_HOMEWRAPEXTEND = 2450
SCI_INDICATORALLONFOR = 2506
SCI_INDICATORCLEARRANGE = 2505
SCI_INDICATOREND = 2509
SCI_INDICATORFILLRANGE = 2504
SCI_INDICATORSTART = 2508
SCI_INDICATORVALUEAT = 2507
SCI_INDICGETALPHA = 2524
SCI_INDICGETFORE = 2083
SCI_INDICGETOUTLINEALPHA = 2559
SCI_INDICGETSTYLE = 2081
SCI_INDICGETUNDER = 2511
SCI_INDICSETALPHA = 2523
SCI_INDICSETFORE = 2082
SCI_INDICSETOUTLINEALPHA = 2558
SCI_INDICSETSTYLE = 2080
SCI_INDICSETUNDER = 2510
SCI_INSERTTEXT = 2003
SCI_LEXER_START = 4000
SCI_LINECOPY = 2455
SCI_LINECUT = 2337
SCI_LINEDELETE = 2338
SCI_LINEDOWN = 2300
SCI_LINEDOWNEXTEND = 2301
SCI_LINEDOWNRECTEXTEND = 2426
SCI_LINEDUPLICATE = 2404
SCI_LINEEND = 2314
SCI_LINEENDDISPLAY = 2347
SCI_LINEENDDISPLAYEXTEND = 2348
SCI_LINEENDEXTEND = 2315
SCI_LINEENDRECTEXTEND = 2432
SCI_LINEENDWRAP = 2451
SCI_LINEENDWRAPEXTEND = 2452
SCI_LINEFROMPOSITION = 2166
SCI_LINELENGTH = 2350
SCI_LINESCROLL = 2168
SCI_LINESCROLLDOWN = 2342
SCI_LINESCROLLUP = 2343
SCI_LINESJOIN = 2288
SCI_LINESONSCREEN = 2370
SCI_LINESSPLIT = 2289
SCI_LINETRANSPOSE = 2339
SCI_LINEUP = 2302
SCI_LINEUPEXTEND = 2303
SCI_LINEUPRECTEXTEND = 2427
SCI_LOADLEXERLIBRARY = 4007
SCI_LOWERCASE = 2340
SCI_MARGINGETSTYLE = 2533
SCI_MARGINGETSTYLEOFFSET = 2538
SCI_MARGINGETSTYLES = 2535
SCI_MARGINGETTEXT = 2531
SCI_MARGINSETSTYLE = 2532
SCI_MARGINSETSTYLEOFFSET = 2537
SCI_MARGINSETSTYLES = 2534
SCI_MARGINSETTEXT = 2530
SCI_MARGINTEXTCLEARALL = 2536
SCI_MARKERADD = 2043
SCI_MARKERADDSET = 2466
SCI_MARKERDEFINE = 2040
SCI_MARKERDEFINEPIXMAP = 2049
SCI_MARKERDEFINERGBAIMAGE = 2626
SCI_MARKERDELETE = 2044
SCI_MARKERDELETEALL = 2045
SCI_MARKERDELETEHANDLE = 2018
SCI_MARKERENABLEHIGHLIGHT = 2293
SCI_MARKERGET = 2046
SCI_MARKERLINEFROMHANDLE = 2017
SCI_MARKERNEXT = 2047
SCI_MARKERPREVIOUS = 2048
SCI_MARKERSETALPHA = 2476
SCI_MARKERSETBACK = 2042
SCI_MARKERSETBACKSELECTED = 2292
SCI_MARKERSETFORE = 2041
SCI_MARKERSYMBOLDEFINED = 2529
SCI_MOVECARETINSIDEVIEW = 2401
SCI_MOVESELECTEDLINESDOWN = 2621
SCI_MOVESELECTEDLINESUP = 2620
SCI_NEWLINE = 2329
SCI_NULL = 2172
SCI_OPTIONAL_START = 3000
SCI_PAGEDOWN = 2322
SCI_PAGEDOWNEXTEND = 2323
SCI_PAGEDOWNRECTEXTEND = 2434
SCI_PAGEUP = 2320
SCI_PAGEUPEXTEND = 2321
SCI_PAGEUPRECTEXTEND = 2433
SCI_PARADOWN = 2413
SCI_PARADOWNEXTEND = 2414
SCI_PARAUP = 2415
SCI_PARAUPEXTEND = 2416
SCI_PASTE = 2179
SCI_POINTXFROMPOSITION = 2164
SCI_POINTYFROMPOSITION = 2165
SCI_POSITIONAFTER = 2418
SCI_POSITIONBEFORE = 2417
SCI_POSITIONFROMLINE = 2167
SCI_POSITIONFROMPOINT = 2022
SCI_POSITIONFROMPOINTCLOSE = 2023
SCI_PRIVATELEXERCALL = 4013
SCI_PROPERTYNAMES = 4014
SCI_PROPERTYTYPE = 4015
SCI_REDO = 2011
SCI_REGISTERIMAGE = 2405
SCI_REGISTERRGBAIMAGE = 2627
SCI_RELEASEDOCUMENT = 2377
SCI_REPLACESEL = 2170
SCI_REPLACETARGET = 2194
SCI_REPLACETARGETRE = 2195
SCI_RGBAIMAGESETHEIGHT = 2625
SCI_RGBAIMAGESETSCALE = 2651
SCI_RGBAIMAGESETWIDTH = 2624
SCI_ROTATESELECTION = 2606
SCI_SCROLLCARET = 2169
SCI_SCROLLTOEND = 2629
SCI_SCROLLTOSTART = 2628
SCI_SEARCHANCHOR = 2366
SCI_SEARCHINTARGET = 2197
SCI_SEARCHNEXT = 2367
SCI_SEARCHPREV = 2368
SCI_SELECTALL = 2013
SCI_SELECTIONDUPLICATE = 2469
SCI_SELECTIONISRECTANGLE = 2372
SCI_SETADDITIONALCARETFORE = 2604
SCI_SETADDITIONALCARETSBLINK = 2567
SCI_SETADDITIONALCARETSVISIBLE = 2608
SCI_SETADDITIONALSELALPHA = 2602
SCI_SETADDITIONALSELBACK = 2601
SCI_SETADDITIONALSELECTIONTYPING = 2565
SCI_SETADDITIONALSELFORE = 2600
SCI_SETANCHOR = 2026
SCI_SETBACKSPACEUNINDENTS = 2262
SCI_SETBUFFEREDDRAW = 2035
SCI_SETCARETFORE = 2069
SCI_SETCARETLINEBACK = 2098
SCI_SETCARETLINEBACKALPHA = 2470
SCI_SETCARETLINEVISIBLE = 2096
SCI_SETCARETPERIOD = 2076
SCI_SETCARETSTICKY = 2458
SCI_SETCARETSTYLE = 2512
SCI_SETCARETWIDTH = 2188
SCI_SETCHARSDEFAULT = 2444
SCI_SETCODEPAGE = 2037
SCI_SETCONTROLCHARSYMBOL = 2388
SCI_SETCURRENTPOS = 2141
SCI_SETCURSOR = 2386
SCI_SETDOCPOINTER = 2358
SCI_SETEDGECOLOUR = 2365
SCI_SETEDGECOLUMN = 2361
SCI_SETEDGEMODE = 2363
SCI_SETEMPTYSELECTION = 2556
SCI_SETENDATLASTLINE = 2277
SCI_SETEOLMODE = 2031
SCI_SETEXTRAASCENT = 2525
SCI_SETEXTRADESCENT = 2527
SCI_SETFIRSTVISIBLELINE = 2613
SCI_SETFOCUS = 2380
SCI_SETFOLDEXPANDED = 2229
SCI_SETFOLDFLAGS = 2233
SCI_SETFOLDHIGHLIGHTCOLOUR = 4018
SCI_SETFOLDLEVEL = 2222
SCI_SETFOLDMARGINCOLOUR = 2290
SCI_SETFOLDMARGINHICOLOUR = 2291
SCI_SETFONTQUALITY = 2611
SCI_SETHIGHLIGHTGUIDE = 2134
SCI_SETHOTSPOTACTIVEBACK = 2411
SCI_SETHOTSPOTACTIVEFORE = 2410
SCI_SETHOTSPOTACTIVEUNDERLINE = 2412
SCI_SETHOTSPOTSINGLELINE = 2421
SCI_SETHSCROLLBAR = 2130
SCI_SETIDENTIFIER = 2622
SCI_SETINDENT = 2122
SCI_SETINDENTATIONGUIDES = 2132
SCI_SETINDICATORCURRENT = 2500
SCI_SETINDICATORVALUE = 2502
SCI_SETKEYSUNICODE = 2521
SCI_SETKEYWORDS = 4005
SCI_SETLAYOUTCACHE = 2272
SCI_SETLENGTHFORENCODE = 2448
SCI_SETLEXER = 4001
SCI_SETLEXERLANGUAGE = 4006
SCI_SETLINEINDENTATION = 2126
SCI_SETLINESTATE = 2092
SCI_SETMAINSELECTION = 2574
SCI_SETMARGINCURSORN = 2248
SCI_SETMARGINLEFT = 2155
SCI_SETMARGINMASKN = 2244
SCI_SETMARGINOPTIONS = 2539
SCI_SETMARGINRIGHT = 2157
SCI_SETMARGINSENSITIVEN = 2246
SCI_SETMARGINTYPEN = 2240
SCI_SETMARGINWIDTHN = 2242
SCI_SETMODEVENTMASK = 2359
SCI_SETMOUSECAPTURE = 4023
SCI_SETMOUSEDOWNCAPTURES = 2384
SCI_SETMOUSEDWELLTIME = 2264
SCI_SETMULTIPASTE = 2614
SCI_SETMULTIPLESELECTION = 2563
SCI_SETOVERTYPE = 2186
SCI_SETPASTECONVERTENDINGS = 2467
SCI_SETPOSITIONCACHE = 2514
SCI_SETPRINTCOLOURMODE = 2148
SCI_SETPRINTMAGNIFICATION = 2146
SCI_SETPRINTWRAPMODE = 2406
SCI_SETPROPERTY = 4004
SCI_SETPUNCTUATIONCHARS = 2648
SCI_SETREADONLY = 2171
SCI_SETRECTANGULARSELECTIONANCHOR = 2590
SCI_SETRECTANGULARSELECTIONANCHORVIRTUALSPACE = 2594
SCI_SETRECTANGULARSELECTIONCARET = 2588
SCI_SETRECTANGULARSELECTIONCARETVIRTUALSPACE = 2592
SCI_SETRECTANGULARSELECTIONMODIFIER = 2598
SCI_SETSAVEPOINT = 2014
SCI_SETSCROLLWIDTH = 2274
SCI_SETSCROLLWIDTHTRACKING = 2516
SCI_SETSEARCHFLAGS = 2198
SCI_SETSEL = 2160
SCI_SETSELALPHA = 2478
SCI_SETSELBACK = 2068
SCI_SETSELECTION = 2572
SCI_SETSELECTIONEND = 2144
SCI_SETSELECTIONMODE = 2422
SCI_SETSELECTIONNANCHOR = 2578
SCI_SETSELECTIONNANCHORVIRTUALSPACE = 2582
SCI_SETSELECTIONNCARET = 2576
SCI_SETSELECTIONNCARETVIRTUALSPACE = 2580
SCI_SETSELECTIONNEND = 2586
SCI_SETSELECTIONNSTART = 2584
SCI_SETSELECTIONSTART = 2142
SCI_SETSELEOLFILLED = 2480
SCI_SETSELFORE = 2067
SCI_SETSTATUS = 2382
SCI_SETSTYLEBITS = 2090
SCI_SETSTYLING = 2033
SCI_SETSTYLINGEX = 2073
SCI_SETTABINDENTS = 2260
SCI_SETTABWIDTH = 2036
SCI_SETTARGETEND = 2192
SCI_SETTARGETSTART = 2190
SCI_SETTECHNOLOGY = 2630
SCI_SETTEXT = 2181
SCI_SETTWOPHASEDRAW = 2284
SCI_SETUNDOCOLLECTION = 2012
SCI_SETUSETABS = 2124
SCI_SETVIEWEOL = 2356
SCI_SETVIEWWS = 2021
SCI_SETVIRTUALSPACEOPTIONS = 2596
SCI_SETVISIBLEPOLICY = 2394
SCI_SETVSCROLLBAR = 2280
SCI_SETWHITESPACEBACK = 2085
SCI_SETWHITESPACECHARS = 2443
SCI_SETWHITESPACEFORE = 2084
SCI_SETWHITESPACESIZE = 2086
SCI_SETWORDCHARS = 2077
SCI_SETWRAPINDENTMODE = 2472
SCI_SETWRAPMODE = 2268
SCI_SETWRAPSTARTINDENT = 2464
SCI_SETWRAPVISUALFLAGS = 2460
SCI_SETWRAPVISUALFLAGSLOCATION = 2462
SCI_SETXCARETPOLICY = 2402
SCI_SETXOFFSET = 2397
SCI_SETYCARETPOLICY = 2403
SCI_SETZOOM = 2373
SCI_SHOWLINES = 2226
SCI_START = 2000
SCI_STARTRECORD = 3001
SCI_STARTSTYLING = 2032
SCI_STOPRECORD = 3002
SCI_STUTTEREDPAGEDOWN = 2437
SCI_STUTTEREDPAGEDOWNEXTEND = 2438
SCI_STUTTEREDPAGEUP = 2435
SCI_STUTTEREDPAGEUPEXTEND = 2436
SCI_STYLECLEARALL = 2050
SCI_STYLEGETBACK = 2482
SCI_STYLEGETBOLD = 2483
SCI_STYLEGETCASE = 2489
SCI_STYLEGETCHANGEABLE = 2492
SCI_STYLEGETCHARACTERSET = 2490
SCI_STYLEGETEOLFILLED = 2487
SCI_STYLEGETFONT = 2486
SCI_STYLEGETFORE = 2481
SCI_STYLEGETHOTSPOT = 2493
SCI_STYLEGETITALIC = 2484
SCI_STYLEGETSIZE = 2485
SCI_STYLEGETSIZEFRACTIONAL = 2062
SCI_STYLEGETUNDERLINE = 2488
SCI_STYLEGETVISIBLE = 2491
SCI_STYLEGETWEIGHT = 2064
SCI_STYLERESETDEFAULT = 2058
SCI_STYLESETBACK = 2052
SCI_STYLESETBOLD = 2053
SCI_STYLESETCASE = 2060
SCI_STYLESETCHANGEABLE = 2099
SCI_STYLESETCHARACTERSET = 2066
SCI_STYLESETEOLFILLED = 2057
SCI_STYLESETFONT = 2056
SCI_STYLESETFORE = 2051
SCI_STYLESETHOTSPOT = 2409
SCI_STYLESETITALIC = 2054
SCI_STYLESETSIZE = 2055
SCI_STYLESETSIZEFRACTIONAL = 2061
SCI_STYLESETUNDERLINE = 2059
SCI_STYLESETVISIBLE = 2074
SCI_STYLESETWEIGHT = 2063
SCI_SWAPMAINANCHORCARET = 2607
SCI_TAB = 2327
SCI_TARGETASUTF8 = 2447
SCI_TARGETFROMSELECTION = 2287
SCI_TEXTHEIGHT = 2279
SCI_TEXTWIDTH = 2276
SCI_TOGGLECARETSTICKY = 2459
SCI_TOGGLEFOLD = 2231
SCI_UNDO = 2176
SCI_UPPERCASE = 2341
SCI_USEPOPUP = 2371
SCI_USERLISTSHOW = 2117
SCI_VCHOME = 2331
SCI_VCHOMEDISPLAY = 2652
SCI_VCHOMEDISPLAYEXTEND = 2653
SCI_VCHOMEEXTEND = 2332
SCI_VCHOMERECTEXTEND = 2431
SCI_VCHOMEWRAP = 2453
SCI_VCHOMEWRAPEXTEND = 2454
SCI_VERTICALCENTRECARET = 2619
SCI_VISIBLEFROMDOCLINE = 2220
SCI_WORDENDPOSITION = 2267
SCI_WORDLEFT = 2308
SCI_WORDLEFTEND = 2439
SCI_WORDLEFTENDEXTEND = 2440
SCI_WORDLEFTEXTEND = 2309
SCI_WORDPARTLEFT = 2390
SCI_WORDPARTLEFTEXTEND = 2391
SCI_WORDPARTRIGHT = 2392
SCI_WORDPARTRIGHTEXTEND = 2393
SCI_WORDRIGHT = 2310
SCI_WORDRIGHTEND = 2441
SCI_WORDRIGHTENDEXTEND = 2442
SCI_WORDRIGHTEXTEND = 2311
SCI_WORDSTARTPOSITION = 2266
SCI_WRAPCOUNT = 2235
SCI_ZOOMIN = 2333
SCI_ZOOMOUT = 2334
SCK_ADD = 310
SCK_BACK = 8
SCK_DELETE = 308
SCK_DIVIDE = 312
SCK_DOWN = 300
SCK_END = 305
SCK_ESCAPE = 7
SCK_HOME = 304
SCK_INSERT = 309
SCK_LEFT = 302
SCK_MENU = 315
SCK_NEXT = 307
SCK_PRIOR = 306
SCK_RETURN = 13
SCK_RIGHT = 303
SCK_RWIN = 314
SCK_SUBTRACT = 311
SCK_TAB = 9
SCK_UP = 301
SCK_WIN = 313
SCLEX_A68K = 100
SCLEX_ABAP = 108
SCLEX_ABAQUS = 84
SCLEX_ADA = 20
SCLEX_AHK1 = 109
SCLEX_APDL = 61
SCLEX_ASM = 34
SCLEX_ASN1 = 63
SCLEX_ASYMPTOTE = 85
SCLEX_AU3 = 60
SCLEX_AUTOMATIC = 1000
SCLEX_AVE = 19
SCLEX_AVS = 104
SCLEX_BAAN = 31
SCLEX_BASH = 62
SCLEX_BATCH = 12
SCLEX_BLITZBASIC = 66
SCLEX_BULLANT = 27
SCLEX_CAML = 65
SCLEX_CLW = 45
SCLEX_CLWNOCASE = 46
SCLEX_CMAKE = 80
SCLEX_COBOL = 92
SCLEX_COFFEESCRIPT = 102
SCLEX_CONF = 17
SCLEX_CONTAINER = 0
SCLEX_CPP = 3
SCLEX_CPPNOCASE = 35
SCLEX_CSOUND = 74
SCLEX_CSS = 38
SCLEX_D = 79
SCLEX_DIFF = 16
SCLEX_ECL = 105
SCLEX_EIFFEL = 23
SCLEX_EIFFELKW = 24
SCLEX_ERLANG = 53
SCLEX_ERRORLIST = 10
SCLEX_ESCRIPT = 41
SCLEX_EUPHORIA = 110
SCLEX_F77 = 37
SCLEX_FLAGSHIP = 73
SCLEX_FORTH = 52
SCLEX_FORTRAN = 36
SCLEX_FREEBASIC = 75
SCLEX_GAP = 81
SCLEX_GUI4CLI = 58
SCLEX_HASKELL = 68
SCLEX_HTML = 4
SCLEX_INNOSETUP = 76
SCLEX_KIX = 57
SCLEX_LATEX = 14
SCLEX_LISP = 21
SCLEX_LOT = 47
SCLEX_LOUT = 40
SCLEX_LUA = 15
SCLEX_MAGIK = 87
SCLEX_MAKEFILE = 11
SCLEX_MARKDOWN = 98
SCLEX_MATLAB = 32
SCLEX_METAPOST = 50
SCLEX_MMIXAL = 44
SCLEX_MODULA = 101
SCLEX_MSSQL = 55
SCLEX_MYSQL = 89
SCLEX_NIMROD = 96
SCLEX_NNCRONTAB = 26
SCLEX_NSIS = 43
SCLEX_NULL = 1
SCLEX_OCTAVE = 54
SCLEX_OPAL = 77
SCLEX_OSCRIPT = 106
SCLEX_PASCAL = 18
SCLEX_PERL = 6
SCLEX_PHPSCRIPT = 69
SCLEX_PLM = 82
SCLEX_PO = 90
SCLEX_POV = 39
SCLEX_POWERBASIC = 51
SCLEX_POWERPRO = 95
SCLEX_POWERSHELL = 88
SCLEX_PROGRESS = 83
SCLEX_PROPERTIES = 9
SCLEX_PS = 42
SCLEX_PUREBASIC = 67
SCLEX_PYTHON = 2
SCLEX_R = 86
SCLEX_REBOL = 71
SCLEX_RUBY = 22
SCLEX_SCRIPTOL = 33
SCLEX_SMALLTALK = 72
SCLEX_SML = 97
SCLEX_SORCUS = 94
SCLEX_SPECMAN = 59
SCLEX_SPICE = 78
SCLEX_SQL = 7
SCLEX_TACL = 93
SCLEX_TADS3 = 70
SCLEX_TAL = 91
SCLEX_TCL = 25
SCLEX_TCMD = 103
SCLEX_TEX = 49
SCLEX_TXT2TAGS = 99
SCLEX_VB = 8
SCLEX_VBSCRIPT = 28
SCLEX_VERILOG = 56
SCLEX_VHDL = 64
SCLEX_VISUALPROLOG = 107
SCLEX_XCODE = 13
SCLEX_XML = 5
SCLEX_YAML = 48
SCMOD_ALT = 4
SCMOD_CTRL = 2
SCMOD_META = 16
SCMOD_NORM = 0
SCMOD_SHIFT = 1
SCMOD_SUPER = 8
SCVS_NONE = 0
SCVS_RECTANGULARSELECTION = 1
SCVS_USERACCESSIBLE = 2
SCWS_INVISIBLE = 0
SCWS_VISIBLEAFTERINDENT = 2
SCWS_VISIBLEALWAYS = 1
SC_ALPHA_NOALPHA = 256
SC_ALPHA_OPAQUE = 255
SC_ALPHA_TRANSPARENT = 0
SC_CACHE_CARET = 1
SC_CACHE_DOCUMENT = 3
SC_CACHE_NONE = 0
SC_CACHE_PAGE = 2
SC_CARETSTICKY_OFF = 0
SC_CARETSTICKY_ON = 1
SC_CARETSTICKY_WHITESPACE = 2
SC_CASEINSENSITIVEBEHAVIOUR_IGNORECASE = 1
SC_CASEINSENSITIVEBEHAVIOUR_RESPECTCASE = 0
SC_CASE_LOWER = 2
SC_CASE_MIXED = 0
SC_CASE_UPPER = 1
SC_CHARSET_8859_15 = 1000
SC_CHARSET_ANSI = 0
SC_CHARSET_ARABIC = 178
SC_CHARSET_BALTIC = 186
SC_CHARSET_CHINESEBIG5 = 136
SC_CHARSET_CYRILLIC = 1251
SC_CHARSET_DEFAULT = 1
SC_CHARSET_EASTEUROPE = 238
SC_CHARSET_GB2312 = 134
SC_CHARSET_GREEK = 161
SC_CHARSET_HANGUL = 129
SC_CHARSET_HEBREW = 177
SC_CHARSET_JOHAB = 130
SC_CHARSET_MAC = 77
SC_CHARSET_OEM = 255
SC_CHARSET_RUSSIAN = 204
SC_CHARSET_SHIFTJIS = 128
SC_CHARSET_SYMBOL = 2
SC_CHARSET_THAI = 222
SC_CHARSET_TURKISH = 162
SC_CHARSET_VIETNAMESE = 163
SC_CP_UTF8 = 65001
SC_CURSORARROW = 2
SC_CURSORNORMAL = -1
SC_CURSORREVERSEARROW = 7
SC_CURSORWAIT = 4
SC_EFF_QUALITY_ANTIALIASED = 2
SC_EFF_QUALITY_DEFAULT = 0
SC_EFF_QUALITY_LCD_OPTIMIZED = 3
SC_EFF_QUALITY_MASK = 0xF
SC_EFF_QUALITY_NON_ANTIALIASED = 1
SC_EOL_CR = 1
SC_EOL_CRLF = 0
SC_EOL_LF = 2
SC_FOLDFLAG_LEVELNUMBERS = 0x0040
SC_FOLDFLAG_LINEAFTER_CONTRACTED = 0x0010
SC_FOLDFLAG_LINEAFTER_EXPANDED = 0x0008
SC_FOLDFLAG_LINEBEFORE_CONTRACTED = 0x0004
SC_FOLDFLAG_LINEBEFORE_EXPANDED = 0x0002
SC_FOLDLEVELBASE = 0x400
SC_FOLDLEVELHEADERFLAG = 0x2000
SC_FOLDLEVELNUMBERMASK = 0x0FFF
SC_FOLDLEVELWHITEFLAG = 0x1000
SC_FONT_SIZE_MULTIPLIER = 100
SC_IV_LOOKBOTH = 3
SC_IV_LOOKFORWARD = 2
SC_IV_NONE = 0
SC_IV_REAL = 1
SC_LASTSTEPINUNDOREDO = 0x100
SC_MARGINOPTION_NONE = 0
SC_MARGINOPTION_SUBLINESELECT = 1
SC_MARGIN_BACK = 2
SC_MARGIN_FORE = 3
SC_MARGIN_NUMBER = 1
SC_MARGIN_RTEXT = 5
SC_MARGIN_SYMBOL = 0
SC_MARGIN_TEXT = 4
SC_MARKNUM_FOLDER = 30
SC_MARKNUM_FOLDEREND = 25
SC_MARKNUM_FOLDERMIDTAIL = 27
SC_MARKNUM_FOLDEROPEN = 31
SC_MARKNUM_FOLDEROPENMID = 26
SC_MARKNUM_FOLDERSUB = 29
SC_MARKNUM_FOLDERTAIL = 28
SC_MARK_ARROW = 2
SC_MARK_ARROWDOWN = 6
SC_MARK_ARROWS = 24
SC_MARK_AVAILABLE = 28
SC_MARK_BACKGROUND = 22
SC_MARK_BOXMINUS = 14
SC_MARK_BOXMINUSCONNECTED = 15
SC_MARK_BOXPLUS = 12
SC_MARK_BOXPLUSCONNECTED = 13
SC_MARK_CHARACTER = 10000
SC_MARK_CIRCLE = 0
SC_MARK_CIRCLEMINUS = 20
SC_MARK_CIRCLEMINUSCONNECTED = 21
SC_MARK_CIRCLEPLUS = 18
SC_MARK_CIRCLEPLUSCONNECTED = 19
SC_MARK_DOTDOTDOT = 23
SC_MARK_EMPTY = 5
SC_MARK_FULLRECT = 26
SC_MARK_LCORNER = 10
SC_MARK_LCORNERCURVE = 16
SC_MARK_LEFTRECT = 27
SC_MARK_MINUS = 7
SC_MARK_PIXMAP = 25
SC_MARK_PLUS = 8
SC_MARK_RGBAIMAGE = 30
SC_MARK_ROUNDRECT = 1
SC_MARK_SHORTARROW = 4
SC_MARK_SMALLRECT = 3
SC_MARK_TCORNER = 11
SC_MARK_TCORNERCURVE = 17
SC_MARK_UNDERLINE = 29
SC_MARK_VLINE = 9
SC_MASK_FOLDERS = 0xFE000000
SC_MODEVENTMASKALL = 0xFFFFF
SC_MOD_BEFOREDELETE = 0x800
SC_MOD_BEFOREINSERT = 0x400
SC_MOD_CHANGEANNOTATION = 0x20000
SC_MOD_CHANGEFOLD = 0x8
SC_MOD_CHANGEINDICATOR = 0x4000
SC_MOD_CHANGELINESTATE = 0x8000
SC_MOD_CHANGEMARGIN = 0x10000
SC_MOD_CHANGEMARKER = 0x200
SC_MOD_CHANGESTYLE = 0x4
SC_MOD_CONTAINER = 0x40000
SC_MOD_DELETETEXT = 0x2
SC_MOD_INSERTTEXT = 0x1
SC_MOD_LEXERSTATE = 0x80000
SC_MULTILINEUNDOREDO = 0x1000
SC_MULTIPASTE_EACH = 1
SC_MULTIPASTE_ONCE = 0
SC_MULTISTEPUNDOREDO = 0x80
SC_PERFORMED_REDO = 0x40
SC_PERFORMED_UNDO = 0x20
SC_PERFORMED_USER = 0x10
SC_PRINT_BLACKONWHITE = 2
SC_PRINT_COLOURONWHITE = 3
SC_PRINT_COLOURONWHITEDEFAULTBG = 4
SC_PRINT_INVERTLIGHT = 1
SC_PRINT_NORMAL = 0
SC_SEL_LINES = 2
SC_SEL_RECTANGLE = 1
SC_SEL_STREAM = 0
SC_SEL_THIN = 3
SC_STARTACTION = 0x2000
SC_STATUS_BADALLOC = 2
SC_STATUS_FAILURE = 1
SC_STATUS_OK = 0
SC_TECHNOLOGY_DEFAULT = 0
SC_TECHNOLOGY_DIRECTWRITE = 1
SC_TIME_FOREVER = 10000000
SC_TYPE_BOOLEAN = 0
SC_TYPE_INTEGER = 1
SC_TYPE_STRING = 2
SC_UPDATE_CONTENT = 0x1
SC_UPDATE_H_SCROLL = 0x8
SC_UPDATE_SELECTION = 0x2
SC_UPDATE_V_SCROLL = 0x4
SC_WEIGHT_BOLD = 700
SC_WEIGHT_NORMAL = 400
SC_WEIGHT_SEMIBOLD = 600
SC_WRAPINDENT_FIXED = 0
SC_WRAPINDENT_INDENT = 2
SC_WRAPINDENT_SAME = 1
SC_WRAPVISUALFLAGLOC_DEFAULT = 0x0000
SC_WRAPVISUALFLAGLOC_END_BY_TEXT = 0x0001
SC_WRAPVISUALFLAGLOC_START_BY_TEXT = 0x0002
SC_WRAPVISUALFLAG_END = 0x0001
SC_WRAPVISUALFLAG_MARGIN = 0x0004
SC_WRAPVISUALFLAG_NONE = 0x0000
SC_WRAPVISUALFLAG_START = 0x0002
SC_WRAP_CHAR = 2
SC_WRAP_NONE = 0
SC_WRAP_WORD = 1
STYLE_BRACEBAD = 35
STYLE_BRACELIGHT = 34
STYLE_CALLTIP = 38
STYLE_CONTROLCHAR = 36
STYLE_DEFAULT = 32
STYLE_INDENTGUIDE = 37
STYLE_LASTPREDEFINED = 39
STYLE_LINENUMBER = 33
STYLE_MAX = 255
UNDO_MAY_COALESCE = 1
VISIBLE_SLOP = 0x01
VISIBLE_STRICT = 0x04

FilePath \n full path of the current file
FileDir \n directory of the current file without a trailing slash
FileName \n base name of the current file
FileExt \n extension of the current file
FileNameExt \n $(FileName).$(FileExt)
BufferNumber \n buffer number of the current file
SessionPath \n full path of the current session
CurrentSelection \n value of the currently selected text
CurrentWord \n value of word which the caret is within or near
Replacements \n number of replacements made by last Replace command
SelectionStartColumn \n column where selection starts
SelectionStartLine \n line where selection starts
SelectionEndColumn \n column where selection ends
SelectionEndLine \n line where selection ends
CurrentMessage \n most recently selected output pane message
SciteDefaultHome \n directory in which the Global Options file is found
SciteUserHome \n directory in which the User Options file is found
SciteDirectoryHome \n directory in which the Directory Options file is found
APIPath \n full path of the current api file
AbbrevPath \n full path of the current abbrev file
