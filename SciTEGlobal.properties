# Global settings SciTE (valid for all users)

# Note that this configuration file can be overridden file SciTEUser.properties
# As well as the files *.Properties of specific programming languages
# In addition, all settings can be modified in the script is embedded

# For Linux, place in $ prefix / share / scite
# For Windows in the same directory where the SciTE.EXE (or Sc1.EXE)

# The idea of using this section of the file by right belongs Vadikan <unattended.oszone.net>

[Main] The various settings of the program
# Set SciteUserHome directory to store user data
# (SciTEUser.properties, SciTE.session)
# Only works on Ru-Board
scite.userhome=$(SciteDefaultHome)\home


# Set to 1 allows you to use a single configuration file located in the root of the project, instead of a few local in each of the subdirectories
properties.directory.enable=1

# Visibility menu in full screen mode (invisible=1)
full.screen.hides.menu=1

# Minimize to tray
#~Minimize.to.tray=1

# After running the code, for F4 highlights the line - the source of the error
error.select.line=1

# 0 allows scrolling windows on one page of the text below
#~End.at.last.line=0

# Set to 1 reduces the accuracy of the display Active / Inactive buttons on the toolbar
# This can improve performance on a relatively slow machines
#~Undo.redo.lazy=1

# In the version for GTK + determines the initial size of the file selection dialog box invoke commands Open (Open) and Save (Save).In Windows, this option is not working.
#~Fileselector.width=800
#~Fileselector.height=600
#~Fileselector.show.hidden=1

# Initial value increase (Zoom) the font size specified in the default style
# Set when you run SciTE or change the screen resolution
# You can use both positive and negative values.
#~Magnification=0
#~Output.magnification=0

# Output data directly on the screen (0) or into a buffer, and then the screen (1)
buffered.draw=1
# At 1 - higher quality (but slower) way to draw text
two.phase.draw=1
# 1 sets the color palette of an 8-bit
use.palette=1

# Checking
# 1 includes a request to save when you close the file.Oh - saves the changes without prompting.
are.you.sure=1

# 1 includes a request to save the assembly (F7) file.Oh - saves the changes without prompting.
#~Are.you.sure.for.build=1
#~Save.all.for.build=1

# 1 closes SciTE when closing the last tab
#~Quit.on.close.last=1

# 1 includes tracking so that it has not opened in SciTE file is modified by another program
load.on.activate=1

# 1 includes a request "file is modified by another program.Reboot?"
are.you.sure.on.reload=1

# 1 includes a request on save "file is modified by another program.Overwrite it?"
save.check.modified.time=1

# 1 includes auto-save file when losing focus SciTE
#~Save.on.deactivate=1

# 1 - When you reload the file is not deleted Undo history
reload.preserves.undo=1

# If SciTE open, the files are loaded into an existing copy of the program
check.if.already.open=1

# Specify the mode to use the language to be created (Ctrl + N) file before it is assigned a name
default.file.ext =.txt

# If set to com.line of the file name without the extension is not found, SciTE will try to open the same file with the following extensions
source.default.extensions =.h|.cxx|.bat

# 1 - "Open" dialog opens in the folder of the current file, 0 - which opened last
open.dialog.in.file.directory=1

# 1 when saving deletes spaces and tabs at the ends of lines
#~Strip.trailing.spaces=1

# 1 while maintaining appends the last line of the file line ending characters (if not available)
#~Ensure.final.line.end=1

# 1, if you save the file sets in the end of all lines of the current character line endings (CRLF, CR, LF)
ensure.consistent.line.ends=1

#~Save.deletes.first=1

# If you do not insert a translation ...
#~Translation.missing=***

# Open a new document in read-only mode
#~Read.only=1

#~Max.file.size=1

# If 1 (default) moves the caret in Visual C + + at the end of the indentation (the beginning of the text), and if the carriage is already there, at the beginning of the line.
#~Vc.home.key=0

# Automatic backup *.Bak file (auto_backup.lua)
# Switch specifies the number of remaining options.The absence of a key or 0 - refusing to create a backup
#~Backup.files=1
# Directory to store backup copies (you can use environment variables)
# If you do not specify backup copies are kept close to the original file
backup.path=$(TEMP)\$$$SciTE.tmp
#~Backup.path=_bak_

Option # selection.hide.on.deactivate=0 does not allow selection from the text when the window loses focus SciTE.
selection.hide.on.deactivate=0

# 1 If you can make multiple selection with the mouse, hold down the Ctrl (0 - disables this feature)
#~Selection.multiple=0

# 1 When printing and pasting text, pressing the Delete key or BackSpace will be simultaneously applied to all the selected part of the text
#~Selection.additional.typing=0

# Open a file by clicking the mouse on his behalf with the button pressed Ctrl (Open_Selected_Filename.lua)
open.filename.by.click=1

# The list of names and lexer list of file extensions to automatically highlight links (HighlightLinks.lua)
#~Highlight.links.lexers=null
#~Highlight.links.exts=htm, html, php

# Highlighting all occurrences of this word in the document (built-in ability SciTE)
# Tip:It's best to use a scripting option (see below).It and opportunities - more and faster.
#~Highlight.current.word=1
#~Highlight.current.word.by.style=1
#~Highlight.current.word.colour=# 00D040

# Auto backlight text that matches the current word, or (highlighting_identical_text.lua)
highlighting.identical.text=0
# Limit max number of entries (50 - default:0 - no limit).
#~Highlighting.identical.text.max=100

# Optionchange.overwrite.enable=0 disables the ability to switch modes insert / replace
#~Change.overwrite.enable=0

# Allows you to move the carriage on the last character on the line (1-for rectangular selection, 2 mouse or the cursor keys, 3 in both cases)
virtual.space=1

[Position] The size and position of window
# The position of the upper left corner of the program window
#~Position.left=0
#~Position.top=0

# The width and height of the window (full screen=-1)
#~Position.width=-1
#~Position.height=-1
#~Position.maximize=1

#~Horizontal.scrollbar=0
horizontal.scroll.width=100

# If=1, then the new window position.left=position.left + position.width first window.
#~Position.tile=1

[Title] The text in the header of the main window SciTE
# Select how to display the file name in the title:
# 0 (default) - displays only the file name
# 1 - display - path\filename
# 2 - Shows - filename in path
title.full.path=2

# Displays whether the number of the active buffer, and the total number of tabs in the header.
# 0 - do not appear
# 1 - displayed
title.show.buffers=1

[Margin] Dimensions indentation for the program window, text, columns with line numbers and folding
# 1 - display a column with line numbers and labels (bookmarks).
line.margin.visible=1

# Backs up the column width, in terms of the number of digits in the number.
# To automatically increase the width of the field, it is necessary to add a + after the number
line.margin.width=2 +

# The size of the column (in pixels) for the labels (bookmarks).(Requires restart)
margin.width=13

# Size column for folding (folding / deployment procedures) (in pixels)
#~Fold.margin.width=13

# The size of the indentation on both sides of the text (in pixels)
blank.margin.left=4
#~Blank.margin.right=4

# 0 disables tagging by the mouse click in the column bukmarki (only in SciTE-Ru)
#~Margin.bookmark.by.single.click=0


[Output Screen] position and size of the console window
# Automatically cleans the console window before running any script
# Ie executes the command output:ClearAll () (LUA)
#~Clear.before.execute=1

# 1 - a console window on the right, 0 - bottom
split.vertical=0

# Dimensions console window
#~Output.horizontal.size=200
#~Output.vertical.size=60
#~Output.initial.hide=1
#~Output.horizontal.scrollbar=0
#~Output.horizontal.scroll.width=10000
#~Output.scroll=0

output.cache.layout=3

# 1 - after the team's findings during its execution (in seconds)
time.commands=1

# The size of a tab in the console window (use the script in SciTEStartup.lua)
output.tabsize=2

[Tabbar] tab bar
# My settings
tabbar.tab.close.on.doubleclick=1

# Show the tab bar (0/1)
tabbar.visible=1

# Hide the tab bar when only one file is opened
tabbar.hide.one=0

# The tab bar in a few lines
tabbar.multiline=1

# Limit the length of the display on the tab file name (only in SciTE-Ru)
tabbar.title.maxlength=20

# Symbol to display the status of the R / O in the name of the tab (only in SciTE-Ru)
tabbar.readonly.marker=•

# Close current tab by double-clicking on it (only in SciTE-Ru)
#~Tabbar.tab.close.on.doubleclick=1

# The number of tabs
buffers=100

# Location in the list for the new tab (only in SciTE-Ru)
# 0 - open a new tab in the bottom of the list (default), 1 - after the current, 2 - at the beginning of the list
#~Buffers.new.position=1

# 1 - switch (Ctrl + Tab) will occur in the order in which the tabs were opened before (otherwise - by number)
# After closing a tab editor will be next to it (revision SciTE-Ru)
#~Buffers.zorder.switching=1

[Braces and Tags] Behavior brackets and tags
# Brackets highlighting (0/1)
braces.check=1
braces.sloppy=1

# Auto-brackets.(Works with the lua script braces_autoclose.lua)
braces.autoclose=1
braces.open=({['"
braces.close =)}]'"
braces.multiline=cpp, css, hypertext, java, php

# Auto-tagging.(Works with the lua script html_tags_autoclose.lua)
tags.autoclose=1

[Whitespace] Display non-printable characters (spaces, tabs, line-end characters)
# Show line endings
view.eol=0

# Sets the newline character (CR, LF or CRLF)
#~Eol.mode=LF

# This setting overrides eol.mode, and selects the newline character from the current contents of the file
eol.auto=1

# Symbol to display the non-printing characters
#~Control.char.symbol=°

# Show tabs and spaces (0/1)
view.whitespace=1
view.indentation.whitespace=1
view.indentation.guides=1
highlight.indentation.guides=1

[Indent] Setting indents and tabs
# The size of the indentation
tabsize=4

# Indent size, for use in automatic indentation
indent.size=4

#At 0 # tab character you type is automatically replaced by spaces
#~Use.tabs=0

# 1 When the value indent.size and use.tabs taken from an open document
indent.auto=1

# 1 When you type a tab character is automatically replaced by spaces indent.size
#~Tab.indents=1

# 1 When pressing the backspace within indent removes gaps indent.size
backspace.unindents=1

# 1 When - enable automatic indentation
indent.automatic=1
indent.opening=0
indent.closing=0
#~Indent.maintain.*=0

[Wrap] Set the width to the right of the limit line and the transfer of long strings
# Set the width to the right of the limit line (if more - it is considered excess and can be observed)
edge.column=100

# Method of Delivery of exceeding the permissible width (0-no show, 1-line, 2-color)
edge.mode=1

# Wrap long lines (0/1)
wrap=1

#~Wrap.style=2
wrap.visual.flags=3
wrap.visual.flags.location=1
wrap.visual.startindent=4
wrap.indent.mode=1

# Pressing the Home and End keys cursor is positioned in line with Carry
wrap.aware.home.end.keys=1

# Caching information about the text:
# 0 - disable caching
# 1 - cache line where the cursor is input
# 2 - cache the visible area of ??the page and mouse input
# 3 - cache the entire document
# Note.More text undergoes caching, so it takes more memory.Use for large files.
cache.layout=3

# Wrap long lines in the console (0/1)
output.wrap=1

[Folding] Folding Blocks of text
# Enable folding (0/1)
fold=1

# Minimize the file is opened (0/1)
#~Fold.on.open=1

# Automatic shutdown of all sections when opening files of a given type (RestoreRecent.lua)
fold.on.open.ext=properties, ini

# Type folding (2/4/8/16)
fold.flags=16

# The folding (0/1/2/3)
fold.symbols=3

# Highlighting the line folding in the current block.(This only works when fold.symbols=2/3)
fold.highlight=1

fold.compact=0
fold.comment=1
fold.comment.python=1
fold.quotes.python=1
fold.preprocessor=1
fold.html.preprocessor=0

# Sets the symbol indicating the beginning of a conditional block convolution for text files.If instead of the symbol set 1, the start will be numbered headings.(FoldText.lua)
fold.text.outline=*
#~Fold.text.ext=txt, doc

[Find and Replace] Search and Replace
# ------------ SEARCH IN THIS FILE ------------
#~Find.in.files.close.on.find=0
#~Find.replace.matchcase=1
#~Find.replace.escapes=1
#~Find.replace.regexp=1
find.replace.regexp.posix=1
#~Find.replace.wrap=0
#~Find.replacewith.focus=0

#If  1, then instead of the Find dialog box panel is used
find.use.strip=0
#If  1, instead of the dialog box, replace the panel is used
replace.use.strip=0

# If 0, the search dialog does not close automatically
find.close.on.find=1

# 0 disables tagging after pressing "Mark" in the search dialog (only in SciTE-Ru)
find.bookmark=0

#If # 1, then when you click "Replace All" cursor returns to its original position (only in SciTE-Ru)
find.replace.return.to.start=1

#If # 1, then clicking the "Mark" removed any earlier marks (only in SciTE-Ru)
# (As set markers always removed)
#~find.mark.delete=1

# Allows you to specify how the initial fields in search dialog (only in SciTE-Ru)
# 0 (default) - If there is a selection, and it does not contain line breaks, then use it, otherwise take the floor next to the cursor (as it was before)
# 1 - use the selection, if there is no selection, then leave the field empty
# 2 - always leave the field empty.
find.fillout=1

# Includes the button "Replace in Buffers" in the dialogue and replace checkbox to search for a specific style
find.replace.advanced=1

# Mark all occurrences of the text translucent colored rectangle upon pressing the "Mark" in the search dialog (very convenient)
find.mark=#0F0F0F

# ------------ ------------ Find in Files
# Internal search, with the possibility of recursion, much preferable to external tools
find.command=
# Findstr utility is available on the latest versions of Windows, including the 2000
if PLAT_WIN
  #~ find.command=findstr /n /s /c:"$(find.what)" $(find.files)
  #~ find.input=$(find.what)
if PLAT_GTK
  #~ find.command=grep --line-number "$(find.what)" $(find.files)
  
# List of file extensions, which will be searched
find.files=\
*| \
*.Lua *.Properties *.Api| \
*.Html *.Htm *.Php *.Js| \
*.Properties *.Html *.Xml *.Iface| \
*.Vbs *.Js *.Wsf *.Hta *.Lua| \
make **.mak *.bat *.cmd *.e| \
*.Vb *.Vbs *.Bas *.Frm *.Cls *.Ctl| \
*.Java *.Js *.Py *.Pl *.Rb *.Cgi *.Lua *.Conf| \
*.Asm *.C *.Cc *.Cpp *.Cxx *.Cs *.H *.Hh *.Hxx *.Hpp *.Rc| \
*.Pas *.Dpr *.Dpk *.Dfm *.Res| \
*.Idl *.Odl *.Rc *.Rc2 *.Dlg *.Def

# Script parameters FindText.lua:
# Sensitive Search
#~Findtext.matchcase=1
# Celebrate bukmarki found rows
#~Findtext.bookmarks=1
# Output all lines found in the console
findtext.output=1
# Show a hint of hot keys
findtext.tutorial=0

[Print] Print Settings (works only on Windows)
print.colour.mode=4
# The difference between the size of the font for printing and font size specified in the settings to default style

print.magnification=0

# Set:left, right, top, bottom margin, established in terms of:
# Hundredths of a millimeter, or thousandth of an inch
print.margins=500,0,0,0

# Footer top (header) and bottom (footer):
#=&& Ampersand (&); & p=number of the current page
# & F=filename; & F=full path to the file
# & D=file date; & D=current date
# & T=file time; & T=full time
print.header.format=$(FileNameExt) — Распечатано $(CurrentDate), $(CurrentTime) — Страница $(CurrentPage)
print.footer.format=$(FilePath) — File date: $(FileDate) — File time: $(FileTime)

# The text style for headers and footers
print.header.style=font:Arial, size:8, bold, back:# BFBFBF
print.footer.style=font:Arial Narrow, size:8, italics, back:# DFDFDF

[Export] Export Options (menu "File" - "Export")
#~Export.keep.ext=1
export.html.wysiwyg=1
#~Export.html.tabs=1
#~Export.html.folding=1
export.html.styleused=1
#~Export.html.title.fullpath=1
#~Export.rtf.tabs=1
#~Export.rtf.font.face=Arial
#~Export.rtf.font.size=9
#~Export.rtf.tabsize=8

# Scaling (relative to the standard font size screen)
export.pdf.magnification=0

# Font:Courier, Helvetica or Times (by Courier - line breaks will not)
export.pdf.font=Courier

# The page size (in pixels):width, height.
# Examples:Letter 612,792; A4 595,842; maximum 14400,14400
export.pdf.pagesize=595,842

# Margins (in points):left, right, top, bottom
export.pdf.margins=72,72,72,72

export.xml.collapse.spaces=1
export.xml.collapse.lines=1

[Help] Getting Help SciTE
command.scite.help="$(SciteDefaultHome)\tools\html_HELP.hta" "$(SciteDefaultHome)\doc\SciTEDoc.html"
command.scite.help.subsystem=2


# Help files for the programming languages ??are connected to the corresponding files.Properties

[Warnings] Sound and text alerts
# Audible warnings (only work on Windows.Contain pointers to wav files)
# FORMAT:<blinking window (0 - do not blink)>, <path to the sound file> <recording time (not required)>
#~Warning.findwrapped=1, C:\WINDOWS\Media\chord.wav
#~Warning.notfound=0, C:\WINDOWS\Media\ding.wav
#~Warning.wrongfile=0, C:\WINDOWS\Media\Ir_begin.wav
#~Warning.executeok=0, C:\WINDOWS\Media\ringin.wav
#~Warning.executeko=1, C:\WINDOWS\Media\ringout.wav
#~Warning.nootherbookmark=1, C:\WINDOWS\Media\ir_inter.wav

# Text messages (Alert), if not defined, do not occur (only in SciTE-Ru)
#~Warning.findwrapped.message=Find wrapped!
warning.notfound.message=Can't find!
warning.wrongfile.message=Wrong file name!
#~Warning.executeok.message=Execute OK!
#~Warning.executeko.message=Execute KO!
warning.nootherbookmark.message=No other bookmarks!
# Suppresses warning "Can not open file" (only in SciTE-Ru)
#~Warning.couldnotopenfile.disable=1

[StatusBar] Status Bar
# Show Status Bar (0/1)
statusbar.visible=1

# Number of lines of the state.Pereklyuchachenie between them - a mouse-click on the status bar.
statusbar.number=2

statusbar.text.1=\
Line $(LineNumber) Col $(ColumnNumber)\
  |  Select: $(SelHeight) lines  $(SelLength) bytes\
  |  $(OverType)\
  |  $(EOLMode)\
  |  $(font.current.size)px\
  |  $(scite.lexer.name)\
  |  $(editor.code.page.name)\
  |  FileAttr: $(FileAttr)\
  |  out:$(output.code.page)

statusbar.text.2=\
FileName: $(FileNameExt)\
  |  $(NbOfLines) lines, $(BufferLength) bytes\
  |  Create: $(FileDate) $(FileTime)\
  |  FileAttr: $(FileAttr)\
  |  out:$(output.code.page)

[International] Setting locale and encoding
# Name localizations
#~Locale.properties=locale-ru.properties
locale.properties=chinese.properties
# Encoding the editing window.Changes script CodePage.lua.It is used for functions string.{Upper| lower| len}
# editor.code.page=1251

# Unicode UTF-8
code.page=65001

# Russian code.page
#~Code.page=1251 - Set up is NOT recommended! <http://code.google.com/p/scite-ru/issues/detail?id=49>
# Character.set=204
# Output.code.page=1251

# chinese
#code.page=936
#character.set=134

# Required for Unicode to work on GTK +:
#~LC_CTYPE=en_US.UTF-8
output.code.page=65001

# 1 includes text encoding on console output OEM to ANSI (only in SciTE-Ru)
output.code.page.oem2ansi=1

# 1 includes the detection of encoding dos866 (CodePage.lua)
code.page.866.detect=1

# Automatically turns UTF-8 encoding when you open a UTF-8 BOM file has no header (only in SciTE-Ru)
# 1 - includes detection and automatically adds the BOM header to the edited text
# 2 - comprises detection but adds a BOM.
utf8.auto.check=1

# The file extensions that will be created and saved ONLY in UTF-8 (new_file.lua)
#~File.make.as.utf8=htm, html

# These variables are used when setting the other parameters (word.characters)
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
# The national character (in SciTE-Ru, this variable is defined script CodePage.lua)
# ~

# Specify the characters that are part of words
word.characters.*=$(chars.alpha)$(chars.numeric)$(chars.accented)_


#auto check code pagesize
command.discover.properties=python "$(SciteDefaultHome)\tools\FileDetect.py" "$(FilePath)"

[Tools Menu] Custom menu command "Tools"
import SciTEToolsMenu.properties

[Context Menu] Context Menu
# The list of available built-in commands (IDM_ *) see the file SciTE\doc\CommandValuesExt_rus.html
# User command=9000 + number of this command in the Tools menu

# Context Menu Editor
user.context.menu.*=\
Undo|IDM_UNDO|\
Redo|IDM_REDO|\
||\
Cut|IDM_CUT|\
Copy|IDM_COPY|\
Paste|IDM_PASTE|\
Delete|IDM_CLEAR|\
||\
Select All|IDM_SELECTALL|\
\
Selected|POPUPBEGIN|\
Text -> In a new file|9$(CN_TEXT_IN_NEW_FILE)|\
Block Comment or Uncomment|IDM_BLOCK_COMMENT|\
||\
Make Selection Uppercase|IDM_UPRCASE|\
Make Selection Lowercase|IDM_LWRCASE|\
||\
Find in Files|IDM_FINDINFILES|\
Select|POPUPEND|\
||\
Find String/Word|9$(CN_FIND_STRING_WORD)|\
Toggle Bookmark|IDM_BOOKMARK_TOGGLE|\
\
Toggle Fold|POPUPBEGIN|\
Current|IDM_EXPAND|\
All folds|IDM_TOGGLE_FOLDALL|\
Recursive|IDM_TOGGLE_FOLDRECURSIVE|\
Toggle Fold|POPUPEND|\
||\
Close|IDM_CLOSE|

# Context menu tabs
user.tabcontext.menu.*=\
PSPad|9$(CN_OPEN_BUFFER_IN_PSPAD)|\
PSPad TextDiff|9$(CN_DIFF_BUFFER_IN_PSPAD)|\
||\
Close|IDM_CLOSE|\
Close All|IDM_CLOSEALL|\
Close All but Current|9$(CN_CLOSE_ALL_BUT_CURRENT)|\
||\
Save|IDM_SAVE|\
Save|POPUPBEGIN|\
Save As|IDM_SAVEAS|\
Save a Copy|IDM_SAVEACOPY|\
||\
As HTML|IDM_SAVEASHTML|\
As RTF|IDM_SAVEASRTF|\
As PDF|IDM_SAVEASPDF|\
As LaTeX|IDM_SAVEASTEX|\
As XML|IDM_SAVEASXML|\
Save|POPUPEND|\
Save All|IDM_SAVEALL|\
||\
Move Tab Left|IDM_MOVETABLEFT|\
Move Tab Right|IDM_MOVETABRIGHT|\
||\
Copy To Clipboard|POPUPBEGIN|\
All Text|9$(CN_COPY_TO_CLIPBOARD_ALL)|\
||\
Path/Filename|9$(CN_COPY_TO_CLIPBOARD_FULLNAME)|\
Path|9$(CN_COPY_TO_CLIPBOARD_PATH)|\
Filename|9$(CN_COPY_TO_CLIPBOARD_FILENAME)|\
Copy To Clipboard|POPUPEND|\
||\
Text Size|POPUPBEGIN|\
Magnify|9$(CN_TEXT_SIZE_MAGNIFY)|\
Reduce|9$(CN_TEXT_SIZE_REDUCE)|\
Restore to Normal|9$(CN_TEXT_SIZE_NORMAL)|\
Text Size|POPUPEND|\
Encoding|POPUPBEGIN|\
Code Page Property|IDM_ENCODING_DEFAULT|\
UCS-2 Big Endian|IDM_ENCODING_UCS2BE|\
UCS-2 Little Endian|IDM_ENCODING_UCS2LE|\
UTF-8 with BOM|IDM_ENCODING_UTF8|\
UTF-8|IDM_ENCODING_UCOOKIE|\
||\
dos866 <-> win1251|9$(CN_CONVERT_OEM2WIN)|\
Encoding|POPUPEND|\
||\
Rename current file|9$(CN_RENAME_CURRENT_FILE)|\
Open in new window|9$(CN_OPEN_BUFFER_IN_NEW_WINDOW)|\
||\
Print|IDM_PRINT|

# Context menu console
user.outputcontext.menu.*=\
Undo|IDM_UNDO|\
Redo|IDM_REDO|\
||\
Cut|IDM_CUT|\
Copy|IDM_COPY|\
Paste|IDM_PASTE|\
Delete|IDM_CLEAR|\
||\
Select All|IDM_SELECTALL|\
Clear Output|IDM_CLEAROUTPUT|\
||\
Find String/Word|9$(CN_FIND_STRING_WORD)|\
Selected text -> In a new file|9$(CN_TEXT_IN_NEW_FILE)|\
||\
Hide|IDM_TOGGLEOUTPUT|

[Shortcuts] Shortcuts member
# The list of available built-in commands (IDM_ *) see the file SciTE\doc\CommandValuesExt_rus.html
# User command=9000 + number of this command in the Tools menu
user.shortcuts=\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|\
Ctrl+Alt+V|IDM_PASTEANDDOWN|\
Ctrl+F12|IDM_WRAP|\
Ctrl+Shift+KeypadMultiply|IDM_TOGGLE_FOLDALL|\
Alt+R|IDM_READONLY|\
Ctrl+Shift+PageUp|IDM_MOVETABLEFT|\
Ctrl+Shift+PageDown|IDM_MOVETABRIGHT|\
$(user.shortcuts.add)

[ToolBar] Customizing the toolbar is used by default
# Display panel buttons (0/1)
toolbar.visible=1

# This sets the toolbar in the format:
# Tooltip| IDM_ constant or number in the menu Tools + 9000| no icons
user.toolbar.*=\
|||\
New|IDM_NEW|0|\
Open|IDM_OPEN|1|\
Save|IDM_SAVE|2|\
Save All|IDM_SAVEALL|30|\
|||\
Print|IDM_PRINT|3|\
|||\
Cut|IDM_CUT|4|\
Copy|IDM_COPY|5|\
Paste|IDM_PASTE|6|\
Delete|IDM_CLEAR|7|\
|||\
Undo|IDM_UNDO|8|\
Redo|IDM_REDO|9|\
|||\
Find|IDM_FIND|10|\
Replace|IDM_REPLACE|11|\
|||\
Go|IDM_GO|16|\
Build|IDM_BUILD|17|\
Compile|IDM_COMPILE|18|\
|||\
Run Current Macro|IDM_MACROPLAY|13|\
Stop Recording Macro|IDM_MACROSTOPRECORD|14|\
Record Macro|IDM_MACRORECORD|15|\
|||\
End of Line|IDM_VIEWEOL|19|\
Change Fonts|IDM_MONOFONT|21|\
Read-Only|IDM_READONLY|22|\
Wrap|IDM_WRAP|29|\
|||\
Output|IDM_TOGGLEOUTPUT|23|\
Full Screen|IDM_FULLSCREEN|24|\
|||\
Open Global Options File|IDM_OPENGLOBALPROPERTIES|26|\
Open User Options File|IDM_OPENUSERPROPERTIES|27|\
Open Abbreviations File|IDM_OPENABBREVPROPERTIES|28|\
|||\
Help|IDM_HELP|25

# Connect a custom toolbar (it will replace the built-in set up!)
#~Import toolbar\toolbar_gnome.properties
import toolbar\toolbar_cool.properties

[Styles] Font and color settings
# Set custom variables for the fonts used in the standard styles.
# ------------------------------------------------- ----------
# Switch between sets combo like Ctrl + F11 with a script FontChanger.lua
# The first collection of fonts (fixed)
font.0.base=font:Microsoft YaHei,size:9.5
font.0.small=font:Microsoft YaHei,size:8
font.0.comment=font:Microsoft YaHei,size:9,italics

# The second collection of fonts (proportional)
font.1.base=font:微软雅黑,size:10 
font.1.small=font:微软雅黑,size:8
font.1.comment=font:微软雅黑,size:8

# The third collection of fonts (fixed)
#~Font.2.base=font:Consolas, size:10
#~Font.2.small=font:Consolas, size:8
#~Font.2.comment=font:Consolas, size:8, italics

# Define which of the sets of fonts will be used by default
font.base=$(font.0.base)
font.small=$(font.0.small)
font.comment=$(font.0.comment)

# Variable font.monospace often used in the language file
# And is also used in the script SciTEHexEdit.lua
font.monospace=$(font.base)
# ------------------------------------------------- ----------

# We define a standard color, then to use them in all language.Properties.
colour.comment=fore:#008000
colour.code.comment.doc=$(colour.comment),back:#FEFEFE
colour.embedded.comment=back:#E0EEFF

colour.number=fore:#AC00A9
colour.keyword=fore:#0000DF
colour.string=fore:#5E5EAE
colour.char=$(colour.string)
colour.operator=fore:#FF0000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000
colour.whitespace=fore:#808080

# Possible values ??for the line style:
# Font:<name>, size:<number>, fore:<colour>, back:<colour>, italics| notitalics, bold| notbold, eolfilled| noteolfilled, underlined| notunderlined, case:m| u| l, visible| notvisible, changeable| notchangeable
# If the line style parameter is mentioned twice (to avoid!), It operates far right value.

# Global default styles for all languages

# The default style, and its features will be inherited by all other styles
style.*.32=$(font.base)

# The background color of the line numbers in read-only mode (using the script ReadOnly.lua)
# If not specified, the background in ReadOnly mode does not change
style.back.readonly=# FFEEEE

# Style for line numbers (from the left)
style.*.33=font:Microsoft Sans Serif, size:8, notbold

#Style # is used to display a pair of parentheses () or {}
style.*.34=back:#99FFCC, bold

#Style # is used to display the unclosed parentheses (or {
style.*.35=back:# FFAAFF, bold
# Note:In order to see the background color of a style.*.34 And style.*.35, You must either disable caret.line.back or use transparency (caret.line.back.alpha)

#Style # for non-printing characters.This is not a complete style.And foreground, and background colors for these characters are defined accordingly Lexer-ohm, and not this style
style.*.36 =

# Indentation guides
style.*.37=fore:#C0C0C0

#Style # tooltips syntax (taken from the API files)
style.*.38=font:MS Sans Serif,size:9

# ------------------------------------------------- ------------
# Column for folding (folding / deployment procedures)
# Background pixel columns are colored in a checkerboard pattern with two colors
# The first color "checkerboard"
fold.margin.colour=#ECE9D8
# The second color "checkerboard"
#~Fold.margin.highlight.colour=#0000FF
# Colour vertical line folding block in which the cursor is
fold.highlight.colour=#0099FF

# Color inflated for line length (or limit line)
edge.colour=#FFE8FF

# Color of text
selection.fore =
# # DADADA value gives the standard silver C0C0C0
# On displays with a small number of colors and light gray colors with greater depth
selection.alpha=50
selection.back=#000000

#~Selection.additional.fore=# 0000A0
#~Selection.additional.back=# 000080
#~Selection.additional.alpha=20

# Whitespace (spaces, tabs)
whitespace.fore=#8F8F8F
#~Whitespace.back=# FFF0F0

# Colour rim tags
#~Bookmark.fore=# 000000

# The background color of the mark
#~Bookmark.back=# AA0000
#~Bookmark.alpha =

# Colour rim marks on the line with a source of error (the default # 7F0000)
#~Error.marker.fore=# FF0099

# The background color of the mark, in line with the source code of the error, and in line with the text of the error console (default is # FFFF00)
#~Error.marker.back=# FF9999

# The background color of the line with the error text in the console window (if you want color, different from error.marker.back) (only in SciTE-Ru)
#~Error.line.back=# 330000

# Cursor
caret.fore=#0000FF

# Highlight color line with the cursor
caret.line.back=#0099FF

Transparency # (0 to 255) character on a line with the cursor
caret.line.back.alpha=30

# The cursor in the console window (only in SciTE-Ru)
output.caret.fore=#0000FF

# Highlight color line with the cursor in the console window (only in SciTE-Ru)
output.caret.line.back=#0099FF

#Transparency # (0 to 255) character on a line with the cursor in the console window (only SciTE-Ru)
output.caret.line.back.alpha=30

# Styles markers highlight the text used in the scripts (0 to 31)
# Format string values:<color> <style> <transparency>, where
# <Style> can be:
# Plain, squiggle, tt, diagonal, strike, hidden, roundbox, box
# <Transparency>=@ <number>, the transparency of the fill for the style roundbox, a number from 0 to 255
# If the color is not specified, the marker color find.mark default
# If the style is not specified, the roundbox

# To paired_tags.lua:
indic.style.11=#0000FF
indic.style.12=#FF0000
# To HighlightLinks.lua:
indic.style.13=#0000FF, plain
# To highlighting_identical_text.lua:
indic.style.14=#FF9900, box
indic.style.15=#FF0000, box
# To highlighting_text.lua:
highlighting.text.marker=16
indic.style.16=# FF0080, @120
# To FindText.lua:
findtext.first.mark=27
indic.style.27=#CC00FF,@50
indic.style.28=#0000FF,@50
indic.style.29=#00FF00,@50
indic.style.30=#FFFF00,@100
indic.style.31=#11DDFF,@80

[Caret] Cursor
# Cursor blink rate (in milliseconds)
caret.period=500

# Flickering in all secretions
#~Caret.additional.blinks=0

# Width of the cursor
#~Caret.width=2

caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0
#~Visible.policy.strict=1
#~Visible.policy.slop=1
#~Visible.policy.lines=4
#~Caret.sticky=1

[Abbrev & API] Parameters autocompletion and tooltips
# 1 In SciTE the letters you will helpfully display a hint with possible additions.
autocompleteword.automatic=1

#Tip # 1 When will multi-variant (only in SciTE-Ru)
autocompleteword.incremental=1

autocomplete.choose.single=0

# (Individual parameters for the respective languages, see.Properties)
autocomplete.*.ignorecase=1
calltip.*.ignorecase=1

# Script parameters abbrevlist.lua:
# 1 When you label tabs are not cleared after moving them on Tab.Their user manually removes the combination Ctrl + Tab.
#~Abbrev.multitab.clear.manual=1
#Style # to display a label (by default, labels are not visible)
#~Abbrev.multitab.indic.style=# FF6600, diagonal
# The maximum width of the drop-down list of abbreviations transcripts
abbrev.list.width=80

[Menu Language] setting menu "Illumination" (switching algorithm for recognizing the contents of different file types)
# Each menu consists of three parts:a menu bar| file extension| key
# Enable function (Fn) and the letter keys in combination with the Ctrl and / or Shift:
# [Ctrl +] [Shift +] [Fn| a].Examples:F12, Ctrl + Shift + D.
# Use '&' before the character to create an accelerator.

keyText=Shift+F11
keyMake=Ctrl+Shift+F11
keyHTML=F12
keyJS=Alt+Shift+F12
keyXML=Shift+F12

menu.language=\
Text|txt|$(keyText)|\
#~ Ada|ads||\
#~ ABAP|abap||\
AutoIt3|au3||\
AutoHotkey|ahk||\
#~ Apache Confi&g|conf||\
#~ Atmel AVR|avr||\
Assembler|asm||\
#~ ASN.1|asn1||\
#~ Avenue|ave||\
#~ Baan|bc||\
Basic|bas||\
&Batch|bat||\
#~ Bullant|ant||\
&C / C++|c||\
#~ CMake|cmake||\
C&#|cs||\
#~ COBOL|cob||\
#~ Csound|orc||\
CSS|css||\
#~ D|d||\
&Difference|diff||\
#~ &Eiffel|e||\
Erlang|erl||\
&Errorlist|err||\
#~ Euphoria|e||\
#~ FlagShip|prg||\
#~ Forth|forth||\
#~ &Fortran|f90||\
#~ Gap|g||\
#~ Haskell|hs||\
H&ypertext|html|$(keyHTML)|\
#~ &InnoSetup|iss||\
&Java|java||\
Java&Script|js|$(keyJS)|\
#~ &Kix|kix||\
#~ Lisp|lisp||\
#~ Lot|lot||\
#~ Lout|lt||\
Lu&a|lua||\
#~ Matlab|m.matlab||\
&Makefile|mak|$(keyMake)|\
#~ MetaPost|mp||\
#~ MMIXAL|mms||\
#~ Modula-3|m3||\
&nnCron crontab|tab||\
NSIS|nsi||\
#~ Objective Caml|ml||\
#~ Octave|m.octave||\
#~ Opal|impl||\
Pascal|pas||\
Pe&rl|pl||\
P&HP|php||\
#~ P&LSQL|spec||\
#~ P&ostScript|ps||\
#~ P&OV-Ray SDL|pov||\
PowerShell|ps1||\
#~ PowerPro|powerpro||\
&Properties|properties||\
Pytho&n|py||\
#~ R|R||\
Reso&urce|rc||\
#~ Ruby|rb||\
Shell|sh||\
S&QL|sql||\
#~ Specman|e||\
#~ &TCL|tcl||\
#~ TeX|tex||\
#~ &txt2tags|t2t||\
&VB|vb||\
VBScr&ipt|vbs||\
#~ Verilog|v||\
#~ VHDL|vhd||\
&XML|xml|$(keyXML)|\
YAML|yaml||

[Languages] Import all specialized configuration files for specific programming languages
# The files at the end of the name with an underscore are slightly different from distributed with the official distribution
# Comment out the unused languages ??you!
#~ import languages\abap
#~ import languages\ada
#~ import languages\avr
#~ import languages\asm
#~ import languages\asn1
import languages\au3
import languages\ahk
#~ import languages\ave
#~ import languages\baan
#~ import languages\blitzbasic
#~ import languages\bullant
#~ import languages\caml
import languages\conf
import languages\cpp
import languages\cmake
#~ import languages\d
#~ import languages\csound
import languages\css
#~ import languages\eiffel
import languages\erlang
#~ import languages\escript
#~ import languages\euphoria
#~ import languages\flagship
#~ import languages\forth
#~ import languages\fortran
#~ import languages\freebasic
import languages\html
import languages\haxe
#~ import languages\inno
#~ import languages\kix
#~ import languages\latex
import languages\lisp
#~ import languages\lot
#~ import languages\lout
import languages\lua
# Uncomment to enable LuaInspect and script_lua lexer!
#~ import languages\script_lua
#~ import languages\matlab
#~ import languages\metapost
#~ import languages\mmixal
import languages\nncrontab
import languages\nsis
#~ import languages\opal
import languages\pascal
import languages\perl
#~ import languages\pov
import languages\powershell
#~ import languages\ps
#~ import languages\purebasic
import languages\python
#~ import languages\rebol
import languages\ruby
#~ import languages\scriptol
import languages\text
#~ import languages\smalltalk
#~ import languages\spice
#~ import languages\specman
import languages\sql
#~ import languages\tcl
#~ import languages\tex
import languages\vb
#~ import languages\verilog
#~ import languages\vhdl
import languages\yaml
# Other unaccounted languages (*.Properties; *.Abbrev; *.Ini; *.Inf; *.Reg;.Txt; *.Log; *.Lst; *.Doc; *.Bat; *.Cmd; etc .)
import languages\others

[Open] file filter settings in the dialogs for opening and saving files
source.files=All Source|\
*.asm;*asp;*.au3;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pl;*.rb;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.xml;*.iface;*.bat;*.e;\
*.sql;*.php;*.inc;*.css;*.js;*.html;*.htm;*.hta|

all.files=All Files (*.*)|*.*|

# Format:Explanatory text| file mask|
# There is a limit (possibly 256 characters) to the length of the filter in Windows, so not all extensions can be displayed
open.filter=\
$(source.files)\
$(all.files)\
$(filter.abap)\
$(filter.ada)\
$(filter.conf)\
$(filter.ahk)\
$(filter.asm)\
$(filter.asn1)\
$(filter.ave)\
$(filter.baan)\
$(filter.bash)\
$(filter.caml)\
$(filter.cmake)\
$(filter.cpp)\
#~ $(filter.ch)\
$(filter.css)\
$(filter.d)\
$(filter.eiffel)\
$(filter.erlang)\
$(filter.fortran)\
$(filter.gap)\
#~ $(filter.hs)\
$(filter.idl)\
$(filter.inno)\
$(filter.java)\
$(filter.js)\
$(filter.kix)\
$(filter.lout)\
$(filter.lua)\
$(filter.matlab)\
$(filter.metapost)\
$(filter.mmixal)\
#~ $(filter.modula3)\
$(filter.nncrontab)\
$(filter.nsis)\
$(filter.opal)\
$(filter.pascal)\
$(filter.perl)\
$(filter.php)\
$(filter.pov)\
$(filter.powershell)\
$(filter.prg)\
$(filter.properties)\
$(filter.ps)\
$(filter.python)\
$(filter.r)\
$(filter.ruby)\
$(filter.sql)\
$(filter.specman)\
$(filter.tcl)\
$(filter.tex)\
$(filter.text)\
$(filter.txt2tags)\
$(filter.vb)\
$(filter.web)\
$(filter.yaml)\
$(filter.verilog)\
$(filter.vhdl)

save.filter=$(open.filter)

[LUA] connection when downloading external LUA script
ext.lua.startup.script=$(SciteDefaultHome)\tools\SciTEStartup.lua
#~Ext.lua.auto.reload=0
#~Ext.lua.reset=1

[Macros] Macros
# The path to the macro file (default $(scite.userhome)\SciTE.macro or $(SciteDefaultHome)\SciTE.macro)
#~Macro.file.path =

# Read the macros from the macro file when you start the Editor
macro.load.on.startup=1

# Automatically record macros in the current macro file
macro.autosave=1

# Open dialog for the macro name after his record (requires external library shell)
macro.fill.name.dialog=1

# Position in the list of macros to re-recorded (default=1)
# -1 - Sets the append list
#~Macro.new.record.position=-1

# Style for line numbers (from the left) while recording a macro
macro.recording.numfield.style=$(style.*.33), back:#E9B6C9

[SideBar] Settings multifunctional sidebar (SideBar.lua)
# Use the sidebar for a separate window:1-yes, 0-no (default)
#~Sidebar.win=1
# Show SideBar when starting the editor:1-yes, 0-no (default)
sidebar.show=1
# The position and width of the panel
#~Sidebar.position=left
sidebar.width=300
# Show the flags of functions:1-yes, 0-no (default)
#~Sidebar.functions.flags=1
# Display function parameters:1-yes, 0-no (default)
#~Sidebar.functions.params=1
# The process for the preview of abbreviations:1-calltip, 0-annotation (default)
# Sidebar.abbrev.calltip=1
# Style for annotations
style.*.255=fore:#808080, back:#FEFEFE

[Session & Settings] Options save the settings and work with sessions
# Keep a list of recently launched files (File menu)
save.recent=1

# When you run SciTE open files which worked under the previous session
save.session=1

# Keep in session file location tags
session.bookmarks=1

# Save the file in the session folding
session.folds=1

# Save the file in the session, the position and size of windows SciTE
save.position=1

# Save the file in the session history Search and Replace
save.find=1

# Recording the session file on exit only if more than one tab open (only in SciTE-Ru)
#~Save.session.multibuffers.only=1

# Max number of points (30) in the list of recently opened files (only in SciTE-Ru)
#~Save.recent.max=15

# In addition to use a file SciTE.recent (to store information about all accessed files) (RestoreRecent.lua and RestoreRecent.js)
save.session.recent=1

# Use SessionManager.hta to open and save sessions
#~Session.manager=1
# When closing SciTE open dialogue SessionManager.hta to save the current session
#~Save.session.manager.on.quit=1
# When closing SciTE automatically create a file "currentfilename_num.session" with the contents of the current session
#~Save.session.on.quit.auto=1

# Specifies whether or not to close the already open files at startup session (only in SciTE-Ru)
# Default=1, and all the tabs are closed before loading
#~Session.close.buffers.onload=0

# Save the file in the session, some installation SciTE (save_settings.lua)
save.settings=1

# This variable is available from the file SciTE.session
import home\SciTE.session
