# Define SciTE settings for Forth files

# Ётот файл настроек конфликтует с файлами дл€ ‘ортрана и nnCron'а, поэтому
# если вы хотите пользоватьс€ ‘ортом вам надо заккоментировать файлы настроек
# fortran.properties и nncrontab.properties в секции [Languages] глобального
# файла настроек
file.patterns.forth=*.spf;*.f
#file.patterns.forth=*.forth

lexer.$(file.patterns.forth)=forth

filter.forth=Forth files (f spf)|$(file.patterns.forth)|

# пуста€ строка после следующей - об€зательна, иначе вставка комментари€ строки в виде "\ " по Ctrl+Q - невозможна
comment.block.forth=\\

#comment.block.at.line.start.forth=0
comment.stream.start.forth=(
comment.stream.end.forth=)
comment.box.start.forth=\
comment.box.middle.forth=\
comment.box.end.forth=\

# добавл€ем пункт в меню Tools
# можно добавить несколько команд в меню дл€ компил€ции, например, разными верси€ми ‘орта
command.name.1.$(file.patterns.forth)= омпилировать с помощью SPF4
# указываем команду котора€ будет выполн€тьс€ по данному пункту меню
command.1.$(file.patterns.forth)=$(forth.compile.path)\spf4.exe $(FilePath)
# указываем на необходимость перезагрузки редактируемого файла после выполнени€ добавленной команды меню Tools
# command.is.filter.1.$(file.patterns.forth)=1
# указываем способ запуска программы в Windows: 0 - как утилиту командной строки
#                                               1 - как утилиту с окнами
#                                               2 - через вызов ShellExecute (как с помощью €рлыка)
#                                               3 - напр€мую (through the director interface)
command.subsystem.1.$(file.patterns.forth)=0

# включает одинаковую подсветку кода дл€ секций интерпретации и компил€ции
# lexer.forth.no.interpretation=1

# дл€ команд компил€ции
command.compile.$(file.patterns.forth)=$(forth.compile.path)\spf4.exe "$(FilePath)"
command.compile.subsystem.$(file.patterns.forth)=0
#~ command.build.$(file.patterns.forth)=$(compile.file.path)\spf4.exe "$(FilePath)"
#~ command.build.subsystem.$(file.patterns.forth)=0
#~ command.go.$(file.patterns.forth)=$(compile.file.path)\spf4.exe "$(FilePath)"
#~ command.go.subsystem.$(file.patterns.forth)=0

# вызов справки по выделенному слову
# command.help.$(file.patterns.forth)=$(CurrentWord)!$(compile.file.path)\docs\papers\spf_help.chm
command.help.$(file.patterns.forth)=$(CurrentWord)!$(forth.compile.path)\docs\papers\spf_help_ru.chm
command.help.subsystem.$(file.patterns.forth)=4



# Forth styles

# control keywords Forth
keywords.$(file.patterns.forth)=\
AGAIN \
BEGIN \
CASE \
DO \
ELSE END-CASE ENDOF \
IF \
LOOP \
OF <OF< \
REPEAT \
THEN \
UNTIL \
WHILE \
[IF] \
[ELSE] \
[THEN] \
?DO \

# Keywords
keywords2.$(file.patterns.forth)=\
@ ! * */ /MOD /notransl /STRING . , ;CLASS ;MODULE ", =  # #> #S +WORD (.") \
< <# <> <MARK > >BODY >MARK >NUMBER >R >RESOLVE >RESOLVE1 \
?BRANCH, ?COMP ?DUP ?ERROR ?IMMEDIATE ?LITERAL1 ?LITERAL2 ?SLITERAL1 ?SLITERAL2 ?STACK ?VOC \
0= 0<  0<> 1+ 2@ 2! 2* 2DUP 2DROP 2LITERAL 2SWAP 2OVER 2R@ 2>R 2R> \
ABORT ACCEPT ALIGN ALIGNED ALLOCATE ALLOT ALSO AND ANSI>OEM ASCIIZ> \
BASE BRANCH, BYE \
C! C@ C, CATCH CELL+ CELLS CHAR+ CharAddr CHARS CLASS! CLASS@ CLITERAL CLOSE-FILE COMPARE COMPILE, CONSOLE-HANDLES COUNT CR CREATE-FILE CREATE-FILE-SHARED \
D. DABS DECIMAL DEFINITIONS DELETE-FILE DEPTH DLIT, DOES> DOS-LINES DROP DROP-EXC-HANDLER DUMP DUP SWAP \
EKEY EKEY? EKEY>CHAR EMIT EndOfChunk ENDWITH ENVIRONMENT? ERASE ERASE-IMPORTS ERR ERROR2 EVALUATE EXIT EXPORT EXTERNTASK \
HALT HEADER HERE HEX HEX-LITERAL HEX-SLITERAL HIDE \
I ID. IMMEDIATE INTERPRET IsDelimiter \
FALSE FILE-POSITION FILE-SIZE FIND1 FORTH FREE \
GET-CURRENT GET-ORDER GetChar \
KEY? KEY \
LATEST LAST-WORD LEAVE LIT, LITERAL \
MAIN1 MAINX MAX MIN ModuleDirName ModuleName MOVE HOLD SIGN \
NextWord NIP NLIST \
OnDelimiter ONLY OnNotDelimiter OPEN-FILE OPEN-FILE-SHARED OPTIONS OR ORDER OVER \
PAD PAR! PAR@ PARSE ParseWord PAUSE PeekChar PREVIOUS \
QUIT \
R@ R> R/O READ-FILE READ-LINE RECURSE REFILL REPOSITION-FILE RESIZE RESIZE-FILE RESUME RET, ROT \
SAVE SEARCH SET-CURRENT SET-EXC-HANDLER SET-ORDER SFIND SKIP SkipDelimiters SkipWord SkipUpTo SLITERAL SMUDGE SOURCE SPACE SPACES SP@ SP! START STOP SUSPEND \
TITLE THROW TRUE TYPE \
U. UNIX-LINES UNLOOP USER-ALLOT USER-HERE \
VOC VOC-NAME. \
W@ W! W, WORD WORDS WordByAddr WordByAddrWl WORDLIST WRITE-FILE WRITE-LINE \
CHAR

# defwords
keywords3.$(file.patterns.forth)=\
: VARIABLE CREATE VALUE CONSTANT VM: M: var dvar chars OBJ \
CONSTR: DESTR: CLASS: OBJECT: POINTER \
USER USER-CREATE USER-VALUE VECT \
WNDPROC: VOCABULARY -- TASK: CEZ: MODULE:

# prewords1
keywords4.$(file.patterns.forth)=\
[CHAR] POSTPONE WITH ['] TO [COMPILE] ASCII \' c: '

# prewords2
keywords5.$(file.patterns.forth)=\
REQUIRE WINAPI: INCLUDED INCLUDE-FILE

# string words
keywords6.$(file.patterns.forth)=\
"~" S"~" ABORT"~" Z"~" ."~" C"~" .(~)

# start word definition
keywords7.$(file.patterns.forth)=\
: :NONAME

# end word definition
keywords8.$(file.patterns.forth)=\
;

# folding start tokens
keywords9.$(file.patterns.forth)=\
IF BEGIN CASE DO ?DO [IF] CODE OF <OF< PROC:

# folding end tokens
keywords10.$(file.patterns.forth)=\
THEN REPEAT UNTIL AGAIN END-CASE LOOP +LOOP [THEN] END-CODE ENDOF PROC;

# Add from other libs
keywords11.$(file.patterns.forth)=\
=== | (/ /) \
-align -bevel -bgcolor! -bottom -boxed -center -command -font -middle -right -text! -top -wndproc! \
...WINDOWS \
attach-menubar \
button \
center create-font create-window \
delete-font dialog-window DIS-OPT \
filler \
GRID GRID; groupbox \
hline \
label \
M: M; MENU: MENU; MESSAGES: MESSAGES; msg \
PROC: PROC; \
rectangle right \
SET-OPT syscolor \
wincenter WINDOWS... winmain winshow

# Add from my libs
keywords12.$(file.patterns.forth)=\
+M1 \
% \
area \
calculate cls \
ListDump ListDump-+5 \
PI PI>.6 polinom \
R% R%_2 \
view_1 view_2 view_2_ view_3 \

# User defined keywords 1
keywords13.$(file.patterns.forth)=\
example1

# User defined keywords 2
keywords14.$(file.patterns.forth)=\
example2

# User defined keywords 3
keywords15.$(file.patterns.forth)=\
example3

# User defined keywords 4
keywords16.$(file.patterns.forth)=\
example4

# control keywords in interpretation
keywords17.$(file.patterns.forth)=\
AGAIN \
BEGIN \
CASE \
DO \
ELSE END-CASE ENDOF \
IF \
LOOP \
OF <OF< \
REPEAT \
THEN \
UNTIL \
WHILE \
?DO \

# Keywords in interpretation
keywords18.$(file.patterns.forth)=\
@ ! * */ /MOD /notransl /STRING . , ;CLASS ;MODULE ", =  # #> #S +WORD (.") \
< <# <> <MARK > >BODY >MARK >NUMBER >R >RESOLVE >RESOLVE1 \
?BRANCH, ?COMP ?DUP ?ERROR ?IMMEDIATE ?LITERAL1 ?LITERAL2 ?SLITERAL1 ?SLITERAL2 ?STACK ?VOC \
0= 0<  0<> 1+ 2@ 2! 2* 2DUP 2DROP 2LITERAL 2SWAP 2OVER 2R@ 2>R 2R> \
ABORT ACCEPT ALIGN ALIGNED ALLOCATE ALLOT ALSO AND ANSI>OEM ASCIIZ> \
BASE BRANCH, BYE \
C! C@ C, CATCH CELL+ CELLS CHAR+ CharAddr CHARS CLASS! CLASS@ CLITERAL CLOSE-FILE COMPARE COMPILE, CONSOLE-HANDLES COUNT CR CREATE-FILE CREATE-FILE-SHARED \
D. DABS DECIMAL DEFINITIONS DELETE-FILE DEPTH DLIT, DOES> DOS-LINES DROP DROP-EXC-HANDLER DUMP DUP SWAP \
EKEY EKEY? EKEY>CHAR EMIT EndOfChunk ENDWITH ENVIRONMENT? ERASE ERASE-IMPORTS ERR ERROR2 EVALUATE EXIT EXPORT EXTERNTASK \
HALT HEADER HERE HEX HEX-LITERAL HEX-SLITERAL HIDE \
I ID. IMMEDIATE INTERPRET IsDelimiter \
FALSE FILE-POSITION FILE-SIZE FIND1 FORTH FREE \
GET-CURRENT GET-ORDER GetChar \
KEY? KEY \
LATEST LAST-WORD LEAVE LIT, LITERAL \
MAIN1 MAINX MAX MIN ModuleDirName ModuleName MOVE HOLD SIGN \
NextWord NIP NLIST \
OnDelimiter ONLY OnNotDelimiter OPEN-FILE OPEN-FILE-SHARED OPTIONS OR ORDER OVER \
PAD PAR! PAR@ PARSE ParseWord PAUSE PeekChar PREVIOUS \
QUIT \
R@ R> R/O READ-FILE READ-LINE RECURSE REFILL REPOSITION-FILE RESIZE RESIZE-FILE RESUME RET, ROT \
SAVE SEARCH SET-CURRENT SET-EXC-HANDLER SET-ORDER SFIND SKIP SkipDelimiters SkipWord SkipUpTo SLITERAL SMUDGE SOURCE SPACE SPACES SP@ SP! START STOP SUSPEND \
TITLE THROW TRUE TYPE \
U. UNIX-LINES UNLOOP USER-ALLOT USER-HERE \
VOC VOC-NAME. \
W@ W! W, WORD WORDS WordByAddr WordByAddrWl WORDLIST WRITE-FILE WRITE-LINE

# defwords in interpretation
keywords19.$(file.patterns.forth)=\
VARIABLE CREATE VALUE CONSTANT VM: M: var dvar chars OBJ \
CONSTR: DESTR: CLASS: OBJECT: POINTER \
USER USER-CREATE USER-VALUE VECT \
WNDPROC: VOCABULARY -- TASK: CEZ: MODULE:

# prewords in interpretation
keywords20.$(file.patterns.forth)=\
CHAR POSTPONE WITH TO ASCII \' c: '

# whitespace (SCE_FORTH_DEFAULT)
style.forth.0=
# Comment (SCE_FORTH_COMMENT)
style.forth.1=$(colour.comment),$(font.comment)
# ML comment (SCE_FORTH_COMMENT_ML)
style.forth.2=$(colour.comment),$(font.comment)
# ML comment (SCE_FORTH_IDENTIFIER)
style.forth.3=$(colour.comment),$(font.comment),bold
# control (SCE_FORTH_CONTROL)
style.forth.4=fore:#800080,bold
# Keywords (SCE_FORTH_KEYWORD)
style.forth.5=$(colour.keyword),bold
# defwords (SCE_FORTH_DEFWORD)
style.forth.6=fore:#FF0000,bold,back:#C0DCC0
# preword1 (SCE_FORTH_PREWORD1)
style.forth.7=fore:#CC3300,bold
# preword2 (SCE_FORTH_PREWORD2)
style.forth.8=fore:#996633,bold
# number (SCE_FORTH_NUMBER)
style.forth.9=$(colour.number)
# Double quoted string (SCE_FORTH_STRING)
style.forth.10=$(colour.string)
# locale (SCE_FORTH_LOCALE)
style.forth.11=$(colour.comment)
# GUI (SCE_FORTH_GUI)
style.forth.12=fore:#007F99,bold
# OOP (SCE_FORTH_OOP)
style.forth.13=fore:#990000,bold
# User defined words 1 (SCE_FORTH_WORD1)
style.forth.14=fore:#006699,bold
# User defined words 2 (SCE_FORTH_WORD2)
style.forth.15=fore:#999000,bold
# User defined words 3 (SCE_FORTH_WORD3)
style.forth.16=fore:#005555,bold
# User defined words 4 (SCE_FORTH_WORD4)
style.forth.17=fore:#555555,bold

# styles in definition block
colour.forth.worddef=back:#EEEEEE,eolfilled
# whitespace (SCE_FORTH_DEFAULT+0x40)
style.forth.64=$(colour.forth.worddef)
# Comment (SCE_FORTH_COMMENT+0x40)
style.forth.65=$(colour.comment),$(font.comment),$(colour.forth.worddef)
# ML comment (SCE_FORTH_COMMENT_ML+0x40)
style.forth.66=$(colour.comment),$(font.comment),$(colour.forth.worddef)
# ML comment (SCE_FORTH_IDENTIFIER+0x40)
style.forth.67=$(colour.comment),$(font.comment),bold,$(colour.forth.worddef)
# control (SCE_FORTH_CONTROL+0x40)
style.forth.68=fore:#800080,bold,$(colour.forth.worddef)
# Keywords (SCE_FORTH_KEYWORD+0x40)
style.forth.69=$(colour.keyword),bold,$(colour.forth.worddef)
# defwords (SCE_FORTH_DEFWORD+0x40)
style.forth.70=fore:#FF0000,bold,back:#C0DCC0
# preword1 (SCE_FORTH_PREWORD1+0x40)
style.forth.71=fore:#CC3300,bold,$(colour.forth.worddef)
# preword2 (SCE_FORTH_PREWORD2+0x40)
style.forth.72=fore:#996633,bold,$(colour.forth.worddef)
# number (SCE_FORTH_NUMBER+0x40)
style.forth.73=$(colour.number),$(colour.forth.worddef)
# Double quoted string (SCE_FORTH_STRING+0x40)
style.forth.74=$(colour.string),$(colour.forth.worddef)
# locale (SCE_FORTH_LOCALE+0x40)
style.forth.75=$(colour.comment),$(colour.forth.worddef)
# GUI (SCE_FORTH_GUI+0x40)
style.forth.76=fore:#007F99,bold,$(colour.forth.worddef)
# OOP (SCE_FORTH_OOP+0x40)
style.forth.77=fore:#990000,bold,$(colour.forth.worddef)
# User defined words 1 (SCE_FORTH_WORD1+0x40)
style.forth.78=fore:#006699,bold,$(colour.forth.worddef)
# User defined words 2 (SCE_FORTH_WORD2+0x40)
style.forth.79=fore:#999000,bold,$(colour.forth.worddef)
# User defined words 3 (SCE_FORTH_WORD3+0x40)
style.forth.80=fore:#005555,bold,$(colour.forth.worddef)
# User defined words 4 (SCE_FORTH_WORD4+0x40)
style.forth.81=fore:#555555,bold,$(colour.forth.worddef)

# styles in interpretation block
colour.forth.interpretation=back:#FFFFCC,eolfilled
# whitespace (SCE_FORTH_DEFAULT+0x60)
style.forth.96=$(colour.forth.interpretation)
# Comment (SCE_FORTH_COMMENT+0x60)
style.forth.97=$(colour.comment),$(font.comment),$(colour.forth.interpretation)
# ML comment (SCE_FORTH_COMMENT_ML+0x60)
style.forth.98=$(colour.comment),$(font.comment),$(colour.forth.interpretation)
# ML comment (SCE_FORTH_IDENTIFIER+0x60)
style.forth.99=$(colour.comment),$(font.comment),bold,$(colour.forth.interpretation)
# control (SCE_FORTH_CONTROL+0x60)
style.forth.100=fore:#800080,bold,$(colour.forth.interpretation)
# Keywords (SCE_FORTH_KEYWORD+0x60)
style.forth.101=$(colour.keyword),bold,$(colour.forth.interpretation)
# defwords (SCE_FORTH_DEFWORD+0x60)
style.forth.102=fore:#FF0000,bold,back:#C0DCC0
# preword1 (SCE_FORTH_PREWORD1+0x60)
style.forth.103=fore:#CC3300,bold,$(colour.forth.interpretation)
# preword2 (SCE_FORTH_PREWORD2+0x60)
style.forth.104=fore:#996633,bold,$(colour.forth.interpretation)
# number (SCE_FORTH_NUMBER+0x60)
style.forth.105=$(colour.number),$(colour.forth.interpretation)
# Double quoted string (SCE_FORTH_STRING+0x60)
style.forth.106=$(colour.string),$(colour.forth.interpretation)
# locale (SCE_FORTH_LOCALE+0x60)
style.forth.107=$(colour.comment),$(colour.forth.interpretation)
# GUI (SCE_FORTH_GUI+0x60)
style.forth.108=fore:#007F99,bold,$(colour.forth.interpretation)
# OOP (SCE_FORTH_OOP+0x60)
style.forth.109=fore:#990000,bold,$(colour.forth.interpretation)
# User defined words 1 (SCE_FORTH_WORD1+0x60)
style.forth.110=fore:#006699,bold,$(colour.forth.interpretation)
# User defined words 2 (SCE_FORTH_WORD2+0x60)
style.forth.111=fore:#999000,bold,$(colour.forth.interpretation)
# User defined words 3 (SCE_FORTH_WORD3+0x60)
style.forth.112=fore:#005555,bold,$(colour.forth.interpretation)
# User defined words 4 (SCE_FORTH_WORD4+0x60)
style.forth.113=fore:#555555,bold,$(colour.forth.interpretation)

# =========================================================
# ѕодключение файла сокращений
abbreviations.$(file.patterns.forth)=$(SciteDefaultHome)\abbrev\forth.abbrev

# ѕодключение файла автодополнени€ и всплывающих подсказок по синтаксису
api.$(file.patterns.forth)=$(SciteDefaultHome)\api\forth.api

# —имволы, из которых стро€тс€ операторы €зыка (используетс€ дл€ всплывающей подсказки)
calltip.forth.word.characters=$(chars.alpha)$(chars.numeric)$(chars.accented)._-><=%!?@#:
