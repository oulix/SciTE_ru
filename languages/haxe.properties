file.patterns.haxe=*.hx
filter.haxe=haXe (hx)|$(file.patterns.haxe)|
lexer.$(file.patterns.haxe)=cpp
keywordclass.haxe=function class var if else while do for break continue return extends implements import switch case default \
	static public private try catch new this throw extern enum in interface untyped package null true false override
keywords.$(file.patterns.haxe)=$(keywordclass.haxe)
keywords2.$(file.patterns.haxe)= \
	haxe.remoting.AsyncConnection urlConnect onError call  \
	neko.db.Connection request quote lastInsertId hasFeature escape close  \
	neko.Lib unserialize serialize rethrow print makeString load copyBytes  \
	neko.db.SqliteConnection request quote lastInsertId hasFeature escape close new  \
	neko.db.ResultSet results nfields next length hasNext getResult getIntResult getFloatResult  \
	neko.db.SqliteResultSet results nfields next length hasNext getResult getIntResult getFloatResult new  \
	neko.db.Sqlite open  \
	haxe.Http request url setParameter setHeader request onStatus onError onData new  \
	neko.NekoDate__ toString getTime getSeconds getMonth getMinutes getHours getFullYear getDate new  \
	String toUpperCase toString toLowerCase substr split length lastIndexOf indexOf charCodeAt charAt new  \
	List toString remove push pop map length last join iterator isEmpty first filter clear add new  \
	Void  \
	Float  \
	Int  \
	Bool  \
	Dynamic  \
	Iterator  \
	neko.Sys time systemName stdout stdin stderr sleep setTimeLocale setCwd putEnv getEnv getCwd exit executablePath environment command args  \
	neko.Web setReturnCode setHeader setCookie redirect isModNeko getURI getPostData getParamsString getParams getHostName getCwd getCookies getClientIP getClientHeader getAuthorization cacheModule  \
	haxe.Serializer run toString serializeException serialize bytes new  \
	neko.zip.Uncompress run setFlushMode run close new  \
	neko.Random setSeed int float new  \
	neko.zip.Flush  \
	haxe.unit.TestStatus success posInfos method error done classname backtrace new  \
	haxe.unit.TestRunner run add new  \
	Array unshift toString splice sort slice shift reverse remove push pop length join iterator insert copy concat new  \
	neko.NekoArray__ unshift toString splice sort slice shift reverse remove push pop length join iterator insert copy concat  \
	neko.FileStat  \
	neko.FileKind  \
	neko.FileSystem stat rename readDir kind isDirectory fullPath exists deleteFile deleteDir createDir  \
	BasicType  \
	Class  \
	Reflect typeof setPrototype setField resolveEnum resolveClass isFunction hasField getClass fields field empty deleteField createInstance copy callMethod  \
	neko.NekoMath__  \
	IntIter next hasNext new  \
	Math tan sqrt sin round random pow min max log isNaN isFinite floor exp cos ceil atan2 atan asin acos abs POSITIVE_INFINITY PI NaN NEGATIVE_INFINITY  \
	neko.db.MysqlResultSet result_set_conv_date results nfields next length hasNext getResult getIntResult getFloatResult new  \
	Date now fromTime fromString toString getTime getSeconds getMonth getMinutes getHours getFullYear getDate new  \
	neko.db.MysqlConnection request quote lastInsertId hasFeature escape close new  \
	neko.db.Mysql connect  \
	neko.zip.Compress run setFlushMode run close new  \
	XmlType  \
	neko.NekoXml__ toString set removeChild remove nodeValue nodeType nodeName iterator insertChild get firstElement firstChild exists elementsNamed elements attributes addChild  \
	Xml parse createProlog createPCData createElement createDocument createDocType createComment createCData Prolog PCData Element Document DocType Comment CData toString set removeChild remove nodeValue nodeType nodeName iterator insertChild get firstElement firstChild exists elementsNamed elements attributes addChild  \
	haxe.Timer delayedArg delayed stop run new  \
	IntHash toString set remove keys iterator get exists new  \
	Hash toString set remove keys iterator get exists new  \
	neko.db.Manager initialize cnx cleanup search results result quote objects objectToString object getWithKeys getReadOnly get doUpdate doSync doInsert doDelete count all new  \
	haxe.TemplateExpr  \
	EReg split replace matchedRight matchedPos matchedLeft matched match new  \
	haxe.Template globals execute new  \
	haxe.remoting.Connection urlConnect call  \
	haxe.remoting.Server setPrivatePrefix resolvePath handleRequest addObject new  \
	Md5 encode  \
	StringBuf toString addSub addChar add new  \
	neko.db.Feature  \
	haxe.PosInfos  \
	Lambda map list iter fold count array amap  \
	haxe.remoting.Proxy  \
	haxe.remoting.AsyncDebugConnection onResult onErrorDisplay onCall call new  \
	neko.Utf8 validate sub length iter encode decode compare charCodeAt  \
	neko.db.Transaction main isDeadlock  \
	DateTools format delta  \
	haxe.Log trace clear  \
	neko.StackItem  \
	neko.Stack toString exceptionStack callStack  \
	haxe.remoting.AsyncProxy  \
	Std string resource random parseInt parseFloat ord is int chr bool  \
	haxe.remoting.SocketError  \
	haxe.remoting.SocketBuffer START_SIZE MAX_SIZE read onXmlData onData lastRead bufferData new  \
	haxe.remoting.InternalData  \
	haxe.remoting.DelayedConnection create connection call  \
	haxe.remoting.SocketConnection socketConnect processMessage call  \
	haxe.TypeResolver  \
	haxe.Unserializer run DEFAULT_RESOLVER unserialize setResolver new  \
	neko.zip.ZipEntry  \
	neko.zip.File unzip read  \
	neko.db.Object update toString sync insert delete new  \
	neko.File write read getContent append writeSub writeChar write tell seekEnd seekBegin seek readChar readBuf read name flush eof close  \
	haxe.unit.TestResult toString add new  \
	neko.NekoString__ toUpperCase toString toLowerCase substr split length lastIndexOf indexOf charCodeAt charAt  \
	haxe.unit.TestCase tearDown setup currentTest new  \
	tools.Url make index extension buffer base  \
	tools.DocType  \
	tools.DocField type name methToString link isVar isStatic doc new  \
	tools.DocClass toString spath path params name module isPrivate fields doc new  \
	tools.DocEnum new  \
	tools.DocSign t new  \
	tools.DocEntry  \
	tools.DocView main  \
	neko.Boot  \
	neko.Host  \
	neko.Socket select reverse resolve localhost hostToString write waitForRead shutdown setTimeout setBlocking sendChar send receiveChar receive readUntil readLine read peer listen host connect close bind accept new  \
	StringTools urlEncode urlDecode trim startsWith rtrim rpad replace ltrim lpad isSpace htmlUnescape htmlEscape endsWith 	

api.$(file.patterns.haxe)=/usr/local/share/scite/haxe.api
calltip.cpp.end.definition=;
