# Define SciTE settings for Euphoria files.

# The Eiffel file extension conflicts with Euphoria if you use Euphoria and don't use
# Eiffel just comment out the the Eiffel references in SciTEGlobal.properties otherwise
# avoid using the .e extension as it will be assigned to Eiffel.
if PLAT_WIN
	file.patterns.euphoria=*.e;*.ew;*.ex;*.exw
	filter.euphoria=Euphoria (e ew ex exw)|$(file.patterns.euphoria)|

if PLAT_GTK
	file.patterns.euphoria=*.e;*.eu;*.ex;*.exu
	filter.euphoria=Euphoria (e eu ex exu)|*.e;*.eu;*.ex;*.exu|

lexer.$(file.patterns.euphoria)=euphoria

####################################################
# Defining & Control of Flow
keywords.$(file.patterns.euphoria)=atom by constant do else elsif exit global \
include integer object return sequence then to with without \
end for function if procedure type while

# Boolean Operators
keywords2.$(file.patterns.euphoria)=and or xor not

# Builtin Routines
keywords3.$(file.patterns.euphoria)=abort and_bits append arctan atom call \
c_func c_proc call_func call_proc clear_screen close command_line compare cos \
date equal find floor get_key get_pixel getc getenv gets integer length log \
machine_func machine_proc match mem_copy mem_set not_bits object open or_bits \
peek peek4s peek4u pixel platform poke poke4 position power prepend print \
printf profile puts rand remainder repeat routine_id sequence sin sprintf sqrt \
system system_exec tan time trace xor_bits warning

# Library Routines
keywords4.$(file.patterns.euphoria)=call_back define_c_func define_c_proc \
define_c_var free_console open_dll allow_break chdir check_break current_dir \
dir flush lock_file seek unlock_file walk_dir where get get_bytes \
prompt_number prompt_string value wait_key all_palette bk_color cursor \
draw_line ellipse get_position graphics_mode palette polygon scroll sound \
text_color text_rows video_config wrap display_image display_text_image \
get_active_page get_all_palette get_display_page get_screen_char \
put_screen_char read_bitmap save_bitmap save_image save_screen save_text_image \
set_active_page set_display_page allocate allocate_low allocate_string \
atom_to_float32 atom_to_float64 bits_to_int bytes_to_int crash_file \
crash_message dos_interrupt float32_to_atom float64_to_atom free free_low \
get_vector int_to_bits int_to_bytes lock_memory register_block set_rand \
set_vector tick_rate unregister_block use_vesa message_box arccos arcsin \
instance PI reverse sleep sprint get_mouse mouse_events mouse_pointer \
custom_sort sort lower upper wildcard_file wildcard_match

# Free for User Library
keywords5.$(file.patterns.euphoria)=string boolean TRUE FALSE SCREEN \
os_LineDelim os_PathDelim
# keywords6.$(file.patterns.euphoria)=
# keywords7.$(file.patterns.euphoria)=
# keywords8.$(file.patterns.euphoria)=


statement.indent.$(file.patterns.euphoria)=10 then elsif do else function procedure type
statement.end.$(file.patterns.euphoria)=10 end elsif
statement.lookback.$(file.patterns.euphoria)=20
block.start.$(file.patterns.euphoria)=10 then do else
block.end.$(file.patterns.euphoria)=10 end elsif else
# comment out the previous 5 lines before uncommenting next line editor will keep indent same as previous
indent.maintain$(file.patterns.euphoria)=1
####################################################

comment.block.euphoria=--
comment.stream.start.euphoria=/*
comment.stream.end.euphoria=*/
comment.box.start.euphoria=--<<--
comment.box.middle.euphoria=--
comment.box.end.euphoria=-->>--
comment.stream.start.euphoria=/*
comment.stream.end.euphoria=*/
#comment.block.at.line.start.euphoria=1

# Euphoria styles
####################################################
# Default
style.euphoria.32=
# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.euphoria.0=$(colour.whitespace)
#style.euphoria.0=
# Line comment
style.euphoria.1=$(font.comment),$(colour.comment)
# Number
style.euphoria.2=$(colour.number)
# Hex Number
style.euphoria.3=fore:#00B0B0
# String
style.euphoria.4=$(colour.string)
# Character
style.euphoria.5=$(colour.char),bold
# End of line where string is not closed
style.euphoria.6=back:#FFE9E9,eolfilled
# Identifier (everything else...) all keywords fall under this category
# the lexer assigns a style based on the list or the default style 32
style.euphoria.7=
# Operators
style.euphoria.8=$(colour.operator),bold

# Keywords
# Defining & Control of Flow
style.euphoria.10=$(colour.keyword),bold
# Boolean Operators (and or xor not)
style.euphoria.11=fore:#9D009D
# Builtins Routines
style.euphoria.12=fore:#156CC4
# Library Routines
style.euphoria.13=fore:#C29C00
# User assigned Library
##style.euphoria.14=fore:#005533
style.euphoria.14=fore:#C05000
style.euphoria.15=fore:#005533
style.euphoria.16=fore:#005533
style.euphoria.17=fore:#005533
# Stream comment
style.euphoria.18=$(font.comment),$(colour.comment)

# Braces are matched in operator style
braces.euphoria.style=8
####################################################

if PLAT_WIN
	command.compile.$(file.patterns.euphoria)=$(SciteDefaultHome)\tools\PSPCmp.bat EU "$(FilePath)"
	command.compile.subsystem.$(file.patterns.euphoria)=2

	command.build.$(file.patterns.euphoria)=$(SciteDefaultHome)\tools\PSPCmp.bat EU "$(FilePath)" build
	command.build.subsystem.$(file.patterns.euphoria)=2
	command.build.directory.$(file.patterns.euphoria)="$(FileDir)"

	command.go.$(file.patterns.euphoria)=$(SciteDefaultHome)\tools\PSPCmp.bat EU "$(FilePath)" run
	command.go.subsystem.$(file.patterns.euphoria)=2

  	command.help.$(file.patterns.euphoria)=$(CurrentWord)!$(EUDIR)\Docs2\euphoria.chm
	command.help.subsystem.$(file.patterns.euphoria)=4

	#~ command.name.0.$(file.patterns.euphoria)=EX
	#~ command.0.$(file.patterns.euphoria)=* ex.exe "$(FilePath)"
	#~ command.subsystem.0.$(file.patterns.euphoria)=1

	#~ command.name.1.$(file.patterns.euphoria)=EXW
	#~ command.1.$(file.patterns.euphoria)=* exw.exe "$(FilePath)"
	#~ command.subsystem.1.$(file.patterns.euphoria)=1
	#~ #command.replace.selection.1.$(file.patterns.euphoria)=2

if PLAT_GTK
	command.go$(file.patterns.euphoria)=exu.exe "$(FileNameExt)"
	command.help=netscape "file://$(EUDIR)/REFMAN.HTM"

open.suffix.*.err=
open.suffix.$(file.patterns.euphoria)=.e

eu_open_path=$(EUDIR)\;$(EUDIR)\BIN\;$(EUDIR)\INCLUDE\;$(EUDIR)\INC\;$(EUDIR)\scintilla\;$(FilePath);$(SessionPath)

openpath.*.err=$(eu_open_path)
openpath.$(file.patterns.euphoria)=$(eu_open_path)

# =========================================================
# Подключение файла сокращений
#abbreviations.$(file.patterns.euphoria)=$(SciteDefaultHome)\abbrev\euphoria.abbrev

# Подключение файла автодополнения и всплывающих подсказок по синтаксису
api.$(file.patterns.euphoria)=$(SciteDefaultHome)\api\euphoria.api
